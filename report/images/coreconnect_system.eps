%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 7.0
%%AI8_CreatorVersion: 10.0
%%For: (Exjobbare) (Exjobbare)
%%Title: (coreconnect_system.eps)
%%CreationDate: 5/21/2003 8:48 PM
%%BoundingBox: 93 314 505 545
%%HiResBoundingBox: 93 314.8896 504.2803 544.7998
%%DocumentProcessColors: Black
%%DocumentFonts: Arial-BoldMT
%%DocumentSuppliedFonts: Arial-BoldMT
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_typography_AI5 1.0 1
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%AI5_FileFormat 3.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 298.5 420.3896 298.5 420.3896
%AI3_TileBox: 13 13 582 829
%AI3_DocumentPreview: Header
%AI5_ArtSize: 595.4457 841.8898
%AI5_RulerUnits: 1
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -189 715.8896 1 1002 636 26 0 1 11 68 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:13 13
%%AI3_PaperRect:-13 829 582 -13
%%AI3_Margin:13 -13 -13 13
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(6/10/1996) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 68 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/havefont
{
	systemdict /languagelevel known
		{
		/Font resourcestatus dup
			{ exch pop exch pop }
		if
		}
		{
		systemdict /FontDirectory get 1 index known
			{ pop true }
			{
			systemdict /fileposition known
				{
				dup length 6 add exch
				Ss 6 250 getinterval
				cvs pop
				Ss exch 0 exch getinterval
				status
					{ pop pop pop pop true }
					{ false }
				ifelse
				}
				{
				pop false
				}
			ifelse
			}
		ifelse
		}
	ifelse
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
/subststring {
	exch 2 index exch search
	{
		exch pop
		exch dup () eq
		{
			pop exch concatstring
		}
		{
			3 -1 roll
			exch concatstring
			concatstring
		} ifelse
		exch pop true
	}
	{
		pop pop false
	} ifelse
} def
/concatstring {
	1 index length 1 index length
	1 index add
	string
	dup 0 5 index putinterval
	dup 2 index 4 index putinterval
	4 1 roll pop pop pop
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	2 index havefont
	{
		3 index
		255 string
		cvs
		
		dup
		(_Symbol_)
		eq
		{
			pop
			2 index
			findfont
			
		}
		{
			1 index 0 eq
			{
				dup length 1 sub
				1 exch
				getinterval
				
				cvn
				findfont
			}
			{
				pop 2 index findfont
			} ifelse
		} ifelse
	}
	{
		dup 1 eq
		{
			2 index 64 string cvs
			dup (-90pv-RKSJ-) (-83pv-RKSJ-) subststring
			{
				exch pop dup havefont
				{
					findfont false
				}
				{
					pop true
				} ifelse
			}
			{
				pop	dup
				(-90ms-RKSJ-) (-Ext-RKSJ-) subststring
				{
					exch pop dup havefont
					{
						findfont false
					}
					{
						pop true
					} ifelse
				}
				{
					pop pop true
				} ifelse
			} ifelse
			{
				1 index 1 eq
				{
					/Ryumin-Light-Ext-RKSJ-V havefont
					{/Ryumin-Light-Ext-RKSJ-V}
					{/Courier}
					ifelse
				}
				{
					/Ryumin-Light-83pv-RKSJ-H havefont
					{/Ryumin-Light-83pv-RKSJ-H}
					{/Courier}
					ifelse
				} ifelse
				findfont
				[1 0 0.5 1 0 0] makefont
			} if
		}
		{
			/Courier findfont
		} ifelse
	} ifelse
	_wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 10 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontScript exch def
	/FontDirection exch def
	/FontRequest exch def
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
W B
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
W F 
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
W S
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat
	_shift aload pop _lineorientation 1 eq { exch } if translate
	_scale aload pop _lineorientation 1 eq _yokoorientation 1 eq or { exch } if scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	1 index type /nametype eq
	{
		dup 0.75 mul 1 index 0.25 mul neg
	} if
	/_fontDescent exch ddef
	/_fontAscent exch ddef
	/_fontSize exch ddef
	/_fontRotateAdjust _fontAscent _fontDescent add 2 div neg ddef
	/_fontHeight _fontSize ddef
	findfont _fontSize scalefont setfont
} def
/Tl
{
	pop neg 0 exch
	_leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	0 exch
	_shift astore pop
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	count 1 eq { 100 } if
	100 div exch 100 div exch
	_scale astore pop
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Tg
{
	pop
} def
/TG
{
	pop
} def
/Tv
{
	/_lineorientation exch ddef
} def
/TV
{
	/_charorientation exch ddef
} def
/Ty
{
	dup /_yokoorientation exch ddef 1 sub neg Tv
} def
/TY
{
	pop
} def
/T~
{
	Tx
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	_fontSize mul 1000 div
	_lineorientation 0 eq { neg 0 } { 0 exch } ifelse
	rmoveto
	pop
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	Td
} def
/T*-
{
	_leading aload pop
	_lineorientation 0 ne { exch } if
	exch neg exch neg
	Td
} def
/T-
{
	_ax neg 0 rmoveto
	_lineorientation 1 eq _charorientation 0 eq and { 1 TV _hyphen Tx 0 TV } { _hyphen Tx } ifelse
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ findfont _fontSize scalefont setfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%
/X^
{
	currentfont 5 1 roll
	dup havefont
		{
		findfont _fontSize scalefont setfont
		}
		{
		pop
		exch
		} ifelse
	2 index 0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	pop	pop
	setfont
} def
/T^	/X^	load def
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.2 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 50 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 40 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIDataProc null def
	/XIVersion 6 def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
end
currentdict /_colorimage known not {
	/colorimage where {
		/colorimage get /_colorimage exch def
	}{
		/_colorimage null def
	} ifelse
} if
/_image systemdict /image get def
/_currenttransfer systemdict /currenttransfer get def
/FourEqual {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual { 
				/plateindex 0 def
			}{
				0 1 0 0 FourEqual { 
					/plateindex 1 def
				}{
					0 0 1 0 FourEqual {
						/plateindex 2 def
					}{
						0 0 0 1 FourEqual { 
							/plateindex 3 def
						}{
							0 0 0 0 FourEqual {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/clrspaceissepn {
	type /arraytype eq 
} def
/clrspacegetname {
	dup clrspaceissepn {dup length 2 sub get}{pop ()} ifelse
} def
/clrspacegetalt {
	aload pop pop pop colormake
} def
/clrspacegetcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/clrspacemarksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				/findcmykcustomcolor where {
					pop
					dup length 2 sub get
					0.1 0.1 0.1 0.1 5 -1 roll
					findcmykcustomcolor 1 setcustomcolor
					systemdict /currentgray get exec
					1 ne
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/colormake {
	dup clrspacegetcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/colorexpand {
	dup clrspacegetname exch
	dup clrspaceissepn {
		clrspacegetalt
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				clrspacegetalt colortint colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/WalkRGBString {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/CMYKToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/SeparateCMYKImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne {
			sourcearray plateindex get exec
		}{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub {
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/ColorImageCompositeEmulator {
	pop true eq {
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne {
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq {/RGBToGrayImageProc}{/CMYKToGrayImageProc} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/colorimage {
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index
 end
	
	dup 8 eq exch 1 eq or not {
		/_colorimage load null ne {
			_colorimage
		}{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}{
		dup 3 eq TestPlateIndex dup -1 eq exch 5 eq or or {
			/_colorimage load null eq {
				ColorImageCompositeEmulator
			}{
				dup 1 eq {
					pop pop image
				}{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						grestore
					} if
				} ifelse
			} ifelse
		}{
			dup 1 eq {
				pop pop
				image
			}{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0 {			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace clrspacegetcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] makeimagedict _image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] makeimagedict _image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} stringapply
			} concatprocs _image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} stringapply
			} concatprocs false _pticomps
			/_colorimage load null eq {7 {pop} repeat}{_colorimage} ifelse
		} ifelse
	} ifelse
} def
/graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray proctintimage
} def
/cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK proctintimage
} def
/rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB proctintimage
} def
/tintimage {
	TestPlateIndex -1 eq {
		colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop graytintimage
		}{
			dup /DeviceRGB eq {
				pop rgbtintimage
			}{
				pop cmyktintimage
			} ifelse
		} ifelse
	}{
		dup clrspacemarksplate {
			plateindex 5 lt {
				colortocmyk plateindex get 1 exch sub
				exch {1 0}{0 1} ifelse () graytintimage
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () graytintimage
			} ifelse
		}{
			pop pop pop
			{pop 1} 0 1 () /DeviceGray proctintimage
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace tintimage
} def
/XIImage {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIChannelCount 1 eq {image}{false XIChannelCount colorimage} ifelse
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIType 1 eq {
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEncoding 0 ne XIVersion 6 le and {
			currentfile 128 string readline pop pop
		} if
		XICompression 0 eq {
			/XIBuffer1 XIRowBytes string def
			XIEncoding 0 eq {
				{currentfile XIBuffer1 readhexstring pop}
			}{
				{currentfile XIBuffer1 readstring pop}
			} ifelse
		}{
			/XIBuffer1 256 string def
			/XIBuffer2 XIRowBytes string def
			{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
			/ASCIIHexDecode filter /DCTDecode filter
			/XIFile exch def
			{XIFile XIBuffer2 readstring pop}
		} ifelse
		/XIDataProc exch def
		
		XIVersion 6 le {
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIType 1 eq {
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		XIEnable {
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 7.0 Full Prolog)
%%Version: 1.2 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 107 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XA
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/_rgbtocmyk
{
3
	{
	1 exch sub 3 1 roll
	} repeat
3 copy 1 4 1 roll
3
	{
	3 index 2 copy gt
		{
		exch
		} if
	pop 4 1 roll
	} repeat
pop pop pop
4 1 roll
3
	{
	3 index sub
	3 1 roll
	} repeat
4 -1 roll
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq
	{
		findcmykcustomcolor
	}
	{
		/findrgbcustomcolor where not {
			4 1 roll _rgbtocmyk
			5 -1 roll
			findcmykcustomcolor
		}
		{
			pop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRider
currentpacking true setpacking
/Arial-BoldMT havefont not {
%%BeginFont: Arial-BoldMT
/Arial-BoldMT
15 dict dup begin
/FontName /Arial-BoldMT def
/FontType 3 def
/FontMatrix [ 0.000977 0 0 0.000977 0 0 ] def
/FontAscent 1024 def
/FontDescent -386 def
/FontScript 0 def
/FontBBox [ 0 -512 1024 1024 ] def
/Encoding 256 array dup 0 1 255 { /.notdef put dup } for pop def
/l /lineto load def
/m /moveto load def
/c /curveto load def
/BuildChar {
	Adobe_Illustrator_AI5_vars exch /_bitlobyte exch put
	Adobe_Illustrator_AI5_vars exch /_bitfont exch put
	Adobe_Illustrator_AI5_vars /_bithibyte 0 put

	_bitlobyte 16 4 string cvrs dup length (K) dup length
	dup 4 -1 roll add string Adobe_Illustrator_AI5_vars exch /_bitkey exch put
	exch _bitkey copy pop _bitkey exch 3 -1 roll putinterval
	_bitfont /CharMetrics get _bitkey cvn get dup type /arraytype
	eq { aload pop setcachedevice }
	{ 0 setcharwidth } ifelse
	_bitfont /CharStrings get _bitkey cvn get exec
} bind def
50 dict dup begin
/KA {
} bind def
/KD {
} bind def
/K20 {
} bind def
/K28 {
{
newpath
246 -69 m
228 -18 214 37 204 94 c
194 152 189 208 189 263 c
189 342 198 417 215 488 c
232 559 263 645 309 746 c
213 746 l
169 683 132 614 104 539 c
71 453 54 362 54 266 c
54 188 67 107 94 24 c
120 -59 159 -139 210 -216 c
307 -216 l
278 -152 257 -103 246 -69 c
246 -69 l
closepath
} exec
fill
} bind def
/K29 {
{
newpath
132 -216 m
189 -129 230 -41 255 49 c
277 129 288 203 288 273 c
288 356 274 437 246 518 c
218 598 179 674 129 746 c
33 746 l
79 645 110 559 127 488 c
144 417 153 342 153 263 c
153 223 151 185 146 148 c
141 111 134 72 125 30 c
115 -11 105 -48 93 -79 c
82 -111 63 -157 35 -216 c
132 -216 l
closepath
} exec
fill
} bind def
/K2D {
{
newpath
333 196 m
333 337 l
58 337 l
58 196 l
333 196 l
closepath
} exec
fill
} bind def
/K2F {
{
newpath
102 -13 m
286 746 l
181 746 l
-1 -13 l
102 -13 l
closepath
} exec
fill
} bind def
/K30 {
{
newpath
115 661 m
67 600 43 501 43 363 c
43 222 65 124 109 69 c
152 14 210 -13 281 -13 c
352 -13 407 12 447 62 c
495 123 519 222 519 361 c
519 500 495 600 448 660 c
408 711 352 736 281 736 c
210 736 155 711 115 661 c
115 661 l
closepath
326 603 m
339 592 350 570 358 538 c
367 506 371 447 371 361 c
371 275 366 214 357 178 c
349 150 339 131 326 120 c
313 109 298 104 281 104 c
264 104 249 109 236 120 c
223 131 212 152 204 184 c
195 216 191 275 191 361 c
191 447 196 508 205 545 c
213 573 223 592 236 603 c
249 614 264 619 281 619 c
298 619 313 614 326 603 c
closepath
} exec
fill
} bind def
/K31 {
{
newpath
404 736 m
290 736 l
274 691 244 652 201 618 c
158 585 118 562 81 550 c
81 422 l
151 445 212 481 263 529 c
263 0 l
404 0 l
404 736 l
closepath
} exec
fill
} bind def
/K32 {
{
newpath
239 131 m
246 144 256 157 268 170 c
280 183 308 210 352 251 c
396 292 427 323 444 344 c
470 377 488 408 500 438 c
512 468 518 499 518 532 c
518 590 497 639 456 678 c
415 717 358 736 286 736 c
220 736 165 719 121 685 c
77 651 51 596 43 518 c
183 504 l
186 545 196 575 213 592 c
230 610 253 619 282 619 c
312 619 335 611 352 594 c
369 577 377 553 377 522 c
377 493 367 465 348 436 c
334 415 295 375 232 316 c
153 243 101 184 74 140 c
47 96 31 49 26 0 c
518 0 l
518 131 l
239 131 l
closepath
} exec
fill
} bind def
/K33 {
{
newpath
115 44 m
159 6 214 -13 280 -13 c
350 -13 409 10 456 55 c
503 100 526 155 526 219 c
526 264 513 302 488 333 c
463 364 430 384 388 393 c
458 432 493 483 493 548 c
493 593 476 634 442 670 c
400 714 345 736 276 736 c
235 736 199 728 167 713 c
134 698 109 677 91 650 c
73 623 59 588 50 543 c
180 521 l
184 553 194 577 211 594 c
228 611 248 619 272 619 c
296 619 316 612 330 597 c
345 582 352 563 352 538 c
352 509 342 486 322 469 c
302 451 273 443 235 444 c
220 331 l
245 338 266 341 284 341 c
312 341 335 331 354 310 c
373 289 382 261 382 226 c
382 189 372 159 352 137 c
332 115 308 104 279 104 c
252 104 229 113 210 132 c
191 150 179 176 175 211 c
39 195 l
46 133 71 83 115 44 c
closepath
} exec
fill
} bind def
/K34 {
{
newpath
455 0 m
455 148 l
546 148 l
546 271 l
455 271 l
455 736 l
337 736 l
19 271 l
19 148 l
319 148 l
319 0 l
455 0 l
closepath
151 271 m
319 520 l
319 271 l
151 271 l
closepath
} exec
fill
} bind def
/K38 {
{
newpath
71 319 m
51 285 41 249 41 209 c
41 137 67 80 120 39 c
164 4 220 -14 287 -14 c
358 -14 416 7 459 50 c
502 92 524 147 524 215 c
524 256 513 293 492 324 c
471 355 440 379 399 396 c
431 410 456 430 474 456 c
491 483 500 513 500 547 c
500 602 481 647 442 683 c
404 718 350 736 280 736 c
210 736 155 718 117 683 c
79 647 60 602 60 547 c
60 515 68 486 85 459 c
101 432 128 411 164 396 c
121 378 90 352 71 319 c
closepath
217 600 m
233 616 255 624 282 624 c
308 624 328 616 344 600 c
360 585 368 564 368 537 c
368 509 360 487 344 472 c
328 456 307 448 280 448 c
254 448 233 456 217 471 c
201 487 193 509 193 537 c
193 563 201 584 217 600 c
closepath
205 300 m
222 324 248 336 282 336 c
312 336 337 326 356 305 c
375 284 385 256 385 221 c
385 182 375 151 356 130 c
337 109 313 99 284 99 c
255 99 230 110 210 132 c
190 154 180 184 180 223 c
180 251 188 276 205 300 c
closepath
} exec
fill
} bind def
/K41 {
{
newpath
443 733 m
286 733 l
0 0 l
157 0 l
218 167 l
511 167 l
575 0 l
736 0 l
443 733 l
closepath
263 291 m
363 562 l
464 291 l
263 291 l
closepath
} exec
fill
} bind def
/K42 {
{
newpath
75 0 m
325 0 l
419 1 478 2 503 5 c
542 9 575 21 602 40 c
629 59 650 84 666 115 c
681 147 689 179 689 213 c
689 255 677 292 653 323 c
629 355 595 377 550 390 c
582 404 607 426 625 454 c
644 483 653 514 653 549 c
653 580 646 609 631 634 c
616 660 597 680 574 696 c
552 711 526 721 498 726 c
469 731 426 733 368 733 c
75 733 l
75 0 l
closepath
308 611 m
378 611 420 610 435 609 c
459 606 478 597 490 583 c
503 569 509 550 509 528 c
509 504 502 485 487 471 c
473 456 453 447 428 445 c
414 443 378 442 320 442 c
223 442 l
223 611 l
308 611 l
closepath
343 320 m
410 320 454 317 474 310 c
494 303 509 291 520 276 c
531 261 536 242 536 220 c
536 194 529 173 515 158 c
501 142 484 133 462 129 c
447 126 413 124 360 124 c
223 124 l
223 320 l
343 320 l
closepath
} exec
fill
} bind def
/K43 {
{
newpath
482 152 m
454 127 420 114 381 114 c
328 114 285 134 252 173 c
219 212 202 278 202 371 c
202 458 219 522 253 561 c
286 600 330 619 384 619 c
423 619 457 608 484 586 c
511 564 529 534 538 496 c
685 531 l
668 590 643 635 610 666 c
554 719 481 746 392 746 c
289 746 206 712 143 645 c
80 577 49 482 49 360 c
49 245 80 153 143 87 c
206 20 285 -13 383 -13 c
461 -13 526 7 577 46 c
628 85 665 144 687 225 c
543 270 l
531 216 510 177 482 152 c
closepath
} exec
fill
} bind def
/K44 {
{
newpath
75 0 m
353 0 l
408 0 452 5 484 16 c
528 30 562 49 588 74 c
622 107 648 150 667 204 c
682 247 689 299 689 360 c
689 428 681 486 665 533 c
649 580 626 619 595 652 c
564 684 528 706 485 719 c
453 728 406 733 345 733 c
75 733 l
75 0 l
closepath
289 609 m
350 609 390 607 411 602 c
438 596 461 585 479 568 c
497 551 511 527 521 497 c
531 466 536 423 536 366 c
536 310 531 265 521 232 c
511 199 498 176 482 161 c
467 147 447 137 423 131 c
404 126 375 124 333 124 c
223 124 l
223 609 l
289 609 l
closepath
} exec
fill
} bind def
/K45 {
{
newpath
632 0 m
632 124 l
223 124 l
223 323 l
590 323 l
590 447 l
223 447 l
223 609 l
618 609 l
618 733 l
75 733 l
75 0 l
632 0 l
closepath
} exec
fill
} bind def
/K46 {
{
newpath
223 0 m
223 312 l
529 312 l
529 436 l
223 436 l
223 609 l
578 609 l
578 733 l
75 733 l
75 0 l
223 0 l
closepath
} exec
fill
} bind def
/K47 {
{
newpath
585 269 m
585 176 l
563 159 536 144 505 132 c
474 120 443 114 412 114 c
349 114 299 136 260 179 c
221 223 202 288 202 375 c
202 456 221 517 259 558 c
297 599 349 619 413 619 c
456 619 491 609 520 588 c
548 567 568 538 578 502 c
725 530 l
710 597 677 650 626 689 c
575 727 504 746 413 746 c
343 746 285 734 238 709 c
176 678 129 632 97 573 c
65 513 49 445 49 369 c
49 299 63 233 92 174 c
121 114 164 68 221 35 c
278 3 345 -13 421 -13 c
482 -13 541 -2 600 21 c
659 44 704 71 735 101 c
735 393 l
416 393 l
416 269 l
585 269 l
closepath
} exec
fill
} bind def
/K49 {
{
newpath
218 0 m
218 733 l
70 733 l
70 0 l
218 0 l
closepath
} exec
fill
} bind def
/K4C {
{
newpath
595 0 m
595 124 l
227 124 l
227 727 l
79 727 l
79 0 l
595 0 l
closepath
} exec
fill
} bind def
/K4D {
{
newpath
210 0 m
211 577 l
355 0 l
498 0 l
644 577 l
644 0 l
781 0 l
781 733 l
559 733 l
428 233 l
294 733 l
73 733 l
73 0 l
210 0 l
closepath
} exec
fill
} bind def
/K4F {
{
newpath
142 87 m
206 20 293 -13 402 -13 c
509 -13 595 20 660 87 c
724 154 756 247 756 366 c
756 485 724 578 659 645 c
594 712 508 746 400 746 c
340 746 287 736 242 717 c
207 703 176 681 147 651 c
118 621 95 588 79 550 c
56 500 45 437 45 362 c
45 245 77 153 142 87 c
closepath
254 556 m
291 598 340 619 401 619 c
462 619 511 598 548 557 c
585 516 603 453 603 369 c
603 284 584 220 546 178 c
509 135 460 114 401 114 c
342 114 294 135 255 178 c
217 221 198 284 198 367 c
198 451 217 514 254 556 c
closepath
} exec
fill
} bind def
/K50 {
{
newpath
223 0 m
223 277 l
319 277 l
386 277 437 280 473 287 c
499 293 524 305 549 322 c
574 340 595 364 612 394 c
628 425 636 463 636 508 c
636 566 622 614 594 650 c
565 687 530 711 488 722 c
461 729 402 733 312 733 c
75 733 l
75 0 l
223 0 l
closepath
294 609 m
347 609 383 607 400 604 c
424 600 444 589 460 572 c
475 554 483 532 483 506 c
483 484 477 465 466 449 c
455 432 440 420 420 413 c
401 405 362 401 304 401 c
223 401 l
223 609 l
294 609 l
closepath
} exec
fill
} bind def
/K52 {
{
newpath
223 0 m
223 306 l
253 306 l
287 306 312 303 328 298 c
344 292 358 282 372 267 c
387 252 413 217 451 160 c
558 0 l
735 0 l
645 143 l
610 200 582 240 561 262 c
540 284 514 305 482 324 c
546 333 594 355 627 391 c
659 427 675 473 675 528 c
675 571 664 609 643 643 c
622 677 593 700 558 713 c
522 726 465 733 387 733 c
75 733 l
75 0 l
223 0 l
closepath
223 609 m
339 609 l
399 609 435 608 447 607 c
471 603 489 593 502 578 c
515 563 522 543 522 518 c
522 496 517 478 507 463 c
497 448 483 438 466 432 c
448 426 404 423 333 423 c
223 423 l
223 609 l
closepath
} exec
fill
} bind def
/K53 {
{
newpath
125 50 m
175 7 246 -14 339 -14 c
402 -14 455 -5 498 13 c
541 31 574 58 597 95 c
620 131 632 171 632 213 c
632 259 622 298 603 330 c
583 361 557 386 522 405 c
488 423 435 440 363 457 c
292 474 246 491 228 506 c
213 519 206 534 206 551 c
206 570 214 585 229 596 c
253 614 287 623 330 623 c
371 623 402 615 423 598 c
443 582 457 555 463 517 c
611 523 l
609 591 584 645 538 685 c
492 726 423 746 331 746 c
275 746 227 737 187 720 c
147 703 117 679 96 646 c
75 613 64 578 64 541 c
64 483 86 434 131 393 c
163 365 219 340 298 321 c
359 305 398 295 416 289 c
441 280 459 269 469 257 c
479 245 484 230 484 212 c
484 185 472 162 448 141 c
424 121 388 111 340 111 c
295 111 259 122 233 145 c
206 168 189 203 180 252 c
36 238 l
46 156 75 93 125 50 c
closepath
} exec
fill
} bind def
/K55 {
{
newpath
74 342 m
74 260 79 198 88 156 c
95 127 109 100 130 74 c
151 48 179 27 216 11 c
252 -5 305 -13 375 -13 c
433 -13 480 -6 516 9 c
552 24 580 44 602 69 c
623 94 638 125 646 161 c
654 197 658 260 658 348 c
658 733 l
510 733 l
510 328 l
510 270 508 228 504 203 c
499 178 486 157 465 140 c
444 123 412 114 370 114 c
329 114 296 123 273 141 c
249 159 234 184 227 214 c
224 232 222 273 222 336 c
222 733 l
74 733 l
74 342 l
closepath
} exec
fill
} bind def
/K58 {
{
newpath
177 0 m
341 249 l
503 0 l
681 0 l
428 383 l
658 733 l
487 733 l
341 514 l
197 733 l
24 733 l
254 382 l
0 0 l
177 0 l
closepath
} exec
fill
} bind def
/K61 {
{
newpath
213 420 m
227 430 246 435 271 435 c
308 435 333 429 346 418 c
359 406 366 386 366 359 c
366 345 l
341 334 295 323 230 311 c
181 301 144 290 119 278 c
93 266 73 248 58 224 c
44 201 37 174 37 144 c
37 99 53 62 84 32 c
116 3 159 -12 213 -12 c
244 -12 273 -6 301 6 c
328 17 354 35 378 58 c
379 55 380 50 383 42 c
388 23 392 9 396 0 c
535 0 l
523 25 514 49 510 71 c
505 93 503 128 503 175 c
505 339 l
505 400 499 441 486 464 c
474 487 452 506 422 521 c
391 536 344 543 282 543 c
213 543 161 531 126 506 c
91 481 66 442 52 390 c
179 367 l
188 392 199 410 213 420 c
closepath
366 225 m
366 192 364 170 361 158 c
355 140 344 124 327 112 c
304 95 281 87 255 87 c
233 87 214 94 200 108 c
185 122 178 139 178 159 c
178 178 187 195 205 208 c
217 215 242 224 281 232 c
320 240 348 247 366 253 c
366 225 l
closepath
} exec
fill
} bind def
/K62 {
{
newpath
199 0 m
199 78 l
220 48 246 26 275 11 c
304 -4 334 -12 365 -12 c
426 -12 478 13 521 62 c
564 111 586 180 586 271 c
586 359 565 426 523 473 c
480 520 427 543 363 543 c
303 543 252 518 209 469 c
209 733 l
68 733 l
68 0 l
199 0 l
closepath
241 396 m
263 422 291 435 325 435 c
359 435 387 422 409 395 c
431 368 442 324 442 264 c
442 207 431 165 409 139 c
387 112 361 99 330 99 c
290 99 257 118 233 155 c
216 181 207 222 207 277 c
207 330 218 370 241 396 c
closepath
} exec
fill
} bind def
/K63 {
{
newpath
455 501 m
417 529 365 543 301 543 c
222 543 159 519 113 470 c
66 421 43 353 43 265 c
43 178 66 111 112 62 c
158 13 220 -12 298 -12 c
366 -12 421 4 462 37 c
502 69 530 117 544 180 c
406 204 l
399 167 387 141 370 126 c
353 111 331 103 304 103 c
269 103 240 116 219 142 c
198 168 187 212 187 275 c
187 331 197 372 218 396 c
239 420 267 432 302 432 c
328 432 350 425 366 411 c
383 397 393 377 398 349 c
537 374 l
520 431 493 473 455 501 c
closepath
} exec
fill
} bind def
/K64 {
{
newpath
561 733 m
420 733 l
420 469 l
377 518 325 543 266 543 c
201 543 148 520 106 473 c
63 426 42 358 42 268 c
42 180 64 111 107 62 c
151 13 203 -12 264 -12 c
294 -12 324 -5 353 10 c
383 25 408 48 430 78 c
430 0 l
561 0 l
561 733 l
closepath
220 395 m
242 422 270 435 304 435 c
338 435 366 422 388 395 c
410 368 421 324 421 263 c
421 209 410 168 387 140 c
364 113 337 99 305 99 c
264 99 232 117 210 154 c
194 179 186 220 186 277 c
186 329 197 369 220 395 c
closepath
} exec
fill
} bind def
/K65 {
{
newpath
347 111 m
332 99 314 93 292 93 c
259 93 233 105 211 128 c
189 151 178 183 177 225 c
529 225 l
531 333 509 413 464 465 c
418 517 356 543 277 543 c
206 543 148 518 102 468 c
56 418 33 350 33 262 c
33 188 50 127 85 79 c
130 18 198 -12 290 -12 c
349 -12 397 1 436 28 c
475 55 503 94 521 145 c
381 169 l
373 142 362 123 347 111 c
closepath
180 311 m
179 349 189 379 209 402 c
229 424 254 435 285 435 c
313 435 338 424 358 403 c
378 382 388 352 389 311 c
180 311 l
closepath
} exec
fill
} bind def
/K67 {
{
newpath
60 -51 m
60 -99 78 -138 116 -169 c
154 -200 218 -216 308 -216 c
355 -216 395 -211 426 -201 c
457 -191 482 -177 501 -159 c
520 -142 534 -117 544 -86 c
555 -55 560 -9 560 54 c
560 531 l
428 531 l
428 456 l
385 514 331 543 266 543 c
202 543 149 520 106 473 c
63 426 42 358 42 269 c
42 198 58 138 91 91 c
133 30 189 0 260 0 c
324 0 377 29 420 87 c
419 9 l
419 -22 417 -44 413 -56 c
406 -72 397 -84 385 -91 c
366 -102 339 -108 302 -108 c
274 -108 253 -103 239 -93 c
230 -86 224 -73 221 -54 c
60 -34 l
60 -41 60 -46 60 -51 c
60 -51 l
closepath
219 396 m
240 422 268 435 302 435 c
336 435 365 422 387 395 c
410 369 421 328 421 273 c
421 221 409 181 386 154 c
362 127 333 114 299 114 c
267 114 240 127 219 153 c
197 179 186 220 186 277 c
186 330 197 370 219 396 c
closepath
} exec
fill
} bind def
/K68 {
{
newpath
72 733 m
72 0 l
213 0 l
213 266 l
213 310 217 344 226 367 c
234 390 248 407 266 418 c
284 429 305 435 328 435 c
349 435 365 431 379 422 c
392 413 402 401 407 386 c
412 371 415 336 415 280 c
415 0 l
556 0 l
556 312 l
556 359 554 394 549 417 c
544 440 535 460 522 479 c
509 498 489 513 463 525 c
437 537 408 543 376 543 c
313 543 258 516 213 463 c
213 733 l
72 733 l
closepath
} exec
fill
} bind def
/K69 {
{
newpath
215 603 m
215 733 l
74 733 l
74 603 l
215 603 l
closepath
215 0 m
215 531 l
74 531 l
74 0 l
215 0 l
closepath
} exec
fill
} bind def
/K6B {
{
newpath
210 0 m
210 170 l
275 238 l
408 0 l
560 0 l
365 337 l
547 531 l
374 531 l
210 344 l
210 733 l
69 733 l
69 0 l
210 0 l
closepath
} exec
fill
} bind def
/K6C {
{
newpath
215 0 m
215 733 l
74 733 l
74 0 l
215 0 l
closepath
} exec
fill
} bind def
/K6D {
{
newpath
63 0 m
204 0 l
204 258 l
204 309 208 345 215 367 c
223 389 235 406 253 418 c
270 429 290 435 311 435 c
329 435 344 431 354 424 c
365 417 372 406 377 391 c
382 376 385 342 385 291 c
385 0 l
526 0 l
526 255 l
526 305 530 341 538 364 c
545 387 558 405 575 417 c
592 429 611 435 631 435 c
658 435 678 425 691 405 c
700 390 705 356 705 303 c
705 0 l
846 0 l
846 340 l
846 390 841 427 831 450 c
818 480 798 503 771 519 c
744 535 711 543 672 543 c
641 543 612 536 585 522 c
558 508 533 487 509 458 c
493 487 473 508 448 522 c
423 536 393 543 359 543 c
295 543 239 515 193 459 c
193 531 l
63 531 l
63 0 l
closepath
} exec
fill
} bind def
/K6E {
{
newpath
556 330 m
556 371 553 403 548 425 c
543 447 534 466 521 484 c
508 501 488 515 463 526 c
437 537 409 543 378 543 c
308 543 249 513 203 453 c
203 531 l
72 531 l
72 0 l
213 0 l
213 240 l
213 299 217 340 224 362 c
231 384 244 402 263 415 c
282 428 304 435 328 435 c
347 435 364 430 377 421 c
390 412 400 399 406 382 c
412 365 415 328 415 271 c
415 0 l
556 0 l
556 330 l
closepath
} exec
fill
} bind def
/K6F {
{
newpath
75 118 m
98 75 131 43 176 21 c
220 -1 266 -12 315 -12 c
394 -12 459 14 511 67 c
563 120 589 187 589 267 c
589 347 563 413 512 465 c
460 517 394 543 314 543 c
262 543 215 532 172 509 c
130 486 98 452 75 409 c
52 365 40 320 40 273 c
40 212 52 160 75 118 c
closepath
222 386 m
247 414 278 428 314 428 c
351 428 382 414 407 386 c
432 358 444 318 444 267 c
444 213 432 173 407 145 c
382 117 351 103 314 103 c
278 103 247 117 222 145 c
197 173 184 213 184 266 c
184 318 197 358 222 386 c
closepath
} exec
fill
} bind def
/K70 {
{
newpath
70 -202 m
211 -202 l
211 66 l
237 37 262 17 286 6 c
310 -6 337 -12 366 -12 c
427 -12 480 13 523 62 c
566 111 588 180 588 269 c
588 355 567 422 524 471 c
481 519 428 543 367 543 c
331 543 299 535 270 518 c
241 501 218 480 201 453 c
201 531 l
70 531 l
70 -202 l
closepath
243 392 m
265 419 294 432 328 432 c
361 432 388 419 411 392 c
433 365 444 323 444 268 c
444 208 433 165 412 139 c
390 113 363 100 330 100 c
297 100 268 114 244 143 c
221 171 209 215 209 275 c
209 327 220 366 243 392 c
closepath
} exec
fill
} bind def
/K72 {
{
newpath
209 164 m
209 254 213 314 221 342 c
229 370 239 390 253 401 c
266 412 283 417 303 417 c
323 417 345 409 369 394 c
412 517 l
382 534 352 543 320 543 c
297 543 277 537 259 526 c
241 515 221 491 199 456 c
199 531 l
68 531 l
68 0 l
209 0 l
209 164 l
closepath
} exec
fill
} bind def
/K73 {
{
newpath
107 32 m
149 3 206 -12 279 -12 c
358 -12 418 6 459 41 c
500 76 520 117 520 166 c
520 211 505 246 476 271 c
447 295 394 316 320 333 c
245 350 202 363 189 373 c
180 380 175 388 175 398 c
175 410 180 419 191 427 c
207 437 233 442 270 442 c
299 442 321 437 337 426 c
353 415 363 399 369 378 c
502 403 l
489 449 464 484 429 508 c
394 531 340 543 267 543 c
191 543 135 527 98 496 c
62 465 44 426 44 380 c
44 329 65 289 107 261 c
137 240 209 217 322 192 c
346 187 362 181 369 174 c
376 167 379 158 379 147 c
379 132 373 119 361 110 c
342 97 315 90 279 90 c
246 90 220 97 202 111 c
183 125 171 146 165 173 c
24 151 l
37 101 65 61 107 32 c
closepath
} exec
fill
} bind def
/K74 {
{
newpath
222 531 m
222 720 l
81 637 l
81 531 l
16 531 l
16 419 l
81 419 l
81 188 l
81 138 83 105 86 89 c
89 66 96 47 105 34 c
115 20 130 9 150 1 c
171 -8 193 -12 219 -12 c
260 -12 297 -5 330 9 c
318 119 l
293 110 274 105 261 105 c
252 105 244 107 237 112 c
231 117 227 123 225 130 c
223 137 222 162 222 205 c
222 419 l
318 419 l
318 531 l
222 531 l
closepath
} exec
fill
} bind def
/K75 {
{
newpath
554 0 m
554 531 l
413 531 l
413 308 l
413 232 410 184 403 165 c
396 145 383 129 364 116 c
345 103 323 96 300 96 c
279 96 261 101 248 111 c
234 121 225 134 220 151 c
215 167 212 213 212 288 c
212 531 l
71 531 l
71 195 l
71 145 77 106 90 78 c
103 49 123 27 151 12 c
180 -4 212 -12 247 -12 c
282 -12 315 -4 347 13 c
378 29 404 51 423 80 c
423 0 l
554 0 l
closepath
} exec
fill
} bind def
/K76 {
{
newpath
347 0 m
558 531 l
413 531 l
312 260 l
307 245 302 230 297 215 c
295 208 291 193 283 170 c
254 260 l
154 531 l
6 531 l
220 0 l
347 0 l
closepath
} exec
fill
} bind def
/K77 {
{
newpath
310 0 m
401 342 l
492 0 l
627 0 l
798 531 l
659 531 l
558 183 l
469 531 l
333 531 l
242 183 l
142 531 l
5 531 l
173 0 l
310 0 l
closepath
} exec
fill
} bind def
/K78 {
{
newpath
170 0 m
279 165 l
386 0 l
559 0 l
363 280 l
542 531 l
378 531 l
279 385 l
186 531 l
14 531 l
197 274 l
6 0 l
170 0 l
closepath
} exec
fill
} bind def
end /CharStrings exch def
50 dict dup begin
/KA [768 0 128 0 640 640] def
Encoding 10 /KA put
/KD [768 0 128 0 640 640] def
Encoding 13 /KD put
/K20 [285 0 0 0 0 0] def
Encoding 32 /K20 put
/K28 [341 0 53 -215 308 745] def
Encoding 40 /K28 put
/K29 [341 0 33 -215 288 745] def
Encoding 41 /K29 put
/K2D [341 0 57 196 334 336] def
Encoding 45 /K2D put
/K2F [285 0 -2 -12 286 745] def
Encoding 47 /K2F put
/K30 [570 0 43 -13 519 737] def
Encoding 48 /K30 put
/K31 [570 0 81 0 402 737] def
Encoding 49 /K31 put
/K32 [570 0 26 0 518 737] def
Encoding 50 /K32 put
/K33 [570 0 39 -13 525 737] def
Encoding 51 /K33 put
/K34 [570 0 19 0 546 736] def
Encoding 52 /K34 put
/K38 [570 0 42 -13 523 737] def
Encoding 56 /K38 put
/K41 [740 0 0 0 735 733] def
Encoding 65 /K41 put
/K42 [740 0 75 0 689 733] def
Encoding 66 /K42 put
/K43 [740 0 48 -12 687 746] def
Encoding 67 /K43 put
/K44 [740 0 75 0 688 733] def
Encoding 68 /K44 put
/K45 [683 0 75 0 632 733] def
Encoding 69 /K45 put
/K46 [626 0 75 0 579 733] def
Encoding 70 /K46 put
/K47 [797 0 49 -13 734 746] def
Encoding 71 /K47 put
/K49 [285 0 70 0 218 733] def
Encoding 73 /K49 put
/K4C [626 0 79 0 595 727] def
Encoding 76 /K4C put
/K4D [853 0 73 0 779 733] def
Encoding 77 /K4D put
/K4F [797 0 44 -13 756 746] def
Encoding 79 /K4F put
/K50 [683 0 75 0 636 733] def
Encoding 80 /K50 put
/K52 [740 0 75 0 734 733] def
Encoding 82 /K52 put
/K53 [683 0 36 -13 632 746] def
Encoding 83 /K53 put
/K55 [740 0 75 -13 657 733] def
Encoding 85 /K55 put
/K58 [683 0 0 0 681 733] def
Encoding 88 /K58 put
/K61 [570 0 37 -13 535 543] def
Encoding 97 /K61 put
/K62 [626 0 68 -13 586 733] def
Encoding 98 /K62 put
/K63 [570 0 43 -13 544 543] def
Encoding 99 /K63 put
/K64 [626 0 42 -13 561 733] def
Encoding 100 /K64 put
/K65 [570 0 33 -13 529 543] def
Encoding 101 /K65 put
/K67 [626 0 42 -215 560 543] def
Encoding 103 /K67 put
/K68 [626 0 72 0 557 733] def
Encoding 104 /K68 put
/K69 [285 0 74 0 214 733] def
Encoding 105 /K69 put
/K6B [570 0 69 0 560 733] def
Encoding 107 /K6B put
/K6C [285 0 74 0 214 733] def
Encoding 108 /K6C put
/K6D [911 0 63 0 844 543] def
Encoding 109 /K6D put
/K6E [626 0 72 0 557 543] def
Encoding 110 /K6E put
/K6F [626 0 41 -13 589 543] def
Encoding 111 /K6F put
/K70 [626 0 70 -202 588 543] def
Encoding 112 /K70 put
/K72 [399 0 68 0 412 543] def
Encoding 114 /K72 put
/K73 [570 0 24 -13 520 543] def
Encoding 115 /K73 put
/K74 [341 0 15 -13 328 720] def
Encoding 116 /K74 put
/K75 [626 0 72 -13 555 531] def
Encoding 117 /K75 put
/K76 [570 0 5 0 557 531] def
Encoding 118 /K76 put
/K77 [797 0 4 0 796 531] def
Encoding 119 /K77 put
/K78 [570 0 5 0 559 531] def
Encoding 120 /K78 put
end /CharMetrics exch def
end
definefont pop
%%EndFont
} if
setpacking
%AI3_EndRider
[
39/quotesingle 96/grave 130/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE 145/quoteleft
/quoteright/quotedblleft/quotedblright/bullet/endash/emdash/tilde/trademark
/scaron/guilsinglright/oe/dotlessi 159/Ydieresis /space 164/currency 166/brokenbar
168/dieresis/copyright/ordfeminine 172/logicalnot/hyphen/registered/macron/ring
/plusminus/twosuperior/threesuperior/acute/mu 183/periodcentered/cedilla
/onesuperior/ordmasculine 188/onequarter/onehalf/threequarters 192/Agrave
/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla/Egrave/Eacute
/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis/Eth/Ntilde
/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash/Ugrave
/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave/aacute
/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute/ecircumflex
/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde/ograve/oacute
/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute/ucircumflex
/udieresis/yacute/thorn/ydieresis
TE
%AI55J_Tsume: None
%AI3_BeginEncoding: _Arial-BoldMT Arial-BoldMT
[/_Arial-BoldMT/Arial-BoldMT 0 0 0 TZ%AI3_EndEncoding TrueType
%AI5_Begin_NonPrinting
Np
12 Bn
%AI5_BeginGradient: (Black, White Radial)
(Black, White Radial) 1 2 Bd
[
0
0
0
<
00000000000000000000000000000000000000000000000101010101010101010101010102020202
02020202020202030303030303040404040404040505050505050606060607070707080808090909
090A0A0A0A0B0B0B0C0C0D0D0D0E0E0F0F0F101011111112121313141515161617171819191A1A1B
1B1C1D1D1E1F202021222323242526272728292A2B2C2D2E2F303132333435363738393A3B3C3D3E
3F404142434445464748494A4C4D4E4F50525354565758595B5C5D5F606263656668696B6C6E7071
737576787A7C7D7F81838587898B8D8F919395979A9C9EA0A3A5A7AAACAFB1B4B7B9BCBFC2C5C7CA
D0D6DBE0E4E8ECF0F2F4F6F7F9FBFDFF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
4 %_Br
[
0 0 0 0 1 1 1 2 50 0 %_Bs
0 0 0 1 0 0 0 2 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Copper )
(Copper ) 0 7 Bd
[
<
4A49494949484848484747474646464645454544444444434342424241414141404040403F3E3F3E
3E3D3E3D3C3D3C3C3B3B3B3B3A3A3A39393939383838373737373636363635343534343333333332
32323131303130302F2F2F2E2E2D2D2C2D2C2B2B2A2A292929292827272626262625252423242323
222221212120201F1F1E1F1E1D1D1C1C1C1C1B1B1A191919191818171817161615151515141413
>
<
9291908F8E8D8D8C8B8A89888786858484838281807F7E7E7C7C7A7B7A7978777675747373737271
70706E6E6D6C6B6A6B6A696867676565646363626161605F5E5D5D5B5B5B5A5A5858575655545353
53525150504F4E4D4C4C4C4B4A49484847464544444443424140403F3E3D3C3D3C3B3A3939383736
3534353433323131302F2E2D2E2D2C2B2A29292827272526252423222121201F1E1E1D1C1C1B1A
>
<
A7A6A5A3A2A19F9E9C9B9A99989695949291908F8E8D8B8A8988878685838281807F7E7D7C7B7A79
7877767574737271706F6E6D6D6C6B6A69686766656464636261605F5F5D5D5C5B5A595958575655
545353525150504F4E4D4C4B4B4A494847474645454343424140403F3E3E3D3C3B3A3A3938383736
3635343333323131302F2F2E2D2C2C2B2B2A2929282727262525242323222221201F1F1E1E1D1C
>
<
2D2C2C2B2B2A2A2A2A29282827272626262625242423232222222221202020201F1F1E1E1D1D1D1C
1C1B1B1A1A19191918181817171616151515151414131313121211111010100F0F0F0F0E0E0E0E0D
0D0D0C0C0C0C0B0B0B0A0A0A0A090909090908080808080807070707070706060606060605050505
050505040404040404040403030303030303020202020202020202020201010101010101010101
>
<
9596969797989899999A9B9B9C9C9D9D9E9E9FA0A0A1A1A2A2A3A3A4A5A5A6A6A7A7A8A8A9AAAAAB
ABACACADAEAEAFAFB0B0B1B1B2B3B3B4B4B5B5B6B6B7B8B8B9B9BABABBBBBCBDBDBEBEBFBFC0C0C1
C2C2C3C3C4C4C5C5C6C7C7C8C8C9C9CACACBCCCCCDCDCECECFCFD0D1D1D2D2D3D3D4D4D5D6D6D7D7
D8D8D9DADADBDBDCDCDDDDDEDFDFE0E0E1E1E2E2E3E4E4E5E5E6E6E7E7E8E9E9EAEAEBEBECECED
>
<
4F50515253545455565758595A5B5C5D5D5E5F60616263646566676768696A6B6C6D6E6F70707172
737475767778797A7A7B7C7D7E7F80818283838485868788898A8B8C8D8D8E8F9091929394959697
9798999A9B9C9D9E9FA0A0A1A2A3A4A5A6A7A8A9AAAAABACADAEAFB0B1B2B3B3B4B5B6B7B8B9BABB
BCBDBDBEBFC0C1C2C3C4C5C6C6C7C8C9CACBCCCDCECFD0D0D1D2D3D4D5D6D7D8D9D9DADBDCDDDE
>
<
35363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C
5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F8081828384
85868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABAC
ADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3
>
4 %_Br
<
60606060606060606060606060606060605F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5E5E5E5E5E5E
5E5E5E5E5E5E5E5E5D5D5D5D5D5D5D5C5C5C5C5C5C5C5C5B5B5B5B5B5A5A5A5A5A59595959585858
585757575757575656565555555454545353535252525151515050504F4F4E4E4E4D4D4C4C4B4B4B
4A4A
>
<
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9A9A9A9A9A9A9A9A9A9A9A9A7A7A8A8A8A8A8A7
A7A7A7A7A8A6A6A6A6A6A6A5A5A5A5A4A4A4A5A3A3A4A4A3A3A3A3A2A2A2A1A1A1A0A0A19FA0A09F
9F9E9E9F9D9E9C9D9E9C9D9B9C9B9B9A9B9B9A9A999A999798979896979697969695949594949392
9392
>
<
EFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEFEFEFEFEFEEEEEEEEEEEDEDEE
EEEEEDEDEEEEEDEDEDEDEDEDEDEDEDECECECEBEBEAEAEAE9E9E7E8E6E7E5E5E3E3E2E2E0E1DFDFDE
DBDCDADAD9D7D7D5D3D4D2D0D0CFCCCDCBC9C7C7C6C3C2C0C0BFBDBBB9B8B6B7B5B3B2B0AFADABAA
A8A7
>
<
5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5B5B5B5B5B5B5B5B5B5B5A5A5A5A5A5A5A595959595958
58585858565656565555555554545453535352525251515050504E4F4D4D4D4C4C4B4B4A4A494948
4847474646454544434342424140403F3E3E3D3C3C3B3A3A393837373635353434333231302F2F2E
2E2D
>
<
6666666666666666666666666666666666676767676767676767676868686868686869696969696A
6A6A6A6A6B6B6B6B6C6C6C6C6D6D6D6E6E6E6F6F6F70707171717272737373747475757676777778
7879797A7A7B7B7C7D7D7E7E7F8080818282838484858686878889898A8B8C8D8D8E8F9091929293
9495
>
<
2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2E2E2E2E2E2E2E2E2E2E2E2E2F2F2F2F2F2F2F30
3030303030313131313131323232323333333334343434353535353636363737373838383939393A
3A3B3B3B3C3C3D3D3D3E3E3F3F40404141414242434344454546464747484849494A4B4B4C4C4D4E
4E4F
>
<
00000000000000000000000000000000010101010101010101010202020202020303030303040404
0404050505050606060707070808080909090A0A0B0B0B0C0C0D0D0E0E0F0F101011111212131314
15151616171818191A1A1B1C1C1D1E1E1F2021212223242525262728292A2B2B2C2D2E2F30313233
3435
>
4 %_Br
<
4A4B4B4C4C4D4D4E4E4F4F5050515152525353545454555556575758585959595A5A5B5B5C5C5C5D
5D5E5E5E5F5F60
>
<
91929192939493949596959697989798999A999A9B9C9B9C9D9C9D9E9F9E9FA0A1A0A1A3A4A3A4A5
A6A6A7A8A9A9AA
>
<
C4C6C8C8C9CBCDCED0D0D2D4D5D7D9D9DBDCDEDFE1E0E2E3E4E6E5E6E7E9EAEBEAECEDEEEEEEEEEE
EEEEEFEFEFEFEF
>
<
2D2E2F2F30313233343536373738393A3B3C3D3E3F4041424445464748494A4B4C4D4E5051525354
555658595A5B5C
>
<
9594939291908F8E8D8C8B8A898887868584838281807F7E7C7B7A797877767574737271706F6E6D
6C6B6A69686766
>
<
4F4E4E4D4C4B4B4A494848474645454443424241403F3F3E3D3D3C3B3A3A39383737363534343332
3131302F2E2E2D
>
<
26252424232221201F1F1E1D1C1B1A1A1918171615151413121111100F0E0D0C0C0B0A0908070706
05040302020100
>
4 %_Br
<
000102020303040505060607080809090A0A0B0B0C0C0D0D0E0E0F0F101010101111121213131414
1515151516161617171818181819191A1A1A1A1B1B1C1C1D1D1D1D1E1E1F1F201F20202121222222
222323242424242425252626262627272828292829292A2A2B2B2B2B2C2C2D2D2E2E2E2E2F2F2F2F
3030313031313232323233333334343434353536363736373738383838393939393A3A3A3A3B3B3B
3B3C3C3D3C3D3D3E3D3E3E3E3E3F3F3F3F3F40404040414142424242434343434444444445454545
46464646474747474848494949494A4A4A4A
>
<
00010101020203040405050607070708090A0A0B0B0C0D0E0E0F1011111212131415151616171819
18191A1B1C1C1D1E1F1F2020212223232324252627262728292A2B2A2B2C2D2E2E2E2F3031303132
33343534353637383839393A3B3B3C3D3D3E3E3F3F4141424243434545454647474948494A4B4B4D
4C4D4E4F4F4F50515253525354555656575759595A5A5B5C5D5D5D5E5F6061606162636465646666
676868696A6A6C6B6C6D6E6F706F717272747374757677777779797B7A7B7C7D7E7F7F8081828383
83858587868788898A8B8B8C8D8E8F8F9091
>
<
000101020203040405060607070809090A0A0B0C0C0D0D0E0F0F1010111112131314141516161718
19191A1A1B1C1D1D1E1E1F2021212222232425252627282829292A2B2C2C2D2E2F2F303131323334
34353637373839393B3B3C3D3D3F3F4041414343444546464748494A4A4C4C4D4E4F505152525354
55565757585A5A5B5C5D5E5F60616163646465666768696A6B6C6D6E6F707172737475767778797A
7B7C7D7E7F8081838485868788898A8B8C8D8F90919293959697989A9B9C9E9FA0A1A3A4A5A7A8AA
ABACAEAFB1B2B3B5B6B8B9BBBCBEBFC1C3C4
>
<
00000000000000000000000000000000000000000000000000000000000000000001010101010101
01010101010101010101010202020202020202020202020203030303030303040404040404040405
05050505050506060606060607070707070708080808080809090909090A0A0A0A0A0B0B0B0B0C0C
0C0C0D0D0D0D0E0E0E0E0F0F0F0F0F10101010111111111212131313131414151515151616171717
171818181919191A1A1B1B1C1C1C1D1D1D1D1E1E1F1F1F1F20202121212122222323242425252525
262627272828292929292A2A2B2B2C2C2D2D
>
<
FFFFFEFEFDFDFCFCFBFBFAFAF9F9F8F8F7F7F6F6F5F5F4F4F3F3F2F2F1F1F0F0EFEFEEEEEDEDECEC
EBEBEAEAEAE9E9E8E8E7E7E6E6E5E5E4E4E3E3E2E2E1E1E0E0DFDFDEDEDDDDDCDCDBDBDADAD9D9D8
D8D7D7D6D6D5D5D5D4D4D3D3D2D2D1D1D0D0CFCFCECECDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C5C5
C4C4C3C3C2C2C1C1C0C0BFBFBFBEBEBDBDBCBCBBBBBABAB9B9B8B8B7B7B6B6B5B5B4B4B3B3B2B2B1
B1B0B0AFAFAEAEADADACACABABAAAAAAA9A9A8A8A7A7A6A6A5A5A4A4A3A3A2A2A1A1A0A09F9F9E9E
9D9D9C9C9B9B9A9A99999898979796969595
>
<
FFFEFDFDFCFBFAF9F9F8F7F6F5F4F4F3F2F1F0F0EFEEEDECECEBEAE9E8E7E7E6E5E4E3E3E2E1E0DF
DFDEDDDCDBDBDAD9D8D7D6D6D5D4D3D2D2D1D0CFCECECDCCCBCAC9C9C8C7C6C5C5C4C3C2C1C1C0BF
BEBDBCBCBBBAB9B8B8B7B6B5B4B4B3B2B1B0B0AFAEADACABABAAA9A8A7A7A6A5A4A3A3A2A1A09F9E
9E9D9C9B9A9A9998979696959493929291908F8E8D8D8C8B8A898988878685858483828180807F7E
7D7C7C7B7A7978787776757473737271706F6F6E6D6C6B6B6A6968676766656463626261605F5E5E
5D5C5B5A5A5958575655555453525151504F
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A29282726
>
4 %_Br
<
202120201F1F1E1F1F1E1E1D1D1C1D1D1C1C1B1B1A1B1B1A1A191918181918181717171717161615
1515151514141313131212121211111110100F0F0E0E0E0D0D0D0C0C0C0B0B0A0909090808070706
06050504030302020100
>
<
3937373736353533343332313131302F2E2E2D2C2C2B2B2A2929292827262525242323222221201F
1F1E1D1C1C1C1B1A1918181817161615141413131211100F0F0E0D0C0C0B0B0A0909080707060605
05040403020201010100
>
<
3E3D3C3B3B3A393837373635343433323230302F2F2E2D2C2C2B2A29292827262625252423222221
201F1F1E1E1B1B1A1A1918181716151514141312121111100F0F0E0E0D0C0C0B0B0A090908080706
06050404030202010100
>
<
05050505050505050404040404040404030303030303030202020202020202020202020202010101
01010101010101010101010101010101000000000000000000000000000000000000000000000000
00000000000000000000
>
<
D9D9DADADBDBDCDCDCDDDDDEDEDFDFDFE0E0E1E1E2E2E2E3E3E4E4E5E5E5E6E6E7E7E8E8E8E9E9EA
EAEBEBEBECECEDEDEDEEEEEFEFF0F0F0F1F1F2F2F3F3F3F4F4F5F5F6F6F6F7F7F8F8F9F9F9FAFAFB
FBFCFCFCFDFDFEFEFFFF
>
<
B9BABBBBBCBDBEBFBFC0C1C2C2C3C4C5C6C6C7C8C9CACACBCCCDCDCECFD0D1D1D2D3D4D5D5D6D7D8
D8D9DADBDCDCDDDEDFE0E0E1E2E3E3E4E5E6E7E7E8E9EAEBEBECEDEEEEEFF0F1F2F2F3F4F5F6F6F7
F8F9F9FAFBFCFDFDFEFF
>
<
A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCC
CDCECFD0D1D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5
F6F7F8F9FAFBFCFDFEFF
>
4 %_Br
<
474746464646464545454545454444434343434343424242424241414141414140404040403F3F3F
3E3E3E3E3E3D3D3D3C3C3C3C3C3B3B3B3B3B3B3A3A39393939393838383737373737373636363535
353535343434343433333332323232323231313030303030302F2F2F2F2F2E2E2E2D2D2D2D2D2C2C
2C2B2B2B2B2B2A2A2A29292929292828282727272626262626252525242424242423232322222222
222121212020
>
<
C6C4C3C2C2C1BFBEBDBCBBBBB9B8B7B6B5B3B4B3B1B0AFAEADABACABA9A8A7A6A5A5A4A3A2A19F9E
9F9D9D9B9A9998989796959493929291908F8E8D8C8C8B8A898886868485848382817F7F7F7E7D7C
7B7A7979787776757473737271706F6E6D6E6D6C6B6A696867676666656363626261605F5E5D5C5C
5B5B59585857575655545352515151504F4E4D4C4C4B4A49484846454645444342414040403F3E3D
3C3B3B3A3A39
>
<
F1F0EFEFEFEEEEEDEDECEBEBEAE9E8E7E6E5E4E3E1E0DEDDDBDAD8D6D5D3D2D0CECDCBCAC8C7C5C4
C2C1BFBEBCBBBAB8B6B5B4B2B1B0AEADABAAA9A7A6A5A3A2A1A09E9D9C9A99989796949392918F8E
8D8C8B8A8887868584838281807F7E7D7C7A797877767574737271706F6E6E6D6B6A6A6968676665
6463626160605E5D5D5C5B5A5958575656555453525150504F4E4D4C4B4A4A494847474545444343
4241403F3E3E
>
<
27272626262525252525242424232323232322222221212020202020201F1F1F1E1E1D1D1D1D1D1D
1C1C1B1B1B1B1B1B1A1A1A1919191919181818171717171716161616161515151515151414141414
131313121212121212121211111111111010100F0F0F0F0F0F0E0E0E0D0D0D0D0D0C0C0C0C0C0C0C
0C0B0B0B0B0B0A0A0A0A0A0A09090909090909090808080808080808070707070707070706060606
060606050505
>
<
9C9C9D9D9D9E9E9F9F9FA0A0A0A1A1A2A2A2A3A3A3A4A4A5A5A5A6A6A6A7A7A7A8A8A9A9A9AAAAAA
ABABACACACADADADAEAEAEAFAFB0B0B0B1B1B1B2B2B3B3B3B4B4B4B5B5B6B6B6B7B7B7B8B8B8B9B9
BABABABBBBBBBCBCBDBDBDBEBEBEBFBFBFC0C0C1C1C1C2C2C2C3C3C4C4C4C5C5C5C6C6C7C7C7C8C8
C8C9C9C9CACACBCBCBCCCCCCCDCDCECECECFCFCFD0D0D0D1D1D2D2D2D3D3D3D4D4D5D5D5D6D6D6D7
D7D8D8D8D9D9
>
<
2B2C2D2E2E2F30313233343435363738393A3A3B3C3D3E3F4041414243444546474748494A4B4C4D
4D4E4F5051525353545556575859595A5B5C5D5E5F5F60616263646566666768696A6B6C6C6D6E6F
7071727273747576777878797A7B7C7D7E7E7F80818283848585868788898A8B8B8C8D8E8F909191
9293949596979798999A9B9C9D9D9E9FA0A1A2A3A3A4A5A6A7A8A9AAAAABACADAEAFB0B0B1B2B3B4
B5B6B6B7B8B9
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5
>
4 %_Br
[
0.0745 0.102 0.1098 0.0039 0.9294 0.8706 0.8275 2 50 100 %_Bs
0.2902 0.5725 0.6549 0.1765 0.5843 0.3098 0.2078 2 50 85 %_Bs
0.3765 0.6667 0.9373 0.3608 0.4 0.1765 0 2 73.9136 75 %_Bs
0.2902 0.5686 0.7686 0.1765 0.5843 0.3098 0.149 2 50 63 %_Bs
0 0 0 0 1 1 1 2 50 34 %_Bs
0.1255 0.2235 0.2431 0.0196 0.851 0.7255 0.6471 2 50 14 %_Bs
0.2784 0.7765 0.9451 0.1529 0.6118 0.1686 0 2 50 2 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Nova)
(Nova) 1 3 Bd
[
<
08070707060606050504030303030303030404050506060606070707070707070707070707070706
06060505040403030202020202020304040405050606060606070707070707070707070707060606
06050504040404040404040404050505050606060607070707070707070707070707070606060606
05050505050505050505050505050505060606060606070707070707070707070707070706060606
06060505050505050505050505050505050505050505060606060606060707070707070707070707
07070706060606060606060505050505050404040404040404040404040404040404040505050505
05050506060606060606060606060606060606060606060606060606060606060606060606060606
06060606060606060606060606050505050505050505050505050505050505050504040404040404
04040404040404040404040404040404040404040404040404040404040303030303030303030303
0303030303030303
>
<
0505060607070808090A0A0B0C0C0D0E0F0F10111212131415161718191A1A1B1C1D1E1F20212223
24252728292A2B2D2E2F2F30313233343435363738393A3A3A3B3C3D3E3F40414243444545464849
4A4B4C4D4E4F4F50515254555656565758595A5B5C5D5D5E5F6061626363646566676869696A6B6D
6E6F707071727374757576777879797A7B7C7D7E7E7F8081828283848586868788898A8A8B8C8D8D
8E8F909191929394949596979798999A9A9B9C9D9D9E9FA0A0A1A2A4A4A5A6A7A7A8A9A9AAABACAC
ADAEAEAFB0B0B1B2B3B3B4B5B5B6B7B7B8B9B9BABBBBBCBDBDBEBFBFC0C1C1C2C3C3C4C5C5C6C6C8
C9C9CACBCBCDCDCECFCFD0D0D1D2D2D4D4D5D6D6D7D7D8D9D9DADADBDBDDDDDEDFDFE0E0E1E1E2E2
E3E3E4E4E4E5E5E6E6E7E7E8E8E9E9EAEAEAEAEBEBEBECECEDEDEDEDEEEEEFEFEFEFEFF0F0F0F0F0
F1F1F1F1F1F2F2F2F2F2F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5
F5F5F5F5F5F5F5F5
>
0.9137
0
1
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E2E1E0DFDEDDDCDBDAD9
D8D7D6D5D4D3D2D1D0CFCFCECDCCCBCAC9C8C7C6C5C4C3C2C2C1C0BFBEBDBCBBBAB9B8B7B7B6B5B4
B3B2B1B0AFAEAEADACABAAA9A8A7A7A6A5A4A3A2A1A0A09F9E9D9C9B9A9A99989796959494939291
908F8E8E8D8C8B8A898988878685858483828180807F7E7D7C7C7B7A797878777675747473727171
706F6E6D6D6C6B6A6A696867676665646463626161605F5E5E5D5C5B5B5A59585857565655545353
525151504F4F4E4D4C4C4B4A4A4948484746464544444342424140403F3E3E3D3C3C3B3A3A393938
373736353534343332323131302F2F2E2E2D2C2C2B2B2A2929282827272626252424232322222121
20201F1E1E1D1D1C1C1B1B1A1A191918181717161616151514141313121211111110100F0F0E0E0E
0D0D0C0C0C0B0B0A0A0A090909080808070707060606050505040404040303030302020202010101
0101010000000000
>
0
4 %_Br
<
030404050606070809090A0B0C0D0D0E0F10101112131314151616171819191A1B1C1C1D1E1E1F20
20212223232425252627272829292A2B2B2C2D2D2E2F2F303131323333343535363637383839393A
3A3B3B3C3C3D3D3E3F3F404041414242434344444545464647494A4C4E5051545658595B5E606163
6668696B6D707173747677797A7C7D7F8182848587888A8C8D8F9092949597989A9B9C9E9FA0A2A3
A4A5A7A8A9ABACADAEB0B1B2B3B5B6B7B8BABBBDBEBF
>
<
F5F5F5F4F4F3F3F3F2F2F1F1F1F0F0F0EFEFEFEFEEEEEEEEEDEDEDEDEDEDECECECECECECECECECEC
ECECECECEDEDEDEEEEEEEFEFF0F0F0F1F1F2F3F3F4F4F5F5F6F6F7F7F8F8F9F9FAFAFAFAFAF8F8F7
F7F6F6F5F5F4F3F3F2F2F2F1F1F1F0F0EFEFEFEFEEEEEEEEEEEDEDEDEDEDEDEDEDEDECECECECECEC
ECECEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E8E8E8E8E8E8E8E8E8E7
E7E7E7E7E7E7E8E8E7E7E7E7E7E7E7E7E7E6E6E6E6E6
>
<
E9E9E9E9EAEAEAEAEBEBECECECECECEBEAE9E9E7E6E4E4E2E1DFDFDDDBDBD9D7D4D4D2D0CDCDCBC8
C6C6C4C2C0BFBDBBB9B9B7B4B4B2B0ADADABA8A6A5A3A09E9D9B98969593908E8D8B888686848281
7F7D7B7B78757373706E6B6B68656362605D5A5A575452514F4D4D4C4B4949484645454443424241
3F3E3E3D3C3B3B3A383737353434333130302F2E2C2D2B2A29292827262625242222211F1F1D1C1A
1A18171515131210100F0D0C0B0A0807080707070707
>
<
00000000010101010101010101020202020202020303030303030404040404040505050505050606
060707070808080909090A0A0B0B0B0C0C0D0D0D0E0E0F0F10101011111212131314141516161718
18191A1A1B1C1C1D1E1F1F2021222323242526262728292A2A292A282726262524232322201F1F1E
1D1C1C1B191818171716161515151413121211100F0F0E0D0C0C0B0A090908080808070707070606
06060505050404030403030202010101010101010101
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A
>
<
00000000000101010101010101010202020202020202020303030303030303030404040404040404
04050505050505050505060606060606060606070707070707070707080808080808080808090909
0909090909090A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D
0D0D0D0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F10101010101010101011111111111111111112
12121212121212121313131313131313131414141414
>
<
000101020304040506070708090A0A0B0C0D0D0E0F10101112131314151516171818191A1B1B1C1D
1E1E1F20212122232424252626272829292A2B2C2C2D2E2F2F303132323334353536373838393A3A
3B3C3D3D3E3F40404142434344454646474849494A4B4C4C4D4E4E4F505151525354545556575758
595A5A5B5C5D5D5E5F60606162626364656566676868696A6B6B6C6D6E6E6F707171727373747576
76777879797A7B7C7C7D7E7F7F808182828384858586
>
4 %_Br
[
0.0314 0.0196 0.9137 0 1 1 0 2 38.2022 0 %_Bs
0.0118 0.9608 0.9137 0 1 0 0 2 50 75.2809 %_Bs
0.749 0.902 0.0275 0.0039 0.2902 0.0784 0.5255 2 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (RGB Rainbow)
(RGB Rainbow) 0 6 Bd
[
<
F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F1F1F1F1F1F0F0F0F0EFEFEFEEEEEEEDEDEDEC
ECECEBEBEAEAE9E9E8E8E7E7E6E6E5E4E3E3E2E1E0DFDEDCDBDAD9D8D6D5D4D3D1D0CFCECCCBCAC8
C7C6C5C3C2C1BFBEBDBBBAB9B7B6B5B3B2B0AFAEACABAAA8A7A5A4A3A1A09E9D9B9A989695939290
8F8D8C8A898786858382817F7E7D7B7A79787675747371706F6D6C6B6A686766646362615F5E5C5B
5A585755545251504E4D4C4A494746454342413F3E3D3B3A393736353332312F2E2D2B2A29272625
242221201F1E1E1D1C1B1A191817171615141413121111100F0F0E0D0D0C0B0B0A0A090908070706
06060505040404030303030202020202
>
<
EDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDED
EDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEF
EFEFF0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F2F2F2F2F2F2F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4
F4F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F7F7F7F7F7F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F8
F8F8F7F7F6F6F6F5F5F5F5F4F4F4F3F3F3F3F2F2F2F2F1F1F1F1F0F0F0F0F0EFEFEFEFEFEEEEEEEE
EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFF0F0F0
F0F0F0F1F1F1F1F1F2F2F2F2F2F2F3F3
>
0
0
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000001010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010202020202020202
02020202020202020202020202020202020202020202020202020202020202020202020202020202
02020202020202020202020202020202
>
1
4 %_Br
<
D5D5D6D7D8D9DADBDDDEDFDFDFDFDFDEDEDEDDDDDCDCDCDBDBDBDBDADADADADADADBDBDCDCDDDEDE
DFE0E1E2E3E4E6E8E9E9EAEBEAEAE9E8E8E7E7E6E6E5E5E4E4E3E2E1E0E0DFDFDFDFDFDFE0E0E1E2
E3E5E7E8EBEDEFF1F2F4F5F4F3F1EFEDEBEAE8E7E6E5E4E3E2E2E2E2E2E2E2E3E4E5E7E8EAEBEBEB
EBEBEAEAEAEAE9E9E9E9E9E8E8E8E8E8E7E7E7E7E8E8E9E9EAEAEBEBEBEAEAEAEAEAEAEAEAEAEBEB
ECEDEEEFF1F3F5F6F7F8F9FBFCFCFCF9F7F6F4F2F1F0EEEDEDECECEBEBEBEBECECEDEDEEEEEFEFEF
EFEFEFEFEFF0F0F0F1F1F2F2F3F4F5F6F7F8F9FBFCFDFDFEFFFFFFFFFFFDFCFBFBFAF9F8F8F7F7F6
F6F6F5F5F5F5F4F4F4F4F4F4F4F4F4F4
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000101010101020202020303030404040405050505060606060707
0707070707070708090A0B0C0E11131517191B1D1F21232527282A2B2D2E3031323334353637383A
3C3D3F4042444547494A4C4E4F5153555658595B5C5E5F606263646667696A6C6D6F707273757677
797A7B7D7E7F80818384858687898A8C8E9091939597989A9C9D9FA0A2A3A4A6A7A8AAABACAEAFB0
B2B4B5B7B9BABCBDBFC1C2C4C5C7C8CACBCCCECFD1D2D3D5D6D7D8DADBDCDDDEDFE1E2E2E3E4E5E6
E7E7E8E9E9EAEAEBEBEBECECECECEDED
>
0
0
<
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
4 %_Br
<
ECECECECECECECECECECEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAE9E9E9E9E9E8E8E8E8E8E7E7E7E7
E7E6E6E6E6E6E5E5E5E5E4E4E4E4E4E4E4E4E3E3E3E3E3E3E3E3E3E2E2E2E2E2E2E2E2E2E2E2E2E2
E2E2E2E2E2E2E2E2E2E2E2E2E2E2E3E3E3E4E4E4E5E5E6E6E7E7E8E8E9EAEAEBEBECEDEEEEEFF0F0
F0F0F0F0F0F1F1F1F1F1F1F1F0EFEEEDEDECEBEAEAE9E8E7E7E6E6E5E4E4E3E3E2E1E1E0E0DFDFDF
DEDEDDDDDDDCDCDCDBDBDBDBDBDBDBDBDBDCDCDCDDDDDDDEDEDFDFE0E0E1E1E2E3E3E4E5E6E6E7E8
E9E9E9E9E9E9E9E9E9E9E9E9E8E7E6E6E5E4E3E2E2E1E0E0DFDEDEDDDDDCDCDBDBDADAD9D9D9D8D8
D8D7D7D7D7D6D6D6D6D6D5D5D5D5D5D5
>
0
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFDFDFDFDFCFCFCFBFBFBFAFAF9F9F9F8F8F7F7F6F6F5F5F4
F4F3F3F2F1F1F0F0EFEEEDEDECEBEAE9E8E7E5E4E3E2E1E0DFDEDDDCDBDADAD9D8D7D6D5D4D3D2D1
D0CFCDCCCBCAC8C7C6C4C3C1BFBDBBB9B7B4B2B0AEACAAA8A6A4A2A09E9C9A98969492908E8C8A89
87858381807E7C7A7977757372706E6C6B6967666462615F5E5C5A595756545351504E4D4B4A4847
46444341403E3D3B3A3837353432312F2E2C2B29282625242221201E1D1C1A191817151413121110
0E0D0C0B0A0908070605040302010000
>
0
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101010101010101010101010101010101010101010101010101
01010101010101010101010101010101
>
1
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
4 %_Br
<
0808090A0A0B0C0C0D0E0E0F101011121314141516171818191A1B1C1D1E1F1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F6061626364666768696A6B6C6D6E6F707172737474757677
78797A7B7C7D7E7F8081838485868788898A8B8C8E8F909192939495969798999A9B9C9D9E9FA0A1
A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BBBCBDBEC0C1C2C3C4C5C7C8C9CACBCC
CDCECFD0D1D2D3D4D5D6D6D7D8D9DADBDBDCDDDEDEDFE0E0E1E2E2E3E3E4E4E5E6E6E7E7E7E8E8E9
E9E9EAEAEAEAEBEBEBEBEBEBECECECEC
>
<
05050505050505040404040404040404030303030303020202020202010101010000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000
>
<
E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEBEBEBEBEBEBECECECECECEDEDEDEDEEEEEEEFEFEF
EFF0F0F0F1F1F1F2F2F2F3F3F3F3F4F4F4F5F5F5F5F6F6F6F7F7F7F7F8F8F8F8F9F9F9F9FAFAFAFA
FBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFC
FCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFD
FDFDFDFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
>
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
4 %_Br
<
03030303040404040404040404040404040505050505050505050606060606060606060606060606
06060606060606060606060606060505050505040404040404040404040404050505050606060606
06070707070707070707070606060606050505050505050505050505050505060606060607070707
07070707070707060606060605050505050505050505050505060606060707070707070707070707
07060606060505050404040404040404040505060606060707070707070707070707060606060505
04040403020202020203030404050506060607070707070707070707070707060606060505040403
03030303030304050506060607070708
>
<
F5F5F4F4F4F4F4F3F3F3F2F2F1F1F0F0EFEFEEEDEDECEBEAEAE9E8E7E6E5E4E4E3E2E1E0DFDEDDDB
DAD9D8D7D6D5D4D2D1D0CFCECDCBCAC9C8C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887
868584838281807F7E7D7C7B7A797877767574737271706F6E6D6B6A696867666564636261605F5E
5D5C5B5A595857565655545251504F4E4D4C4B4A4948464544434241403F3E3D3C3B3A3A39383736
353434333231302F2E2D2B2A2928272524232221201F1E1D1C1B1A19181716151413121211100F0F
0E0D0C0C0B0A0A090808070706060505
>
0.9137
0
1
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
4 %_Br
[
0.0078 0.9529 0 0 1 0.0078 1 2 50 100 %_Bs
0.9569 0.9294 0 0 0 0 1 2 50 80 %_Bs
0.8353 0 0 0 0.0039 1 1 2 50 60 %_Bs
0.9255 0 1 0 0 1 0 2 50 40 %_Bs
0.0314 0.0196 0.9137 0 1 1 0 2 50 20 %_Bs
0.0118 0.9608 0.9137 0 1 0 0 2 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Tropical Sunset)
(Tropical Sunset) 0 5 Bd
[
<
03030303040404040404040404040404040505050505050505050506060606060606060606060606
06060606060606060606060606060606060605050505050504040404040404040404040404040405
05050505060606060606060707070707070707070707070707060606060606060505050505050505
05050505050505050505050505050606060606060606060707070707070707070707070707070707
07070606060606060606060605050505050505050505050505050505050505050505050505050505
05050506060606060606060606060606070707070707070707070707070707070707070707070707
0707
>
<
F5F5F4F4F4F4F4F3F3F3F2F2F1F1F0F0EFEFEEEDEDECECEBEAEAE9E8E7E6E5E4E4E3E2E1E1E0DFDE
DDDBDAD9D8D7D7D6D5D4D2D1D0CFCECECDCBCAC9C8C8C6C5C4C3C2C1C1C0BFBEBDBDBCBBBAB9B9B8
B7B6B5B5B4B3B2B1B1B0AFAEAEADACABABAAA9A8A8A7A6A5A5A4A2A2A1A09F9F9E9D9D9C9B9B9A99
99989797969595949393929191908F8F8E8E8D8C8C8B8B8A89898888878686858584848383828181
80807F7F7E7E7D7D7C7C7B7B7A7A79797878777776767675757474737373727271717170706F6F6F
6E6E6E6D6D6D6B6B6B6A6A6A69696969686868676767676766666666666565656565656464646464
6464
>
<
E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9EAEAEAEAEAEAEAEAEAEAEAEAEA
EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAE9E9E9E9E9E9E9E9E9E9E9
E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9E9
E9E9EAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEAEBEBEBEBEBEBEBEBEBEBEBEBEBEB
EBEBECECECECECECECECECECECECECECEDEDEDEDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEEEEEE
EEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0
F0F0
>
<
00000000000000000000000000000000000000000000000000000000000000000001010101010101
01010101010101010101010101000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000101010101010101000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000001010101010101010101010101010101010101010101010101010101
0101
>
1
<
000102030405060708090A0B0C0D0E0F10111213141515161718191A1B1C1D1E1F20212222232425
262728292A2B2B2C2D2E2F3031323333343536373838393A3B3C3D3E3E3F40414242434445464647
48494A4A4B4C4D4E4E4F505151525354545556575758595A5A5B5C5C5D5E5F5F6061616263636465
656667676869696A6B6B6C6D6D6E6F6F70707172727373747575767677787879797A7A7B7B7C7D7D
7E7E7F7F8080818182828383848485858686878788888889898A8A8B8B8B8C8C8D8D8D8E8E8F8F8F
90909091919192929293939394949494959595969696969697979797979898989898989999999999
9999
>
0
4 %_Br
<
08070707060606050504030303030303030404050506060606070707070707070707070707070606
06050504040303020202020203040404050506060606070707070707070707070706060606050504
04040404040404040505050606060607070707070707070707070706060606050505050505050505
05050505060606060607070707070707070707070606060606050505050505050505050505050505
06060606060707070707070707070706060606060605050505040404040404040404040404050505
05050606060606060606060606060606060606060606060606060606060605050505050505050504
04040404040404040404040403030303
>
<
0505060607070808090A0A0B0C0C0D0E0F0F10111212131415161718191A1B1C1D1E1F2021222324
252728292A2B2D2E2F30313233343435363738393A3A3B3C3D3E3F4041424344454648494A4B4C4D
4E4F505152545556565758595A5B5C5D5E5F606162636465666768696A6B6D6E6F70717273747576
7778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E
9FA0A1A2A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C8
C9CACBCDCECFD0D1D2D4D5D6D7D8D9DADBDDDEDFE0E1E2E3E4E4E5E6E7E8E9EAEAEBECEDEDEEEFEF
F0F0F1F1F2F2F3F3F3F4F4F4F4F4F5F5
>
0.9137
0
1
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
4 %_Br
<
02020201010202020303030303040404040404040404040404040404040403030303030202020201
01010100000000000101020303030304040505050506060606060606060606050505050505050505
05040404040404040303040404040405050505050506060606060606060606060606060606060606
06060605050505050505040404040404050505050506060606060606070707070707070707070707
07060606060606050505050404040403030303030303030303040404050505060606060707070707
07080808080808080808080707070707070707060606060505050404040403030303030303030303
04050505050606060606070707070708
>
<
9E9D9D9C9C9B9A9A9998979696959594939392929190908F8F8E8D8D8B8B8A898988888786868585
84838382828180807F7F7E7C7C7B7B7A7979787877767675757372727171706F6F6E6E6D6C6C6B6B
6A6969686867666665656463636262615F5F5E5E5D5C5C5B5B5A5959585857565655555452525151
504F4F4E4E4D4D4D4C4C4B4A4A494847464645454443424141403F3F3E3E3D3C3C3B3B3A39393838
3736363535343333333332313130302F2E2E2D2D2C2B2B2A2A292727262625242422222120201F1F
1E1D1D1C1C1B1A1A1919181717161615141413131211111111100F0F0E0E0E0D0D0C0C0B0B0B0A0A
0A090908080807070707060606050505
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000010202030304050506070708090A0A0B0C0D0D0E0F101011121314141617191B1C1E1F
2123242627292B2C2E2F3133343637393B3C3E3F4142434546484A4B4D4E4F5152545557585A5B5C
5E606162646567686A6B6C6E6F717273757677797A7C7D7E7F818283858687898A8B8D8E8F919293
959697999A9B9C9E9FA0A1A3A4A5A6A7A9AAABACADAFB0B1B2B3B5B6B8B9BBBDBEBFC1C2C4C5C6C8
C9CACBCDCECFD0D1D2D4D5D6D7D7D8D9DADBDCDDDDDEDFDFDFDFE0E0E0E1E1E1E2E2E3E3E4E4E4E5
E5E6E6E6E7E7E7E7E8E8E8E8E8E9E9E9
>
0
1
<
6667676868696A6A6B6B6C6D6D6E6E6F70707171727373747475767677777879797A7A7B7C7C7D7D
7E7F7F80808182828383848585868687888889898A8B8B8C8C8D8E8E8F8F90919192929394949595
9697979898999A9A9B9B9C9D9D9E9E9FA0A0A1A1A2A3A3A4A4A5A6A6A7A7A8A9A9AAAAABACACADAD
AEAFAFB0B0B1B2B2B3B3B4B5B5B6B6B7B8B8B9B9BABBBBBCBCBDBEBEBFBFC0C1C1C2C2C3C4C4C5C5
C6C7C7C8C8C9CACACBCBCCCDCDCECECFD0D0D1D1D2D3D3D4D4D5D6D6D7D7D8D9D9DADADBDCDCDDDD
DEDFDFE0E0E1E2E2E3E3E4E5E5E6E6E7E8E8E9E9EAEBEBECECEDEEEEEFEFF0F1F1F2F2F3F4F4F5F5
F6F7F7F8F8F9FAFAFBFBFCFDFDFEFEFF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
4 %_Br
<
D5D5D5D6D6D6D7D7D8D8D9DADADCDBDCDDDCDCDCDBDADAD9D9D8D7D7D6D6D5D4D3D3D2D1D0D0CFCE
CDCDCCCBCACAC9C8C8C7C6C6C5C5C4C4C3C3C3C2C2C2C1C1C0C0C0BFBFBEBEBEBDBCBBBABAB9B8B7
B6B5B3B2B1B0AFADACABA9A8A7A5A4A2A09F9E9D9C9B9A999897969594939291908E8E8C8B8A8988
878685838281807F7E7D7C7B7A797877767574737271706F6E6D6B6A696867666564636261605E5D
5C5B5A595857565554535251504F4E4C4B4A4948474645444341403F3E3D3C3B3A38373635343332
31302E2D2C2B2A2928262524232221201E1D1C1B1A1A191817161615141313121110100F0E0D0C0C
0B0A0909080706060504040302020202
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000101010101010101
0102020202020303030303040404040405050607080A0A0C0C0E0F0F11111315151717191A1B1C1D
1E2020222324262628292A2C2C2E2E2F3131333335363738393A3C3C3E3E40414243434547474849
4A4C4C4D4E4F515152535456565758595B5B5C5D5E5F60616163646566666869696B6B6C6E6E6F6F
717272747475777778787A7B7B7D7D7E7F8081818284848585878888898A8B8C8C8E8E8F90909292
939494959697989899999A9C9C9D9D9E
>
0
0
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
FFFEFEFDFDFCFBFBFAFAF9F8F8F7F7F6F5F5F4F4F3F2F2F1F1F0EFEFEEEEEDECECEBEBEAE9E9E8E8
E7E6E6E5E5E4E3E3E2E2E1E0E0DFDFDEDDDDDCDCDBDADAD9D9D8D7D7D6D6D5D4D4D3D3D2D1D1D0D0
CFCECECDCDCCCBCBCACAC9C8C8C7C7C6C5C5C4C4C3C2C2C1C1C0BFBFBEBEBDBCBCBBBBBAB9B9B8B8
B7B6B6B5B5B4B3B3B2B2B1B0B0AFAFAEADADACACABAAAAA9A9A8A7A7A6A6A5A4A4A3A3A2A1A1A0A0
9F9E9E9D9D9C9B9B9A9A999898979796959594949392929191908F8F8E8E8D8C8C8B8B8A89898888
878686858584838382828180807F7F7E7D7D7C7C7B7A7A7979787777767675747473737271717070
6F6E6E6D6D6C6B6B6A6A696868676766
>
1
4 %_Br
[
0.0275 0.3922 0.9412 0.0039 1 0.6 0 2 50 100 %_Bs
0.0118 0.9608 0.9137 0 1 0 0 2 35.5263 57.3034 %_Bs
0.0314 0.0196 0.9137 0 1 1 0 2 50 55.618 %_Bs
0.0078 0.6196 0 0 1 0.4 1 2 50 44.9438 %_Bs
0.8353 0 0 0 0 1 1 2 50 19.1011 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 1)
(Unnamed gradient 1) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_Bs
1 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 16)
(Unnamed gradient 16) 0 5 Bd
[
<
080909090A0A0A0A0B0C0C0C0D0D0E0F0F0F101111111213131314151516161717181919191A1B1B
1C1D1D1D1E1F1F202121212223242424252526262727282829292A2B2B2B2C2D2D2E2E2F2F2F3030
313132323333343435353536373737383939393A3A3A3B3B3C3C3D3D3E3E3E3F3F40404141414242
424343434444454545464646474848484949494A4A4A4A4B4B4B4C4C4D4D4E4E4F4F4F5050505151
5151525252535353545455555555565656575757585858585959595A
>
<
41414243444546474848494A4B4C4C4D4E4F4F5051525353555556575859595A5B5C5D5E5E5F6061
616263646565666768696A6A6B6C6D6D6E6F707071727374747576777879797A7B7C7D7D7F7F8081
8283838585868788898A8B8C8D8D8F8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7
A8A9AAABACADAEB0B1B2B3B4B5B6B7B9BABBBCBDBEBFC1C2C3C5C6C7C8C9CBCCCDCECFD1D2D4D5D7
D8DADBDCDEDFE1E2E4E5E6E8E9EAEBECEDEEEEEFF0F0F1F1F2F2F3F3
>
<
F5F5F5F6F6F6F6F6F6F5F5F4F4F3F3F2F2F1F1F0F0F0EFEFEEEEEEEDEDEDEDECECECECECECECECEC
ECECECECECECECECECECECECEDEDEDEEEEEEEFF0F0F1F1F2F3F3F4F5F5F6F7F8F8F9FAFBFAFAFAF9
F9F8F7F7F7F6F6F6F5F5F5F4F4F4F4F4F3F3F2F2F2F1F1F1F0F0F0EFEFEFEFEFEFEEEEEEEEEEEEEE
EEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F1F1F1F1F2F2F3F3F4F4F5F5F6F7F7F8F9FAFAFBFCFCFBFBFA
FAF9F8F8F8F7F7F6F6F5F5F4F4F3F3F3F2F1F1F1F0EFEFEFEEEDEDED
>
<
01010101010101010101010202020202020202020202030303030303030303030303040404040504
0505050505060606060606070707070808080909090A0A0A0B0B0B0C0C0C0C0D0D0D0D0E0E0E0F0F
10101111111212121313131314141415151616171717181819191A1A1B1B1B1C1C1D1D1E1E1F2020
20212222232324242526262627282828292A2A2B2C2D2D2E2E2E2F30313132333333343535363738
38393A3B3B3C3D3D3E3F40404041424243444446474848494A4B4B4C
>
<
FCFBFBFAF9F8F8F7F6F5F5F4F3F3F2F1F0F0EFEEEDEDECEBEBEAE9E8E8E7E6E5E5E4E3E3E2E1E0E0
DFDEDDDDDCDBDBDAD9D8D8D7D6D5D5D4D3D3D2D1D0D0CFCECDCDCCCBCBCAC9C8C8C7C6C5C5C4C3C3
C2C1C0C0BFBEBDBDBCBBBBBAB9B8B8B7B6B5B5B4B3B3B2B1B0B0AFAEADADACABABAAA9A8A8A7A6A5
A5A4A3A3A2A1A0A09F9E9D9D9C9B9B9A99989897969595949393929190908F8E8D8D8C8B8B8A8988
8887868585848383828180807F7E7D7D7C7B7B7A7978787776757574
>
<
BBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594
939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C
6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544
434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C
1B1A191817161514131211100F0E0D0C0B0A09080706050403020100
>
0
4 %_Br
<
5A59595958585858575757565656555555555454535353525252515151515050504F4F4F4E4E4D4D
4C4C4B4B4B4A4A4A4A49494948484847464646454545444443434342424241414140403F3F3E3E3E
3D3D3C3C3B3B3A3A3A3939393837373736353535343433333232313130302F2F2F2E2E2D2D2C2B2B
2B2A292928282727262625252424242322212121201F1F1E1D1D1D1C1B1B1A191919181717161615
151413131312111111100F0F0F0E0D0D0C0C0C0B0A0A0A0A09090908
>
<
F3F3F2F2F1F1F0F0EFEEEEEDECEBEAE9E8E6E5E4E2E1DFDEDCDBDAD8D7D5D4D2D1CFCECDCCCBC9C8
C7C6C5C3C2C1BFBEBDBCBBBAB9B7B6B5B4B3B2B1B0AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C
9B9A999897969594939291908F8F8D8D8C8B8A89888786858583838281807F7F7D7D7C7B7A797978
777675747473727170706F6E6D6D6C6B6A6A6968676665656463626161605F5E5E5D5C5B5A595958
5756555553535251504F4F4E4D4C4C4B4A4948484746454443424141
>
<
EDEDEDEEEFEFEFF0F1F1F1F2F3F3F3F4F4F5F5F6F6F7F7F8F8F8F9FAFAFBFBFCFCFBFAFAF9F8F7F7
F6F5F5F4F4F3F3F2F2F1F1F1F1F0F0F0F0F0EFEFEFEFEFEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEF
EFF0F0F0F1F1F1F2F2F2F3F3F4F4F4F4F4F5F5F5F6F6F6F7F7F7F8F9F9FAFAFAFBFAF9F8F8F7F6F5
F5F4F3F3F2F1F1F0F0EFEEEEEEEDEDEDECECECECECECECECECECECECECECECECECECECECECEDEDED
EDEEEEEEEFEFF0F0F0F1F1F2F2F3F3F4F4F5F5F6F6F6F6F6F6F5F5F5
>
<
4C4B4B4A49484847464444434242414040403F3E3D3D3C3B3B3A3938383736353534333333323131
302F2E2E2E2D2D2C2B2A2A292828282726262625242423232222212020201F1E1E1D1D1C1C1B1B1B
1A1A19191818171717161615151414141313131312121211111110100F0F0E0E0E0D0D0D0D0C0C0C
0C0B0B0B0A0A0A090909080808070707070606060606060505050505040504040404030303030303
03030303030302020202020202020202020101010101010101010101
>
<
74757576777878797A7B7B7C7D7D7E7F80808182838384858586878888898A8B8B8C8D8D8E8F9090
9192939394959596979898999A9B9B9C9D9D9E9FA0A0A1A2A3A3A4A5A5A6A7A8A8A9AAABABACADAD
AEAFB0B0B1B2B3B3B4B5B5B6B7B8B8B9BABBBBBCBDBDBEBFC0C0C1C2C3C3C4C5C5C6C7C8C8C9CACB
CBCCCDCDCECFD0D0D1D2D3D3D4D5D5D6D7D8D8D9DADBDBDCDDDDDEDFE0E0E1E2E3E3E4E5E5E6E7E8
E8E9EAEBEBECEDEDEEEFF0F0F1F2F3F3F4F5F5F6F7F8F8F9FAFBFBFC
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABB
>
0
4 %_Br
<
080909090A0A0A0A0B0C0C0C0D0D0E0F0F0F101111111213131314151516161717181919191A1B1B
1C1D1D1D1E1F1F202121212223242424252526262727282829292A2B2B2B2C2D2D2E2E2F2F2F3030
313132323333343435353536373737383939393A3A3A3B3B3C3C3D3D3E3E3E3F3F40404141414242
424343434444454545464646474848484949494A4A4A4A4B4B4B4C4C4D4D4E4E4F4F4F5050505151
5151525252535353545455555555565656575757585858585959595A
>
<
41414243444546474848494A4B4C4C4D4E4F4F5051525353555556575859595A5B5C5D5E5E5F6061
616263646565666768696A6A6B6C6D6D6E6F707071727374747576777879797A7B7C7D7D7F7F8081
8283838585868788898A8B8C8D8D8F8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7
A8A9AAABACADAEB0B1B2B3B4B5B6B7B9BABBBCBDBEBFC1C2C3C5C6C7C8C9CBCCCDCECFD1D2D4D5D7
D8DADBDCDEDFE1E2E4E5E6E8E9EAEBECEDEEEEEFF0F0F1F1F2F2F3F3
>
<
F5F5F5F6F6F6F6F6F6F5F5F4F4F3F3F2F2F1F1F0F0F0EFEFEEEEEEEDEDEDEDECECECECECECECECEC
ECECECECECECECECECECECECEDEDEDEEEEEEEFF0F0F1F1F2F3F3F4F5F5F6F7F8F8F9FAFBFAFAFAF9
F9F8F7F7F7F6F6F6F5F5F5F4F4F4F4F4F3F3F2F2F2F1F1F1F0F0F0EFEFEFEFEFEFEEEEEEEEEEEEEE
EEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F1F1F1F1F2F2F3F3F4F4F5F5F6F7F7F8F9FAFAFBFCFCFBFBFA
FAF9F8F8F8F7F7F6F6F5F5F4F4F3F3F3F2F1F1F1F0EFEFEFEEEDEDED
>
<
01010101010101010101010202020202020202020202030303030303030303030303040404040504
0505050505060606060606070707070808080909090A0A0A0B0B0B0C0C0C0C0D0D0D0D0E0E0E0F0F
10101111111212121313131314141415151616171717181819191A1A1B1B1B1C1C1D1D1E1E1F2020
20212222232324242526262627282828292A2A2B2C2D2D2E2E2E2F30313132333333343535363738
38393A3B3B3C3D3D3E3F40404041424243444446474848494A4B4B4C
>
<
FCFBFBFAF9F8F8F7F6F5F5F4F3F3F2F1F0F0EFEEEDEDECEBEBEAE9E8E8E7E6E5E5E4E3E3E2E1E0E0
DFDEDDDDDCDBDBDAD9D8D8D7D6D5D5D4D3D3D2D1D0D0CFCECDCDCCCBCBCAC9C8C8C7C6C5C5C4C3C3
C2C1C0C0BFBEBDBDBCBBBBBAB9B8B8B7B6B5B5B4B3B3B2B1B0B0AFAEADADACABABAAA9A8A8A7A6A5
A5A4A3A3A2A1A0A09F9E9D9D9C9B9B9A99989897969595949393929190908F8E8D8D8C8B8B8A8988
8887868585848383828180807F7E7D7D7C7B7B7A7978787776757574
>
<
BBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594
939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C
6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544
434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C
1B1A191817161514131211100F0E0D0C0B0A09080706050403020100
>
0
4 %_Br
<
5A59595958585858575757565656555555555454535353525252515151515050504F4F4F4E4E4D4D
4C4C4B4B4B4A4A4A4A49494948484847464646454545444443434342424241414140403F3F3E3E3E
3D3D3C3C3B3B3A3A3A3939393837373736353535343433333232313130302F2F2F2E2E2D2D2C2B2B
2B2A292928282727262625252424242322212121201F1F1E1D1D1D1C1B1B1A191919181717161615
151413131312111111100F0F0F0E0D0D0C0C0C0B0A0A0A0A09090908
>
<
F3F3F2F2F1F1F0F0EFEEEEEDECEBEAE9E8E6E5E4E2E1DFDEDCDBDAD8D7D5D4D2D1CFCECDCCCBC9C8
C7C6C5C3C2C1BFBEBDBCBBBAB9B7B6B5B4B3B2B1B0AEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C
9B9A999897969594939291908F8F8D8D8C8B8A89888786858583838281807F7F7D7D7C7B7A797978
777675747473727170706F6E6D6D6C6B6A6A6968676665656463626161605F5E5E5D5C5B5A595958
5756555553535251504F4F4E4D4C4C4B4A4948484746454443424141
>
<
EDEDEDEEEFEFEFF0F1F1F1F2F3F3F3F4F4F5F5F6F6F7F7F8F8F8F9FAFAFBFBFCFCFBFAFAF9F8F7F7
F6F5F5F4F4F3F3F2F2F1F1F1F1F0F0F0F0F0EFEFEFEFEFEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEF
EFF0F0F0F1F1F1F2F2F2F3F3F4F4F4F4F4F5F5F5F6F6F6F7F7F7F8F9F9FAFAFAFBFAF9F8F8F7F6F5
F5F4F3F3F2F1F1F0F0EFEEEEEEEDEDEDECECECECECECECECECECECECECECECECECECECECECEDEDED
EDEEEEEEEFEFF0F0F0F1F1F2F2F3F3F4F4F5F5F6F6F6F6F6F6F5F5F5
>
<
4C4B4B4A49484847464444434242414040403F3E3D3D3C3B3B3A3938383736353534333333323131
302F2E2E2E2D2D2C2B2A2A292828282726262625242423232222212020201F1E1E1D1D1C1C1B1B1B
1A1A19191818171717161615151414141313131312121211111110100F0F0E0E0E0D0D0D0D0C0C0C
0C0B0B0B0A0A0A090909080808070707070606060606060505050505040504040404030303030303
03030303030302020202020202020202020101010101010101010101
>
<
74757576777878797A7B7B7C7D7D7E7F80808182838384858586878888898A8B8B8C8D8D8E8F9090
9192939394959596979898999A9B9B9C9D9D9E9FA0A0A1A2A3A3A4A5A5A6A7A8A8A9AAABABACADAD
AEAFB0B0B1B2B3B3B4B5B5B6B7B8B8B9BABBBBBCBDBDBEBFC0C0C1C2C3C3C4C5C5C6C7C8C8C9CACB
CBCCCDCDCECFD0D0D1D2D3D3D4D5D5D6D7D8D8D9DADBDBDCDDDDDEDFE0E0E1E2E3E3E4E5E5E6E7E8
E8E9EAEBEBECEDEDEEEFF0F0F1F2F3F3F4F5F5F6F7F8F8F9FAFBFBFC
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABB
>
0
4 %_Br
[
0.3529 0.9529 0.9294 0.298 0.4549 0 0 2 50 100 %_Bs
0.0314 0.2549 0.9608 0.0039 0.9882 0.7333 0 2 50 78.0899 %_Bs
0.3529 0.9529 0.9294 0.298 0.4549 0 0 2 50 53.9326 %_Bs
0.0314 0.2549 0.9608 0.0039 0.9882 0.7333 0 2 50 28.0899 %_Bs
0.3529 0.9529 0.9294 0.298 0.4549 0 0 2 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 19)
(Unnamed gradient 19) 1 3 Bd
[
0.0745
0.051
0.0392
0
0.9216
0.9216
0.9216
4 %_Br
<
131415161718191A1B1B1C1D1E1F2021212223242526272828292A2A2B2C2D2E2F30303031323334
35353637383838393A3B3B3C3D3E3F3F3F404141424343444445454647474849494A4A4A4B4C4C4D
4E4E4F4F4F505051525252525353545555565656565757585859595A5A5A5A5B5B5C5C5D5D5D5D5E
5E5F5F5F606060606161616262636363636363646464656565666666666666676767676868686869
696969696969696A6A6A6A6A6B6B6B6B6B6B6B6B6B6B6B6B6C6C6C6C6C6C6C6C6C6C6D6D6D6D6D6D
6D6D6D6D6D6D6D6D
>
<
0D0E0E0F10101111121313141515161717171819191A1B1B1C1D1D1D1E1E1F202021212222232424
25252526272727282929292A2B2B2C2C2C2D2E2E2E2F2F3030313131323233333334353535363637
373738383839393A3A3A3B3B3B3B3C3D3D3D3D3E3E3E3E3F3F404040404141414142424343434344
444444444545454546464647474747474848484848484949494A4A4A4A4A4A4B4B4B4B4B4B4B4B4C
4C4C4C4C4C4C4C4D4D4D4D4D4E4E4E4E4E4E4E4E4E4E4E4E4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F
4F4F4F4F4F4F4F4F
>
<
0A0A0B0B0C0C0D0D0E0E0F0F10101111111213131414151516161717171819191A1A1A1B1B1C1D1D
1E1E1E1F1F20202121222222232324242525262626272728282929292A2A2B2B2B2C2C2C2D2E2E2E
2F2F303030313131323233333333343434353536363636373738383838393939393A3A3B3B3B3B3C
3C3D3D3D3D3D3E3E3E3E3E3F3F404040404040414141414141424242434343434343434444444445
45454545454545464646464646464646464647474747474748484848484848484848484848484848
4848484848484848
>
<
00000001010101010101010101010101010202020202020202020202020303030303030304040404
0404040405050505050505050606060606070707070707080808080909090909090A0A0A0A0A0A0B
0B0B0B0B0C0C0C0D0D0D0D0D0E0E0E0F0F0F0F0F0F10101010111111111111121212121313131314
141515151515161616161617171717171818181919191919191A1A1A1A1A1A1B1B1B1B1B1B1B1B1C
1C1C1C1D1D1D1D1D1D1D1D1D1E1E1E1E1E1E1F1F1F1F1F1F20202020202020202020202020202020
2020202020202020
>
<
EBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDCDBDAD9D8D7D6D5D4D3D2D2D1D0CFCECDCCCCCBCAC9C8C7
C6C6C5C4C3C2C2C1C0BFBFBEBDBCBBBBBAB9B8B8B7B6B6B5B4B3B3B2B1B1B0AFAFAEADADACABABAA
A9A9A8A8A7A6A6A5A4A4A3A3A2A2A1A0A09F9F9E9E9D9D9C9C9B9B9A9A9999989897979696959594
94939393929291919090908F8F8E8E8E8D8D8D8C8C8C8B8B8B8A8A8A898989888888888787878786
86868685858585848484848483838383838382828282828281818181818181818181808080808080
8080808080808080
>
<
EBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDCDBDAD9D8D7D6D5D4D3D2D2D1D0CFCECDCCCCCBCAC9C8C7
C6C6C5C4C3C2C2C1C0BFBFBEBDBCBBBBBAB9B8B8B7B6B6B5B4B3B3B2B1B1B0AFAFAEADADACABABAA
A9A9A8A8A7A6A6A5A4A4A3A3A2A2A1A0A09F9F9E9E9D9D9C9C9B9B9A9A9999989897979696959594
94939393929291919090908F8F8E8E8E8D8D8D8C8C8C8B8B8B8A8A8A898989888888888787878786
86868685858585848484848483838383838382828282828281818181818181818181808080808080
8080808080808080
>
<
EBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDCDBDAD9D8D7D6D5D4D3D2D2D1D0CFCECDCCCCCBCAC9C8C7
C6C6C5C4C3C2C2C1C0BFBFBEBDBCBBBBBAB9B8B8B7B6B6B5B4B3B3B2B1B1B0AFAFAEADADACABABAA
A9A9A8A8A7A6A6A5A4A4A3A3A2A2A1A0A09F9F9E9E9D9D9C9C9B9B9A9A9999989897979696959594
94939393929291919090908F8F8E8E8E8D8D8D8C8C8C8B8B8B8A8A8A898989888888888787878786
86868685858585848484848483838383838382828282828281818181818181818181808080808080
8080808080808080
>
4 %_Br
[
0.0745 0.051 0.0392 0 0.9216 0.9216 0.9216 2 50 0 %_Bs
0.0745 0.051 0.0392 0 0.9216 0.9216 0.9216 2 30 4 %_Bs
0.4275 0.3098 0.2824 0.1255 0.502 0.502 0.502 2 50 25.2809 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 72)
(Unnamed gradient 72) 1 4 Bd
[
<
30303030303030303030303030303030303031313131313232323232333333333334343434353535
35363636373737373838383838383939393A3A3B3B3B3C3C3C3D3D3E3E3E3F3F3F3F3F4040414142
4243434344444444454546464747484849494A4A4A4A4B4C4C4D4D4E4E4F4F4F5050515152525253
5354545556565656575858595A5A5A5B5B5C5D5D5D5E5E5F60606061616263636364656566666767
686969696A6B6B6B6C6D6D6D6E6F6F6F7071717272737374757575767677787878797A7A7B7B7B7C
7D7D7E7F7F7F808181828383848585858687878889898A8B8B8C8D8D8D8E8F8F9091929293949495
95969797989999
>
<
21212121212121212122222222222222222222222222222323232323242424242424242424252525
252525252626262627272727272728282829292929292A2A2A2B2B2B2B2B2C2C2C2C2C2D2D2E2E2E
2E2F2F2F3030303031313131323233333333343435353536363737373738383839393A3A3A3A3B3B
3B3C3C3D3D3D3E3E3E3F3F404040414141424343434444444545454646474748484849494A4A4B4B
4B4C4C4C4D4E4E4E4F4F5050505151515252535454545555565656575758585859595A5A5B5B5B5C
5C5D5E5E5F5F5F6060616262636363646465666667676869696A6A6B6B6C6C6D6E6E6F6F70717172
72737474757676
>
<
1A1A1A1A1A1A1A1A1A1B1B1B1B1B1B1B1B1B1B1B1B1B1B1C1C1C1C1C1D1D1D1D1D1D1D1D1D1E1E1E
1E1E1E1E1F1F1F1F1F1F1F2020202121212121222222222222232323232324242525252525262626
2627272728282828292929292A2A2B2B2B2B2C2C2C2C2D2E2E2E2E2F2F3030303131313132323333
33343434353536363637373838383939393A3B3B3B3C3C3D3D3D3E3E3E3F40404041414142434343
4445454546464747484849494A4A4B4B4B4C4D4D4D4E4E4F50505051515253535354545556565657
575859595A5A5B5B5C5D5D5E5F5F5F6061626263646465666767686969696A6B6C6C6D6E6F6F7071
71727374747576
>
<
03030303030303030303030303030303030304040404040404040404040404040404040404040404
04040404040404040505050505050505050505050505050505060606060606060606060707070707
0707070708080808080809090909090909090A0A0A0A0A0A0A0B0B0B0B0B0B0C0C0C0D0D0D0D0D0E
0E0E0E0F0F0F0F0F101010111111111212121313131414151515161616171718181919191A1A1B1B
1B1C1C1D1D1E1F1F202021212223232324252627272728292A2A2B2C2D2E2F2F3031323334343536
3738393A3B3B3C3D3E3F40414243434445464748494A4C4D4E4F5052525354565758595B5C5D5F60
6263656668696B
>
<
CCCCCCCCCCCCCCCCCCCBCBCBCBCBCBCBCBCBCACACACACAC9C9C9C9C9C8C8C8C8C8C7C7C7C7C6C6C6
C6C5C5C5C4C4C4C4C3C3C3C2C2C2C1C1C1C0C0BFBFBFBEBEBEBDBDBCBCBCBBBBBABABAB9B9B8B8B7
B7B6B6B6B5B5B4B4B3B3B2B2B1B1B0B0AFAFAEAEADADACABABAAAAA9A9A8A8A7A6A6A5A5A4A4A3A2
A2A1A1A09F9F9E9E9D9C9C9B9A9A9998989796969594949392929190908F8E8D8D8C8B8B8A898888
878686858483828281807F7F7E7D7C7C7B7A7978787776757474737271706F6F6E6D6C6B6A6A6968
6766656463636261605F5E5D5C5B5B5A595857565554535251504F4E4E4D4C4B4A49484746454443
4241403F3E3D3C
>
<
CCCCCCCCCCCCCCCCCCCBCBCBCBCBCBCBCBCBCACACACACAC9C9C9C9C9C8C8C8C8C8C7C7C7C7C6C6C6
C6C5C5C5C4C4C4C4C3C3C3C2C2C2C1C1C1C0C0BFBFBFBEBEBEBDBDBCBCBCBBBBBABABAB9B9B8B8B7
B7B6B6B6B5B5B4B4B3B3B2B2B1B1B0B0AFAFAEAEADADACABABAAAAA9A9A8A8A7A6A6A5A5A4A4A3A2
A2A1A1A09F9F9E9E9D9C9C9B9A9A9998989796969594949392929190908F8E8D8D8C8B8B8A898888
878686858483828281807F7F7E7D7C7C7B7A7978787776757474737271706F6F6E6D6C6B6A6A6968
6766656463636261605F5E5D5C5B5B5A595857565554535251504F4E4E4D4C4B4A49484746454443
4241403F3E3D3C
>
<
CCCCCCCCCCCCCCCCCCCBCBCBCBCBCBCBCBCBCACACACACAC9C9C9C9C9C8C8C8C8C8C7C7C7C7C6C6C6
C6C5C5C5C4C4C4C4C3C3C3C2C2C2C1C1C1C0C0BFBFBFBEBEBEBDBDBCBCBCBBBBBABABAB9B9B8B8B7
B7B6B6B6B5B5B4B4B3B3B2B2B1B1B0B0AFAFAEAEADADACABABAAAAA9A9A8A8A7A6A6A5A5A4A4A3A2
A2A1A1A09F9F9E9E9D9C9C9B9A9A9998989796969594949392929190908F8E8D8D8C8B8B8A898888
878686858483828281807F7F7E7D7C7C7B7A7978787776757474737271706F6F6E6D6C6B6A6A6968
6766656463636261605F5E5D5C5B5B5A595857565554535251504F4E4E4D4C4B4A49484746454443
4241403F3E3D3C
>
4 %_Br
<
999A9B9B9C9D9D9E9E9FA0A0A1A2A2A4A4A5A5A6A7A7A8A8A9AAAAABABAC
>
<
7677777879797A7A7B7C7C7D7D7E7F808181828283848485868687878888
>
<
76777778797A7A7B7C7C7D7E7F7F8082828384858586878888898A8A8B8C
>
<
6B6C6E7071737576787A7C7D7F818387898B8D8F919395979A9C9EA0A3A5
>
<
3C3B3A393837363534333231302F2E2C2B2A292827262524232221201F1E
>
<
3C3B3A393837363534333231302F2E2C2B2A292827262524232221201F1E
>
<
3C3B3A393837363534333231302F2E2C2B2A292827262524232221201F1E
>
4 %_Br
<
ACABAAAAA9A8A7A7A6A5A4A4A3A2A2A0A09F9E9E9D9D9C9B9B9A9998979796969595949493929291
908F8F8F8E8D8D8C8B8B8B8A898989888787878685858584848383838281818181807F7F7F7F7E7E
7D7D7D7C7C7B7B7B7B7A7A7A7A7A7979787878787877777676767676767575757575757474747373
737373737373727272727171717171717171717170707070706F6F6F6F6F6F6F6F6F6F6F6F6F6F6F
6E6E6E6E6E6E6E6E6E6E6E6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D
6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D6D
>
<
8888878686858483828281807F7F7E7D7C7C7B7A7A797978777776757474737372727171706F6F6E
6E6D6C6C6C6B6A6A696969686767676666656564646463636362626261606060605F5F5F5E5E5E5E
5D5C5C5C5C5B5B5B5B5A5A5A5A5A5959595958585858585757575757575656565656565555555555
55555454545454545454535353535252525252525252525252515151515151515151515151515151
505050505050505050505050505050505050505050505050505050504F4F4F4F4F4F4F4F4F4F4F4F
4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F
>
<
8C8B8A89888886858584828281807F7E7D7C7C7B7A7A797877777674747372727171706F6F6E6D6C
6C6B6A6A6969686767676665646464636262626160605F5F5F5E5D5D5D5C5C5B5B5B5A5A59595959
58575757575656565655555554545454535353535352525151515151515050505050504F4F4F4E4E
4E4E4E4E4E4E4D4D4D4D4D4D4D4D4C4C4C4C4C4C4B4B4B4B4B4B4B4B4B4B4B4B4A4A4A4A4A4A4A4A
4A4A4A4A4A4A4A4A4A4A4A4949494949494949494949494949494949484848484848484848484848
48484848484848484848484848484848484848484848484848484848484848
>
<
A5A39E9C9A9793918F8D89878583817D7C7A7876757371706E6C6B686665636362605F5D5C5B5958
575654545352504F4E4E4D4C4A4949484746464544444342424140403F3E3E3D3D3C3B3B3A3A3939
3837373636353534343333333232313130302F2F2F2E2E2D2D2D2C2C2C2B2B2B2A2A2A2929292828
28282727272727272727262626262525252525252424242424232323232323232323232323232323
22222222222222222222222121212121212121212121212121212121202020202020202020202020
20202020202020202020202020202020202020202020202020202020202020
>
<
1E1F21222324262728292B2C2D2E2F3132333435363738393A3B3C3E3F4041414243444546474849
4A4B4C4C4D4E4F505151525354555556575858595A5A5B5C5C5D5E5E5F6060616162636364646565
666767686869696A6A6B6B6B6C6C6D6D6E6E6F6F6F70707171717272727373737474747575757676
76767777777778787878797979797A7A7A7A7A7A7B7B7B7B7B7C7C7C7C7C7C7C7D7D7D7D7D7D7D7D
7E7E7E7E7E7E7E7E7E7E7E7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F808080808080808080808080
80808080808080808080808080808080808080808080808080808080808080
>
<
1E1F21222324262728292B2C2D2E2F3132333435363738393A3B3C3E3F4041414243444546474849
4A4B4C4C4D4E4F505151525354555556575858595A5A5B5C5C5D5E5E5F6060616162636364646565
666767686869696A6A6B6B6B6C6C6D6D6E6E6F6F6F70707171717272727373737474747575757676
76767777777778787878797979797A7A7A7A7A7A7B7B7B7B7B7C7C7C7C7C7C7C7D7D7D7D7D7D7D7D
7E7E7E7E7E7E7E7E7E7E7E7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F808080808080808080808080
80808080808080808080808080808080808080808080808080808080808080
>
<
1E1F21222324262728292B2C2D2E2F3132333435363738393A3B3C3E3F4041414243444546474849
4A4B4C4C4D4E4F505151525354555556575858595A5A5B5C5C5D5E5E5F6060616162636364646565
666767686869696A6A6B6B6B6C6C6D6D6E6E6F6F6F70707171717272727373737474747575757676
76767777777778787878797979797A7A7A7A7A7A7B7B7B7B7B7C7C7C7C7C7C7C7D7D7D7D7D7D7D7D
7E7E7E7E7E7E7E7E7E7E7E7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F808080808080808080808080
80808080808080808080808080808080808080808080808080808080808080
>
4 %_Br
[
0.1882 0.1294 0.102 0.0118 0.8 0.8 0.8 2 66.67 0 %_Bs
0.6 0.4627 0.4627 0.4196 0.2353 0.2353 0.2353 2 50 60 %_Bs
0.6745 0.5333 0.549 0.6471 0.1176 0.1176 0.1176 2 20 60.5 %_Bs
0.4275 0.3098 0.2824 0.1255 0.502 0.502 0.502 2 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 81)
(Unnamed gradient 81) 1 4 Bd
[
<
0001010203040505060708090A0B0B0C0D0E0F10111212131415161718191A1B1C1D1E1F20212223
24252628292A2B2C2D2D2E2F303132333435363738393A3B3C3D3E40414243444546474748494B4C
4C4D4E4F50515253545556575858595A5B5C5D5D5E5F60616263636465666768696B6C6D6E6E6F70
7172747576777878797B7C7D7F80818182838586878888898A8B8C8D8E8E8F909192939394959697
979898999A9A9B9C9C9C9D9E9F9FA0A0A1A1A2A2A3
>
<
00000101010202020203030304040404040505050505060606060606060707070707070707080808
080808080808080908090909090909090909090909090A09090A090A0A090A09090A090A0A090A0A
090A0A0A0A090A0A0A0A090A0A0A0A0A0B0A0A0A0A0A0A0A0A0A0A0B0B0A0B0A0A0A0A0B0A0A0B0A
0A0A0A0A0A0A0A0A0A0A0A090A09090A090909090809090809090909090A0A090A0A090B0A0A090A
0A0A0B0A0A0B0B0B0B0B0B0C0B0B0B0C0C0C0C0C0C
>
0
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B6B5B4B3B2
B1B0AFAEADACABAAA9A8A7A6A5A5A4A3A2A1A09F9E9D9C9B9A99999897969594939291908F8F8E8D
8C8B8A89888786868584838281807F7F7E7D7C7B7A7979787776757473737271706F6E6E6D6C6B6A
6A696867666665646363626160605F5E5D5D5C5C5B
>
<
FFFFFEFEFDFDFDFCFCFBFBFBFAFAF9F9F9F8F8F7F7F7F6F6F5F5F5F4F4F3F3F3F2F2F1F1F1F0F0EF
EFEFEEEEEDEDEDECECEBEBEBEAEAEAE9E9E8E8E8E7E7E6E6E6E5E5E4E4E4E3E3E3E2E2E1E1E1E0E0
E0DFDFDEDEDEDDDDDCDCDCDBDBDBDADAD9D9D9D8D8D8D7D7D7D6D6D5D5D5D4D4D4D3D3D2D2D2D1D1
D1D0D0D0CFCFCECECECDCDCDCCCCCCCBCBCBCACACAC9C9C9C8C8C8C7C7C6C6C6C5C5C5C4C4C4C4C3
C3C3C2C2C2C1C1C1C0C0C0BFBFBFBFBEBEBEBDBDBD
>
1
4 %_Br
<
A3A4A5A6A7A8A9AAABACADAEB0B1B2B3B4B5B7B8B9BBBCBDBEC0C1C2C4C5C6C7C9CACCCDCED0D1D3
D4D5D5D7D8D9DADCDDDFDFDFDFE0DFDFDEDFDEDFDEDEDEDDDEDDDDDDDDDDDDDDDEDEDEDFDFDFDFE0
E0E1E1E2E2E3E3E5E5E6E6E8E8EAEAEBEB
>
<
0C0D0C0D0D0D0D0E0D0E0F0E0F0F0F0F100F10111111111211121212131313131413141415151516
151616171717171817181A191B1B1D1C1E1E201F21212324242626272729292A2A2B2B2D2D2E2E2F
2F30303131323233333434353536363737
>
0
0
<
5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534
33323231302F2E2D2C2B2A292827262524232221201F1E1D1C1C1B1A191817161514131211100F0F
0E0D0C0B0A090807070605040302020100
>
<
BDBCBCBBBBBABAB9B9B8B7B7B6B6B5B5B4B4B3B2B2B1B1B0B0AFAFAEADADACACABABAAAAA9A8A8A7
A7A6A6A5A5A4A4A3A3A2A1A1A0A09F9F9E9E9D9D9C9C9B9A9A999998989797969695959494939392
92919190908F8F8E8E8D8D8C8C8B8B8A8A
>
1
4 %_Br
<
EBEBEBEBEBEBEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E8E8E8E8E8E8E8
E8E9E9E9E9EAEBEBEBECEDEDEDEEEFEFF0F0F1F2F3F3F4F4F4F3F3F3F2F3F2F1F0F0EFEFEEEEEEEE
EDEDEDEDEDEDEDEDEDEDEDEEEEEEEEEFEFF0F0EFEFEFEFEFEFEFEFEFEFEF
>
<
3737373838393A3A3A3B3B3D3D3F3F40404242434345474748484A4B4B4D4F4F5052525355555658
58595B5C5C5E5F60606263646466676869696B6C6D6E6E70717374757777787A7B7D7E8081818384
8687898A8C8D8F9091919394959798999B9C9E9FA1A2A4A5A7A9AAACADAF
>
0
0
<
00000000000000000000010101010101010101010101020202020202020202020303030303030303
03040404040404040404050505050505050506060606060606070707070707070708080808080808
090909090909090A0A0A0A0A0A0B0B0B0B0B0B0B0C0C0C0C0C0C0D0D0D0D
>
<
8A8A8A8989898888888787868685858484838382828180807F7F7E7D7D7C7B7B7A79797877777675
757473727271706F6F6E6D6C6C6B6A6968686766656464636261605F5E5E5D5C5B5A595857575655
54535251504F4E4D4C4C4B4A494847464544434241403F3E3D3C3B3A3938
>
<
FFFFFFFFFFFEFEFEFEFEFDFDFDFDFCFCFCFCFBFBFBFBFAFAFAF9F9F9F9F8F8F8F7F7F7F6F6F6F5F5
F5F4F4F3F3F3F2F2F2F1F1F1F0F0EFEFEFEEEEEDEDEDECECEBEBEBEAEAE9E9E8E8E8E7E7E6E6E5E5
E5E4E4E3E3E2E2E1E1E1E0E0DFDFDEDEDDDDDCDCDBDBDADAD9D9D8D8D7D7
>
4 %_Br
[
0 0 0 0 1 1 1 2 46.6667 9.4444 %_Bs
0.6392 0.0471 0 0 0.3569 0.7412 1 2 48.0769 43.3333 %_Bs
0.9216 0.2157 0 0 0 0.5412 1 2 59.6154 71.1111 %_Bs
0.9373 0.6863 0 0 0.051 0.2196 0.8431 2 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 82)
(Unnamed gradient 82) 0 3 Bd
[
0
0
0
<
00000000000000000000000000000000000000000000000101010101010101010101010102020202
02020202020202030303030303040404040404040505050505050606060607070707080808090909
090A0A0A0A0B0B0B0C0C0D0D0D0E0E0F0F0F101011111112121313141515161617171819191A1A1B
1B1C1D1D1E1F202021222323242526272728292A2B2C2D2E2F303132333435363738393A3B3C3D3E
3F404142434445464748494A4C4D4E4F50525354565758595B5C5D5F606263656668696B6C6E7071
737576787A7C7D7F81838587898B8D8F919395979A9C9EA0A3A5A7AAACAFB1B4B7B9BCBFC2C5C7CA
D0D6DBE0E4E8ECF0F2F4F6F7F9FBFDFF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
4 %_Br
0
0
0
<
FFFDFBF9F7F6F4F2F0ECE8E4E0DBD6D0CAC7C5C2BFBCB9B7B4B1AFACAAA7A5A3A09E9C9A97959391
8F8D8B89878583817F7D7C7A7876757371706E6C6B696866656362605F5D5C5B5958575654535250
4F4E4D4C4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827
272625242323222120201F1E1D1D1C1B1B1A1A191918171716161515141313121211111110100F0F
0F0E0E0D0D0D0C0C0B0B0B0A0A0A0A09090909080808070707070606060605050505050504040404
04040403030303030302020202020202020202020101010101010101010101010100000000000000
00000000000000000000000000000000
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
4 %_Br
[
0 0 0 1 0 0 0 2 50 100 %_Bs
0 0 0 0 1 1 1 2 50 40.45 %_Bs
0 0 0 1 0 0 0 2 50 1.1236 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (White, Black)
(White, Black) 0 2 Bd
[
0
0
0
<
00000000000000000000000000000000000000000000000101010101010101010101010102020202
02020202020202030303030303040404040404040505050505050606060607070707080808090909
090A0A0A0A0B0B0B0C0C0D0D0D0E0E0F0F0F101011111112121313141515161617171819191A1A1B
1B1C1D1D1E1F202021222323242526272728292A2B2C2D2E2F303132333435363738393A3B3C3D3E
3F404142434445464748494A4C4D4E4F50525354565758595B5C5D5F606263656668696B6C6E7071
737576787A7C7D7F81838587898B8D8F919395979A9C9EA0A3A5A7AAACAFB1B4B7B9BCBFC2C5C7CA
D0D6DBE0E4E8ECF0F2F4F6F7F9FBFDFF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
4 %_Br
[
0 0 0 1 0 0 0 2 50 100 %_Bs
0 0 0 0 1 1 1 2 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (Azure Rings)
(Azure Rings) 22.5 22.5 58.5 58.5 [
%AI3_Tile
(0 O 0 R 0 0 1 Xa
 0 0 1 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1.75 w 4 M []0 d0 XR
40.5 58.5 m
40.5 48.5586 32.4409 40.5 22.5 40.5 c
12.5591 40.5 4.5 48.5586 4.5 58.5 c
4.5 68.4414 12.5591 76.5 22.5 76.5 c
32.4409 76.5 40.5 68.4414 40.5 58.5 c
s40.5 22.5 m
40.5 12.5586 32.4409 4.5 22.5 4.5 c
12.5591 4.5 4.5 12.5586 4.5 22.5 c
4.5 32.4414 12.5591 40.5 22.5 40.5 c
32.4409 40.5 40.5 32.4414 40.5 22.5 c
s40.5 40.5 m
40.5 30.5586 32.4409 22.5 22.5 22.5 c
12.5591 22.5 4.5 30.5586 4.5 40.5 c
4.5 50.4414 12.5591 58.5 22.5 58.5 c
32.4409 58.5 40.5 50.4414 40.5 40.5 c
s58.5 58.5 m
58.5 48.5586 50.4409 40.5 40.5 40.5 c
30.5591 40.5 22.5 48.5586 22.5 58.5 c
22.5 68.4414 30.5591 76.5 40.5 76.5 c
50.4409 76.5 58.5 68.4414 58.5 58.5 c
s58.5 22.5 m
58.5 12.5586 50.4409 4.5 40.5 4.5 c
30.5591 4.5 22.5 12.5586 22.5 22.5 c
22.5 32.4414 30.5591 40.5 40.5 40.5 c
50.4409 40.5 58.5 32.4414 58.5 22.5 c
s58.5 40.5 m
58.5 30.5586 50.4409 22.5 40.5 22.5 c
30.5591 22.5 22.5 30.5586 22.5 40.5 c
22.5 50.4414 30.5591 58.5 40.5 58.5 c
50.4409 58.5 58.5 50.4414 58.5 40.5 c
s76.5 58.5 m
76.5 48.5586 68.4409 40.5 58.5 40.5 c
48.5591 40.5 40.5 48.5586 40.5 58.5 c
40.5 68.4414 48.5591 76.5 58.5 76.5 c
68.4409 76.5 76.5 68.4414 76.5 58.5 c
s76.5 22.5 m
76.5 12.5586 68.4409 4.5 58.5 4.5 c
48.5591 4.5 40.5 12.5586 40.5 22.5 c
40.5 32.4414 48.5591 40.5 58.5 40.5 c
68.4409 40.5 76.5 32.4414 76.5 22.5 c
s76.5 40.5 m
76.5 30.5586 68.4409 22.5 58.5 22.5 c
48.5591 22.5 40.5 30.5586 40.5 40.5 c
40.5 50.4414 48.5591 58.5 58.5 58.5 c
68.4409 58.5 76.5 50.4414 76.5 40.5 c
s%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Camouflage)
(Camouflage) 1 1 73 73 [
%AI3_Tile
(0 O 0 R 0.3882 0.6039 0.1529 Xa
 0.3882 0.6039 0.1529 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
1 73 m
1 1 L
73 1 L
73 73 L
1 73 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.4039 0.4 0.0824 Xa
 0.4039 0.4 0.0824 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
18.5449 73 m
18.5449 1 L
46.7832 1 L
46.7832 73 L
18.5449 73 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.8 0.8 0.1176 Xa
 0.8 0.8 0.1176 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
11.9512 1 m
11.9512 4.7129 9.2314 2.8813 9.2314 6.5938 c
9.2314 10.2334 4.25 10.2334 4.25 13.8735 c
4.25 17.4858 10.0313 17.4858 10.0313 21.0991 c
10.0313 24.832 10.208 24.832 10.208 28.5654 c
10.208 32.3071 5.5205 32.3071 5.5205 36.0469 c
5.5205 39.7021 11.8838 39.7021 11.8838 43.356 c
11.8838 47.0566 7.4609 47.0566 7.4609 50.7568 c
7.4609 54.4043 5.7959 54.4043 5.7959 58.0542 c
5.7959 61.7686 4.6631 61.7686 4.6631 65.4805 c
4.6631 69.1636 11.9512 69.3184 11.9512 73 C
27.9268 73 L
27.9268 69.3184 22.0635 69.1636 22.0635 65.4805 c
22.0635 61.7686 28.6631 61.7686 28.6631 58.0542 c
28.6631 54.4043 25.1553 54.4043 25.1553 50.7568 c
25.1553 47.0566 28.8145 47.0566 28.8145 43.356 c
28.8145 39.7021 22.1191 39.7021 22.1191 36.0469 c
22.1191 32.3071 26.3945 32.3071 26.3945 28.5654 c
26.3945 24.832 24.4248 24.832 24.4248 21.0991 c
24.4248 17.4858 20.3838 17.4858 20.3838 13.8735 c
20.3838 10.2334 24.6055 10.2334 24.6055 6.5938 c
24.6055 2.8813 27.9268 4.7129 27.9268 1 C
11.9512 1 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0824 0.4157 0.1725 Xa
 0.0824 0.4157 0.1725 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
41.875 1 m
41.875 4.7134 42.3867 2.8818 42.3867 6.5938 c
42.3867 10.2334 40.5947 10.2334 40.5947 13.8735 c
40.5947 17.4858 41.5742 17.4858 41.5742 21.0991 c
41.5742 24.832 43.6484 24.832 43.6484 28.5659 c
43.6484 32.3076 39.1709 32.3076 39.1709 36.0469 c
39.1709 39.7026 39.7549 39.7026 39.7549 43.356 c
39.7549 47.0566 45.3896 47.0566 45.3896 50.7568 c
45.3896 54.4043 40.1055 54.4043 40.1055 58.0542 c
40.1055 61.7686 40.6289 61.7686 40.6289 65.4805 c
40.6289 69.1636 41.875 69.3184 41.875 73 C
59.0752 73 L
59.0752 69.4219 53.4805 70.1934 53.4805 66.6143 c
53.4805 62.9136 55.8945 62.9136 55.8945 59.2153 c
55.8945 55.502 61.0059 55.502 61.0059 51.7886 c
61.0059 48.1489 60.5635 48.1489 60.5635 44.5103 c
60.5635 40.897 59.9277 40.897 59.9277 37.2842 c
59.9277 33.5508 56.3662 33.5508 56.3662 29.8169 c
56.3662 26.0762 61.0908 26.0762 61.0908 22.3354 c
61.0908 18.6812 52.6025 18.6812 52.6025 15.0264 c
52.6025 11.3262 55.7461 11.3262 55.7461 7.6265 c
55.7461 3.978 59.0752 4.6484 59.0752 1 C
41.875 1 L
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Honeycomb)
(Honeycomb) 12.9819 14.6548 65.8066 60.6758 [
%AI3_Tile
(0 O 0 R 0.4157 0 0 Xa
 0.4157 0 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d0 XR
52.3345 28.1372 m
40.6475 21.3906 L
40.6475 7.9009 L
52.3345 1.1543 L
64.0161 7.9009 L
64.0161 21.3906 L
52.3345 28.1372 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.3059 0 Xa
 1 0.3059 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
43.9536 19.4839 m
43.9536 9.8081 L
52.3345 4.9702 L
60.7153 9.8081 L
60.7153 19.4839 L
52.3345 24.3218 L
43.9536 19.4839 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.4157 0 0 Xa
 0.4157 0 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d0 XR
25.7944 28.1406 m
14.1099 21.3911 L
14.1099 7.9014 L
25.7944 1.1548 L
37.479 7.9014 L
37.479 21.394 L
25.7944 28.1406 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.3059 0 Xa
 1 0.3059 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
17.4126 19.4839 m
17.4126 9.8081 L
25.7944 4.9702 L
34.1743 9.8081 L
34.1743 19.4839 L
25.7944 24.3218 L
17.4126 19.4839 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.4157 0 0 Xa
 0.4157 0 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d0 XR
12.6846 50.7852 m
1 44.0356 L
1 30.5459 L
12.6846 23.7993 L
24.3691 30.5459 L
24.3691 44.0386 L
12.6846 50.7852 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.3059 0 Xa
 1 0.3059 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
4.3027 42.1284 m
4.3027 32.4526 L
12.6846 27.6147 L
21.0645 32.4526 L
21.0645 42.1284 L
12.6846 46.9663 L
4.3027 42.1284 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.4157 0 0 Xa
 0.4157 0 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d0 XR
65.603 51.1226 m
53.9185 44.3765 L
53.9185 30.8843 L
65.603 24.1382 L
77.2871 30.8843 L
77.2871 44.3774 L
65.603 51.1226 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.3059 0 Xa
 1 0.3059 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
57.2202 42.4692 m
57.2202 32.7915 L
65.603 27.9536 L
73.9819 32.7915 L
73.9819 42.4692 L
65.603 47.3081 L
57.2202 42.4692 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.4157 0 0 Xa
 0.4157 0 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d0 XR
39.0649 51.1235 m
27.3774 44.3765 L
27.3774 30.8843 L
39.0649 24.1382 L
50.7471 30.8843 L
50.7471 44.3774 L
39.0649 51.1235 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.3059 0 Xa
 1 0.3059 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
30.6821 42.4692 m
30.6821 32.7915 L
39.0649 27.9517 L
47.4438 32.7915 L
47.4438 42.4702 L
39.0649 47.3091 L
30.6821 42.4692 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.4157 0 0 Xa
 0.4157 0 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d0 XR
25.7944 74.1074 m
14.1099 67.3599 L
14.1099 53.8682 L
25.7944 47.1221 L
37.479 53.8682 L
37.479 67.3599 L
25.7944 74.1074 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.3059 0 Xa
 1 0.3059 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
17.4126 65.4526 m
17.4126 55.7749 L
25.7944 50.937 L
34.1743 55.7749 L
34.1772 65.4526 L
25.7944 70.2905 L
17.4126 65.4526 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.4157 0 0 Xa
 0.4157 0 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 2 w 4 M []0 d0 XR
52.3345 74.1074 m
40.6475 67.3599 L
40.6475 53.8682 L
52.3345 47.1221 L
64.0161 53.8682 L
64.0161 67.3599 L
52.3345 74.1074 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.3059 0 Xa
 1 0.3059 0 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
43.9536 65.4526 m
43.9536 55.7749 L
52.3345 50.937 L
60.7153 55.7749 L
60.7153 65.4526 L
52.3345 70.2905 L
43.9536 65.4526 L
s%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Jungle Stripes)
(Jungle Stripes) 37 19 73 55 [
%AI3_Tile
(0 O 0 R 0 0.5333 0.2157 Xa
 0 0.5333 0.2157 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 18 w 4 M []0 d0 XR
37 37 m
73 37 l
S%AI6_EndPatternLayer
) &
(0 O 0 R 0.6549 0.851 0.3412 Xa
 0.6549 0.851 0.3412 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 9 w 4 M []0 d0 XR
37 37 m
73 37 l
S%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Mediterranean Tiles)
(Mediterranean Tiles) 4.9482 11.5332 39.291 45.8818 [
%AI3_Tile
(0 O 0 R 1 1 1 Xa
 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
0.1499 40.748 m
10.0083 40.749 L
16.9673 33.79 L
16.9702 23.9297 L
10.0093 16.9697 L
0.1509 16.9688 L
0.1499 40.748 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 1 Xa
 0 0 1 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
0.1499 40.748 m
10.0083 40.749 L
16.9673 33.79 L
16.9702 23.9297 L
10.0093 16.9697 L
0.1509 16.9688 L
0.1499 40.748 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 1 1 1 Xa
 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
16.9712 0.1504 m
10.0122 7.1094 L
10.0093 16.9697 L
16.9702 23.9297 L
26.8296 23.9307 L
33.7915 16.9727 L
33.7915 7.1123 L
26.8335 0.1514 L
16.9712 0.1504 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 1 Xa
 0 0 1 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
16.9712 0.1504 m
10.0122 7.1094 L
10.0093 16.9697 L
16.9702 23.9297 L
26.8296 23.9307 L
33.7915 16.9727 L
33.7915 7.1123 L
26.8335 0.1514 L
16.9712 0.1504 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 1 1 1 Xa
 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
16.9673 33.79 m
10.0083 40.749 L
10.0054 50.6084 L
16.9663 57.5693 L
26.8257 57.5703 L
33.7876 50.6113 L
33.7876 40.752 L
26.8296 33.791 L
16.9673 33.79 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 1 Xa
 0 0 1 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
16.9673 33.79 m
10.0083 40.749 L
10.0054 50.6084 L
16.9663 57.5693 L
26.8257 57.5703 L
33.7876 50.6113 L
33.7876 40.752 L
26.8296 33.791 L
16.9673 33.79 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 1 1 1 Xa
 1 1 1 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
33.7915 16.9727 m
26.8296 23.9307 L
26.8296 33.791 L
33.7876 40.752 L
43.6475 40.7529 L
50.6094 33.7939 L
50.6094 23.9336 L
43.6494 16.9736 L
33.7915 16.9727 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0 0 1 Xa
 0 0 1 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.3 w 4 M []0 d0 XR
33.7915 16.9727 m
26.8296 23.9307 L
26.8296 33.791 L
33.7876 40.752 L
43.6475 40.7529 L
50.6094 33.7939 L
50.6094 23.9336 L
43.6494 16.9736 L
33.7915 16.9727 L
s%AI6_EndPatternLayer
) &
(0 O 0 R 0.1216 0.1333 1 Xa
 0.1216 0.1333 1 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
43.6514 7.1123 m
43.6514 16.9727 L
33.7915 16.9727 L
33.7915 7.1123 L
43.6514 7.1123 L
f26.8296 23.9307 m
26.8296 33.791 L
16.9702 33.791 L
16.9702 23.9307 L
26.8296 23.9307 L
f10.0093 7.1094 m
10.0093 16.9697 L
0.1538 16.9697 L
0.1538 7.1094 L
10.0093 7.1094 L
f43.6494 40.752 m
43.6494 50.6113 L
33.7876 50.6113 L
33.7876 40.752 L
43.6494 40.752 L
f10.0083 40.749 m
10.0083 50.6084 L
0.1499 50.6084 L
0.1499 40.749 L
10.0083 40.749 L
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Pyramids)
(Pyramids) 1 1 19.5 19.5 [
%AI3_Tile
(0 O 0 R 0.8 0.8 0.8 Xa
 0.8 0.8 0.8 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
1 19.5 m
10.25 10.25 l
19.5 19.5 l
1 19.5 l
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.2 0.2 0.2 Xa
 0.2 0.2 0.2 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
19.5 1 m
10.25 10.25 l
1 1 l
19.5 1 l
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.6039 0.6 0.6 Xa
 0.6039 0.6 0.6 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
1 1 m
10.25 10.25 l
1 19.5 l
1 1 l
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.4 0.4 0.4 Xa
 0.4 0.4 0.4 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
19.5 19.5 m
10.25 10.25 l
19.5 1 l
19.5 19.5 l
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI3_BeginPattern: (Unnamed Pattern 2)
(Unnamed Pattern 2) 1 1 73 73 [
%AI3_Tile
(0 O 0 R 0.3922 0.6039 0.1451 Xa
 0.3922 0.6039 0.1451 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
1 73 m
1 1 L
73 1 L
73 73 L
1 73 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.4039 0.4 0.0745 Xa
 0.4039 0.4 0.0745 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
18.5449 73 m
18.5449 1 L
46.7832 1 L
46.7832 73 L
18.5449 73 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.8 0.8 0.1059 Xa
 0.8 0.8 0.1059 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
11.9512 1 m
11.9512 4.7129 9.2314 2.8813 9.2314 6.5938 c
9.2314 10.2334 4.25 10.2334 4.25 13.8735 c
4.25 17.4858 10.0313 17.4858 10.0313 21.0991 c
10.0313 24.832 10.208 24.832 10.208 28.5654 c
10.208 32.3071 5.5205 32.3071 5.5205 36.0469 c
5.5205 39.7021 11.8838 39.7021 11.8838 43.356 c
11.8838 47.0566 7.4609 47.0566 7.4609 50.7568 c
7.4609 54.4043 5.7959 54.4043 5.7959 58.0542 c
5.7959 61.7686 4.6631 61.7686 4.6631 65.4805 c
4.6631 69.1636 11.9512 69.3184 11.9512 73 C
27.9268 73 L
27.9268 69.3184 22.0635 69.1636 22.0635 65.4805 c
22.0635 61.7686 28.6631 61.7686 28.6631 58.0542 c
28.6631 54.4043 25.1553 54.4043 25.1553 50.7568 c
25.1553 47.0566 28.8145 47.0566 28.8145 43.356 c
28.8145 39.7021 22.1191 39.7021 22.1191 36.0469 c
22.1191 32.3071 26.3945 32.3071 26.3945 28.5654 c
26.3945 24.832 24.4248 24.832 24.4248 21.0991 c
24.4248 17.4858 20.3838 17.4858 20.3838 13.8735 c
20.3838 10.2334 24.6055 10.2334 24.6055 6.5938 c
24.6055 2.8813 27.9268 4.7129 27.9268 1 C
11.9512 1 L
f%AI6_EndPatternLayer
) &
(0 O 0 R 0.0784 0.4157 0.1647 Xa
 0.0784 0.4157 0.1647 XA
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
41.875 1 m
41.875 4.7134 42.3867 2.8818 42.3867 6.5938 c
42.3867 10.2334 40.5947 10.2334 40.5947 13.8735 c
40.5947 17.4858 41.5742 17.4858 41.5742 21.0991 c
41.5742 24.832 43.6484 24.832 43.6484 28.5659 c
43.6484 32.3076 39.1709 32.3076 39.1709 36.0469 c
39.1709 39.7026 39.7549 39.7026 39.7549 43.356 c
39.7549 47.0566 45.3896 47.0566 45.3896 50.7568 c
45.3896 54.4043 40.1055 54.4043 40.1055 58.0542 c
40.1055 61.7686 40.6289 61.7686 40.6289 65.4805 c
40.6289 69.1636 41.875 69.3184 41.875 73 C
59.0752 73 L
59.0752 69.4219 53.4805 70.1934 53.4805 66.6143 c
53.4805 62.9136 55.8945 62.9136 55.8945 59.2153 c
55.8945 55.502 61.0059 55.502 61.0059 51.7886 c
61.0059 48.1489 60.5635 48.1489 60.5635 44.5103 c
60.5635 40.897 59.9277 40.897 59.9277 37.2842 c
59.9277 33.5508 56.3662 33.5508 56.3662 29.8169 c
56.3662 26.0762 61.0908 26.0762 61.0908 22.3354 c
61.0908 18.6812 52.6025 18.6812 52.6025 15.0264 c
52.6025 11.3262 55.7461 11.3262 55.7461 7.6265 c
55.7461 3.978 59.0752 4.6484 59.0752 1 C
41.875 1 L
f%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0 0 0 Xa
([Registration]) Pc
1 1 1 Xa
(White) Pc
0 0 0 Xa
(Black) Pc
0.6 0.6 0.6 Xa
(Gray) Pc
0.8 0.8 0.8 Xa
(Light Gray) Pc
0 1 1 Xa
(Bright Blue) Pc
0.6 1 1 Xa
(Light Blue) Pc
0.8 1 1 Xa
(Pale Blue) Pc
1 0 1 Xa
(Violet) Pc
1 0.4 1 Xa
(Light Violet) Pc
1 0.8 1 Xa
(Pale Violet) Pc
1 1 0 Xa
(Yellow) Pc
1 1 0.4 Xa
(Light Yellow) Pc
1 1 0.6 Xa
(Pale Yellow) Pc
0.6 0.2 0 Xa
(Brown) Pc
0.8 0.4 0.2078 Xa
(Light Brown) Pc
1 0.5922 0.4 Xa
(Pale Brown) Pc
0 0 1 Xa
(Blue) Pc
0.4 0.4 1 Xa
(Faded Blue) Pc
0.8 0.8 1 Xa
(Faded Pale Blue) Pc
1 0 0 Xa
(Red) Pc
1 0.4 0.4 Xa
(Light Red) Pc
1 0.6 0.6 Xa
(Mauve) Pc
0 0.6 0 Xa
(Forest Green) Pc
0.2 0.8 0.2 Xa
(Green) Pc
0.6 1 0.4 Xa
(Pale Green) Pc
0 1 0 Xa
(Bright Green) Pc
0.4 1 0.4 Xa
(Light Bright Green) Pc
0.5922 1 0.6 Xa
(Pale Light Green) Pc
0.6 0 0.8 Xa
(Purple) Pc
0.6 0.4 0.8 Xa
(Periwinkle) Pc
0.8 0.6 0.8 Xa
(Lavender) Pc
1 0.6 0 Xa
(Orange) Pc
1 0.8 0.4 Xa
(Pale Orange) Pc
1 1 0.6 Xa
(Light Pale Orange) Pc
Bb
2 (White, Black) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(White, Black) Pc
Bb
0 0 0 0 Bh
2 (Black, White Radial) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Black, White Radial) Pc
Bb
2 (Copper ) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Copper ) Pc
Bb
2 (RGB Rainbow) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(RGB Rainbow) Pc
Bb
0 0 0 0 Bh
2 (Nova) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Nova) Pc
Bb
2 (Tropical Sunset) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(Tropical Sunset) Pc
(Mediterranean Tiles) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Mediterranean Tiles) Pc
(Pyramids) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Pyramids) Pc
(Honeycomb) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Honeycomb) Pc
(Jungle Stripes) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Jungle Stripes) Pc
(Camouflage) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Camouflage) Pc
(Azure Rings) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(Azure Rings) Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 0 79 128 255 Lb
(Layer 1) Ln
0 A
0 O
1 1 1 Xa
0 J 0 j 1 w 4 M []0 d0 XR
93 314.8896 m
504.2803 314.8896 L
504.2803 544.7998 L
93 544.7998 L
93 314.8896 L
fq231.2002 356.1201 m
500.7197 356.1201 L
500.7197 364.7598 L
231.2002 364.7598 L
231.2002 356.1201 L
hWnu0 To
1 0 0 1 240.4399 357.9199 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 Xa
%_ 0 50 XQ
/_Arial-BoldMT 7.44 7.44 -2.8009 Tf
0 Ts
100 100 Tz
8 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
0 TA
%_ 0 XL
0 TY
0 TV
36 0 Xb
XB
0 0 100 TC
100 100 100 TW
25 TG
0 0 0 Ti
0 Ta
0 1 2 2 3 Th
0 Tq
0 Tg
0 0 Tl
0.0595 Tc
0 Tw
(PCI-) Tx 
(\r) TX 
TO
0 To
1 0 0 1 255.5601 357.9199 0 Tp
0 Tv
TP
0 Tr
-1000 Tt
-7.44 Tc
(X) Tx 
(\r) TX 
TO
UQ0 A
0 To
1 0 0 1 238.52 351.6797 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 Xa
0 J 0 j 1 w 4 M []0 d0 XR
%_ 0 50 XQ
/_Arial-BoldMT 7.44 7.44 -2.8009 Tf
0 Ts
100 100 Tz
7 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
0 TA
%_ 0 XL
0 TY
0 TV
36 0 Xb
XB
0 0 100 TC
100 100 100 TW
25 TG
0 0 0 Ti
0 Ta
0 1 2 2 3 Th
0 Tq
0 Tg
0 0 Tl
0.0521 Tc
0 Tw
(Bridg) Tx 
(\r) TX 
TO
0 To
1 0 0 1 258.1997 351.6797 0 Tp
0 Tv
TP
0 Tr
3541 Tt
26.345 Tc
(e) Tx 
(\r) TX 
TO
268.7598 367.6396 m
268.2798 368.1201 L
232.2798 368.1201 L
232.2798 367.1602 L
268.2798 367.1602 L
267.7998 367.6396 L
268.7598 367.6396 L
268.7598 368.1201 L
268.2798 368.1201 L
268.7598 367.6396 L
F268.2798 345.5596 m
268.7598 346.04 L
268.7598 367.6396 L
267.7998 367.6396 L
267.7998 346.04 L
268.2798 346.5195 L
268.2798 345.5596 L
268.7598 345.5596 L
268.7598 346.04 L
268.2798 345.5596 L
F231.7998 346.04 m
232.2798 345.5596 L
268.2798 345.5596 L
268.2798 346.5195 L
232.2798 346.5195 L
232.7598 346.04 L
231.7998 346.04 L
231.7998 345.5596 L
232.2798 345.5596 L
231.7998 346.04 L
F232.2798 368.1201 m
231.7998 367.6396 L
231.7998 346.04 L
232.7598 346.04 L
232.7598 367.6396 L
232.2798 367.1602 L
232.2798 368.1201 L
231.7998 368.1201 L
231.7998 367.6396 L
232.2798 368.1201 L
F304.1602 539.3604 m
305.1201 539.3604 L
305.1201 540.3203 L
304.1602 540.3203 L
304.1602 539.3604 L
f304.1602 537.4404 m
305.1201 537.4404 L
305.1201 538.4004 L
304.1602 538.4004 L
304.1602 537.4404 L
f304.1602 535.2803 m
305.1201 535.2803 L
305.1201 536.4805 L
304.1602 536.4805 L
304.1602 535.2803 L
f304.1602 533.3604 m
305.1201 533.3604 L
305.1201 534.3203 L
304.1602 534.3203 L
304.1602 533.3604 L
f304.1602 531.4404 m
305.1201 531.4404 L
305.1201 532.4004 L
304.1602 532.4004 L
304.1602 531.4404 L
f304.1602 529.2803 m
305.1201 529.2803 L
305.1201 530.4805 L
304.1602 530.4805 L
304.1602 529.2803 L
f304.1602 527.3604 m
305.1201 527.3604 L
305.1201 528.3203 L
304.1602 528.3203 L
304.1602 527.3604 L
f304.1602 525.4404 m
305.1201 525.4404 L
305.1201 526.4004 L
304.1602 526.4004 L
304.1602 525.4404 L
f304.1602 523.2803 m
305.1201 523.2803 L
305.1201 524.4805 L
304.1602 524.4805 L
304.1602 523.2803 L
f304.1602 521.3604 m
305.1201 521.3604 L
305.1201 522.3203 L
304.1602 522.3203 L
304.1602 521.3604 L
f304.1602 519.4404 m
305.1201 519.4404 L
305.1201 520.4004 L
304.1602 520.4004 L
304.1602 519.4404 L
f304.1602 517.2803 m
305.1201 517.2803 L
305.1201 518.4805 L
304.1602 518.4805 L
304.1602 517.2803 L
f304.1602 515.3604 m
305.1201 515.3604 L
305.1201 516.3203 L
304.1602 516.3203 L
304.1602 515.3604 L
f304.1602 513.4404 m
305.1201 513.4404 L
305.1201 514.4004 L
304.1602 514.4004 L
304.1602 513.4404 L
f304.6396 511.5195 m
305.1201 511.5195 L
305.1201 512.4805 L
304.1602 512.4805 L
304.1602 511.5195 L
304.6396 511.5195 L
F355.04 540.3203 m
354.5596 540.7998 L
254.3599 540.7998 L
254.3599 539.8398 L
354.5596 539.8398 L
354.0801 540.3203 L
355.04 540.3203 L
355.04 540.7998 L
354.5596 540.7998 L
355.04 540.3203 L
F354.5596 511.04 m
355.04 511.5195 L
355.04 540.3203 L
354.0801 540.3203 L
354.0801 511.5195 L
354.5596 512 L
354.5596 511.04 L
355.04 511.04 L
355.04 511.5195 L
354.5596 511.04 L
F253.6401 511.5195 m
254.3599 511.04 L
354.5596 511.04 L
354.5596 512 L
254.3599 512 L
254.8398 511.5195 L
253.6401 511.5195 L
253.6401 511.04 L
254.3599 511.04 L
253.6401 511.5195 L
F254.3599 540.7998 m
253.6401 540.3203 L
253.6401 511.5195 L
254.8398 511.5195 L
254.8398 540.3203 L
254.3599 539.8398 L
254.3599 540.7998 L
253.6401 540.7998 L
253.6401 540.3203 L
254.3599 540.7998 L
F0 To
1 0 0 1 258.9199 530.5996 0 Tp
0 Tv
TP
0 Tr
7 Tt
0.0521 Tc
(SRAM/RO) Tx 
(\r) TX 
TO
0 To
1 0 0 1 294.4399 530.5996 0 Tp
0 Tv
TP
0 Tr
3264 Tt
24.2842 Tc
(M) Tx 
(\r) TX 
TO
0 To
1 0 0 1 261.3198 523.1602 0 Tp
0 Tv
TP
0 Tr
-2 Tt
-0.0149 Tc
(Peripheral) Tx 
(\r) TX 
TO
0 To
1 0 0 1 261.7998 515.7197 0 Tp
0 Tv
TP
0 Tr
3 Tt
0.0223 Tc
(Controlle) Tx 
(\r) TX 
TO
0 To
1 0 0 1 294.6802 515.7197 0 Tp
0 Tv
TP
0 Tr
-163 Tt
-1.2127 Tc
(r) Tx 
(\r) TX 
TO
0 To
1 0 0 1 314.96 530.8398 0 Tp
0 Tv
TP
0 Tr
7 Tt
0.0521 Tc
(External) Tx 
(\r) TX 
TO
0 To
1 0 0 1 309.4404 523.1602 0 Tp
0 Tv
TP
0 Tr
2 Tt
104 104 104 TW
0.0149 Tc
0.0827 Tw
(Bus Maste) Tj 
(\r) TX 
TO
0 To
1 0 0 1 346.8799 523.1602 0 Tp
0 Tv
TP
0 Tr
-163 Tt
100 100 100 TW
-1.2127 Tc
0 Tw
(r) Tx 
(\r) TX 
TO
0 To
1 0 0 1 311.8398 515.7197 0 Tp
0 Tv
TP
0 Tr
3 Tt
0.0223 Tc
(Controlle) Tx 
(\r) TX 
TO
0 To
1 0 0 1 344.7197 515.7197 0 Tp
0 Tv
TP
0 Tr
-163 Tt
-1.2127 Tc
(r) Tx 
(\r) TX 
TO
333.4404 367.6396 m
332.96 368.1201 L
282.6802 368.1201 L
282.6802 367.1602 L
332.96 367.1602 L
332.4805 367.6396 L
333.4404 367.6396 L
333.4404 368.1201 L
332.96 368.1201 L
333.4404 367.6396 L
F332.96 345.5596 m
333.4404 346.04 L
333.4404 367.6396 L
332.4805 367.6396 L
332.4805 346.04 L
332.96 346.5195 L
332.96 345.5596 L
333.4404 345.5596 L
333.4404 346.04 L
332.96 345.5596 L
F282.2002 346.04 m
282.6802 345.5596 L
332.96 345.5596 L
332.96 346.5195 L
282.6802 346.5195 L
283.1602 346.04 L
282.2002 346.04 L
282.2002 345.5596 L
282.6802 345.5596 L
282.2002 346.04 L
F282.6802 368.1201 m
282.2002 367.6396 L
282.2002 346.04 L
283.1602 346.04 L
283.1602 367.6396 L
282.6802 367.1602 L
282.6802 368.1201 L
282.2002 368.1201 L
282.2002 367.6396 L
282.6802 368.1201 L
F0 To
1 0 0 1 297.0801 358.4004 0 Tp
0 Tv
TP
0 Tr
6 Tt
0.0446 Tc
(SRA) Tx 
(\r) TX 
TO
0 To
1 0 0 1 312.9199 358.4004 0 Tp
0 Tv
TP
0 Tr
10000 Tt
74.4 Tc
(M) Tx 
(\r) TX 
TO
0 To
1 0 0 1 290.1201 350.96 0 Tp
0 Tv
TP
0 Tr
3 Tt
0.0223 Tc
(Controlle) Tx 
(\r) TX 
TO
0 To
1 0 0 1 323 350.96 0 Tp
0 Tv
TP
0 Tr
10000 Tt
74.4 Tc
(r) Tx 
(\r) TX 
TO
218.3599 367.6396 m
217.8799 368.1201 L
138.6802 368.1201 L
138.6802 367.1602 L
217.8799 367.1602 L
217.3999 367.6396 L
218.3599 367.6396 L
218.3599 368.1201 L
217.8799 368.1201 L
218.3599 367.6396 L
F217.8799 345.5596 m
218.3599 346.04 L
218.3599 367.6396 L
217.3999 367.6396 L
217.3999 346.04 L
217.8799 346.5195 L
217.8799 345.5596 L
218.3599 345.5596 L
218.3599 346.04 L
217.8799 345.5596 L
F138.2002 346.04 m
138.6802 345.5596 L
217.8799 345.5596 L
217.8799 346.5195 L
138.6802 346.5195 L
139.1602 346.04 L
138.2002 346.04 L
138.2002 345.5596 L
138.6802 345.5596 L
138.2002 346.04 L
F138.6802 368.1201 m
138.2002 367.6396 L
138.2002 346.04 L
139.1602 346.04 L
139.1602 367.6396 L
138.6802 367.1602 L
138.6802 368.1201 L
138.2002 368.1201 L
138.2002 367.6396 L
138.6802 368.1201 L
F0 To
1 0 0 1 151.3999 357.6797 0 Tp
0 Tv
TP
0 Tr
6 Tt
0.0446 Tc
(PC133/DDR13) Tx 
(\r) TX 
TO
0 To
1 0 0 1 201.0801 357.6797 0 Tp
0 Tv
TP
0 Tr
10000 Tt
74.4 Tc
(3) Tx 
(\r) TX 
TO
0 To
1 0 0 1 145.3999 350.2402 0 Tp
0 Tv
TP
0 Tr
5 Tt
91 91 91 TW
0.0372 Tc
-0.186 Tw
(SDRAM Controlle) Tj 
(\r) TX 
TO
0 To
1 0 0 1 207.7993 350.2402 0 Tp
0 Tv
TP
0 Tr
10000 Tt
100 100 100 TW
74.4 Tc
0 Tw
(r) Tx 
(\r) TX 
TO
1 XR
307.7598 367.6396 m
304.6396 374.8398 L
307.7598 367.6396 L
310.8799 374.8398 L
304.6396 374.8398 L
307.7598 367.6396 L
F0 XR
307.7598 382.7598 m
307.04 382.7598 L
307.04 374.1201 L
308.4805 374.1201 L
308.4805 382.7598 L
307.7598 382.7598 L
F1 XR
307.7598 389.2402 m
304.6396 382.04 L
307.7598 389.2402 L
310.8799 382.04 L
304.6396 382.04 L
307.7598 389.2402 L
F0 XR
427.5195 403.6396 m
426.5596 404.5996 L
138.6802 404.5996 L
138.6802 402.6797 L
426.5596 402.6797 L
425.5996 403.6396 L
427.5195 403.6396 L
427.5195 404.5996 L
426.5596 404.5996 L
427.5195 403.6396 L
F426.5596 388.2803 m
427.5195 389.2402 L
427.5195 403.6396 L
425.5996 403.6396 L
425.5996 389.2402 L
426.5596 390.2002 L
426.5596 388.2803 L
427.5195 388.2803 L
427.5195 389.2402 L
426.5596 388.2803 L
F137.7202 389.2402 m
138.6802 388.2803 L
426.5596 388.2803 L
426.5596 390.2002 L
138.6802 390.2002 L
139.6401 389.2402 L
137.7202 389.2402 L
137.7202 388.2803 L
138.6802 388.2803 L
137.7202 389.2402 L
F138.6802 404.5996 m
137.7202 403.6396 L
137.7202 389.2402 L
139.6401 389.2402 L
139.6401 403.6396 L
138.6802 402.6797 L
138.6802 404.5996 L
137.7202 404.5996 L
137.7202 403.6396 L
138.6802 404.5996 L
F272.3599 356.8398 m
272.3599 356.3604 L
282.6802 356.3604 L
282.6802 357.3203 L
272.3599 357.3203 L
272.3599 356.8398 L
F1 XR
268.04 356.8398 m
272.8398 354.6797 L
268.04 356.8398 L
272.8398 358.7598 L
272.8398 354.6797 L
268.04 356.8398 L
F307.7598 346.2803 m
309.9199 341.4805 L
307.7598 346.2803 L
305.5996 341.4805 L
309.9199 341.4805 L
307.7598 346.2803 L
F0 XR
307.7598 335.96 m
308.2402 335.96 L
308.2402 341.96 L
307.2803 341.96 L
307.2803 335.96 L
307.7598 335.96 L
F1 XR
307.7598 331.6396 m
309.9199 336.4404 L
307.7598 331.6396 L
305.5996 336.4404 L
309.9199 336.4404 L
307.7598 331.6396 L
F0 XR
185.96 453.9199 m
185.48 454.4004 L
138.6802 454.4004 L
138.6802 453.4404 L
185.48 453.4404 L
185 453.9199 L
185.96 453.9199 L
185.96 454.4004 L
185.48 454.4004 L
185.96 453.9199 L
F185.48 424.7598 m
185.96 425.2402 L
185.96 453.9199 L
185 453.9199 L
185 425.2402 L
185.48 425.7197 L
185.48 424.7598 L
185.96 424.7598 L
185.96 425.2402 L
185.48 424.7598 L
F138.2002 425.2402 m
138.6802 424.7598 L
185.48 424.7598 L
185.48 425.7197 L
138.6802 425.7197 L
139.1602 425.2402 L
138.2002 425.2402 L
138.2002 424.7598 L
138.6802 424.7598 L
138.2002 425.2402 L
F138.6802 454.4004 m
138.2002 453.9199 L
138.2002 425.2402 L
139.1602 425.2402 L
139.1602 453.9199 L
138.6802 453.4404 L
138.6802 454.4004 L
138.2002 454.4004 L
138.2002 453.9199 L
138.6802 454.4004 L
F0 To
1 0 0 1 148.04 444.9199 0 Tp
0 Tv
TP
0 Tr
5 Tt
0.0372 Tc
(PPC44) Tx 
(\r) TX 
TO
0 To
1 0 0 1 171.7998 444.9199 0 Tp
0 Tv
TP
0 Tr
10000 Tt
74.4 Tc
(0) Tx 
(\r) TX 
TO
0 To
1 0 0 1 154.04 437.2402 0 Tp
0 Tv
TP
0 Tr
-5 Tt
-0.0372 Tc
(CPU) Tx 
(\r) TX 
TO
0 To
1 0 0 1 145.8799 428.5996 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 6 6 -2.2588 Tf
-2 Tt
-0.012 Tc
(Ins) Tx 
(\r) TX 
TO
0 To
1 0 0 1 154.52 428.5996 0 Tp
0 Tv
TP
0 Tr
387 Tt
2.322 Tc
(t) Tx 
(\r) TX 
TO
0 To
1 0 0 1 166.2798 428.5996 0 Tp
0 Tv
TP
0 Tr
-4 Tt
-0.024 Tc
(Dat) Tx 
(\r) TX 
TO
0 To
1 0 0 1 175.8799 428.5996 0 Tp
0 Tv
TP
0 Tr
164 Tt
0.984 Tc
(a) Tx 
(\r) TX 
TO
151.1602 418.7598 m
150.4399 418.7598 L
150.4399 403.6396 L
151.8799 403.6396 L
151.8799 418.7598 L
151.1602 418.7598 L
F1 XR
151.1602 425.2402 m
148.04 418.04 L
151.1602 425.2402 L
154.2798 418.04 L
148.04 418.04 L
151.1602 425.2402 L
F0 XR
138.6802 396.4404 m
138.6802 398.3604 L
131.48 398.3604 L
131.48 394.5195 L
138.6802 394.5195 L
138.6802 396.4404 L
F1 XR
113.48 385.6396 m
115.3999 380.8398 L
113.48 385.6396 L
111.3198 380.8398 L
115.3999 380.8398 L
113.48 385.6396 L
F0 XR
113.48 357.3203 m
113.96 356.8398 L
113.96 381.3203 L
113 381.3203 L
113 356.8398 L
113.48 356.3604 L
113 356.8398 L
113 356.3604 L
113.48 356.3604 L
113.48 357.3203 L
F138.6802 356.8398 m
138.6802 357.3203 L
113.48 357.3203 L
113.48 356.3604 L
138.6802 356.3604 L
138.6802 356.8398 L
F113.48 432.7998 m
113 432.3203 L
113 407.2402 L
113.96 407.2402 L
113.96 432.3203 L
113.48 431.8398 L
113.48 432.7998 L
113 432.7998 L
113 432.3203 L
113.48 432.7998 L
F134.3599 432.3203 m
134.3599 432.7998 L
113.48 432.7998 L
113.48 431.8398 L
134.3599 431.8398 L
134.3599 432.3203 L
F1 XR
138.6802 432.3203 m
133.8799 434.4805 L
138.6802 432.3203 L
133.8799 430.1602 L
133.8799 434.4805 L
138.6802 432.3203 L
F0 XR
499.5195 489.9199 m
498.5596 490.8799 L
261.0801 490.8799 L
261.0801 488.96 L
498.5596 488.96 L
497.5996 489.9199 L
499.5195 489.9199 L
499.5195 490.8799 L
498.5596 490.8799 L
499.5195 489.9199 L
F498.5596 474.5596 m
499.5195 475.5195 L
499.5195 489.9199 L
497.5996 489.9199 L
497.5996 475.5195 L
498.5596 476.4805 L
498.5596 474.5596 L
499.5195 474.5596 L
499.5195 475.5195 L
498.5596 474.5596 L
F260.1201 475.5195 m
261.0801 474.5596 L
498.5596 474.5596 L
498.5596 476.4805 L
261.0801 476.4805 L
262.04 475.5195 L
260.1201 475.5195 L
260.1201 474.5596 L
261.0801 474.5596 L
260.1201 475.5195 L
F261.0801 490.8799 m
260.1201 489.9199 L
260.1201 475.5195 L
262.04 475.5195 L
262.04 489.9199 L
261.0801 488.96 L
261.0801 490.8799 L
260.1201 490.8799 L
260.1201 489.9199 L
261.0801 490.8799 L
F362.7197 452.2402 m
362 452.7197 L
311.5996 452.7197 L
311.5996 451.5195 L
362 451.5195 L
361.5195 452.2402 L
362.7197 452.2402 L
362.7197 452.7197 L
362 452.7197 L
362.7197 452.2402 L
F362 426.4404 m
362.7197 426.9199 L
362.7197 452.2402 L
361.5195 452.2402 L
361.5195 426.9199 L
362 427.6396 L
362 426.4404 L
362.7197 426.4404 L
362.7197 426.9199 L
362 426.4404 L
F311.1201 426.9199 m
311.5996 426.4404 L
362 426.4404 L
362 427.6396 L
311.5996 427.6396 L
312.3203 426.9199 L
311.1201 426.9199 L
311.1201 426.4404 L
311.5996 426.4404 L
311.1201 426.9199 L
F311.5996 452.7197 m
311.1201 452.2402 L
311.1201 426.9199 L
312.3203 426.9199 L
312.3203 452.2402 L
311.5996 451.5195 L
311.5996 452.7197 L
311.1201 452.7197 L
311.1201 452.2402 L
311.5996 452.7197 L
Fq319.1602 438.7998 m
500.7197 438.7998 L
500.7197 447.4404 L
319.1602 447.4404 L
319.1602 438.7998 L
hWnu0 To
1 0 0 1 328.4004 440.5996 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 Xa
/_Arial-BoldMT 7.44 7.44 -2.8009 Tf
13 Tt
0.0967 Tc
(DM) Tx 
(\r) TX 
TO
0 To
1 0 0 1 340.1602 440.5996 0 Tp
0 Tv
TP
0 Tr
10000 Tt
74.4 Tc
(A) Tx 
(\r) TX 
TO
UQ0 A
0 To
1 0 0 1 319.04 432.9199 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 Xa
0 J 0 j 1 w 4 M []0 d0 XR
%_ 0 50 XQ
/_Arial-BoldMT 7.44 7.44 -2.8009 Tf
0 Ts
100 100 Tz
3 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
0 TA
%_ 0 XL
0 TY
0 TV
36 0 Xb
XB
0 0 100 TC
100 100 100 TW
25 TG
0 0 0 Ti
0 Ta
0 1 2 2 3 Th
0 Tq
0 Tg
0 0 Tl
0.0223 Tc
0 Tw
(Controlle) Tx 
(\r) TX 
TO
0 To
1 0 0 1 351.9199 432.9199 0 Tp
0 Tv
TP
0 Tr
10000 Tt
74.4 Tc
(r) Tx 
(\r) TX 
TO
409.04 453.9199 m
408.5596 454.4004 L
376.1602 454.4004 L
376.1602 453.4404 L
408.5596 453.4404 L
408.0801 453.9199 L
409.04 453.9199 L
409.04 454.4004 L
408.5596 454.4004 L
409.04 453.9199 L
F408.5596 424.7598 m
409.04 425.2402 L
409.04 453.9199 L
408.0801 453.9199 L
408.0801 425.2402 L
408.5596 425.7197 L
408.5596 424.7598 L
409.04 424.7598 L
409.04 425.2402 L
408.5596 424.7598 L
F375.6797 425.2402 m
376.1602 424.7598 L
408.5596 424.7598 L
408.5596 425.7197 L
376.1602 425.7197 L
376.6396 425.2402 L
375.6797 425.2402 L
375.6797 424.7598 L
376.1602 424.7598 L
375.6797 425.2402 L
F376.1602 454.4004 m
375.6797 453.9199 L
375.6797 425.2402 L
376.6396 425.2402 L
376.6396 453.9199 L
376.1602 453.4404 L
376.1602 454.4004 L
375.6797 454.4004 L
375.6797 453.9199 L
376.1602 454.4004 L
F1 XR
386 436.4004 m
386 441.6797 L
387.4404 441.6797 L
388.1602 438.0801 L
389.1201 441.6797 L
390.5596 441.6797 L
390.5596 436.4004 L
389.5996 436.4004 L
389.5996 440.7197 L
388.6396 436.4004 L
387.6797 436.4004 L
386.96 440.7197 L
386.96 436.4004 L
386 436.4004 L
F0 XR
%AI5_File:
%AI5_BeginRaster
() 1 XG
[ 0.12 0 0 0.12 390.7998 441.6787 ] 41 44 1 Xh
[ 0.12 0 0 0.12 390.7998 441.6787 ] 0 0 41 44 41 44 1 1 0 0 0 1
%%BeginData: 4
XI
%FFFF007FFF80FFFF007FFF80FFFE003FFF80FFFE003FFF80FFFE003FFF80
%FFFC001FFF80FFFC001FFF80FFF8000FFF80FFF8000FFF80FFF8000FFF80
%FFF00007FF80FFF00007FF80FFF00807FF80FFE00803FF80FFE00C03FF80
%FFE01C03FF80FFC01C01FF80FFC03E01FF80FF803E00FF80FF803E00FF80
%FF807F00FF80FF007F007F80FF007F807F80FF00FF807F80FE00FF803F80
%FE01FFC03F80FE0000003F80FC0000001F80FC0000001F80F80000000F80
%F80000000F80F80000000F80F00000000780F00000000780F007FFF00780
%E007FFF00380E007FFF00380E00FFFF80380C00FFFF80180C00FFFF80180
%800FFFF80080800FFFF80080801FFFFC0080001FFFFC0000
%%EndData
XH
%AI5_EndRaster
F1 XR
396.0801 436.4004 m
396.0801 441.6797 L
397.04 441.6797 L
397.04 437.3604 L
399.2002 437.3604 L
399.2002 436.4004 L
396.0801 436.4004 L
F336.7998 403.6396 m
333.6797 410.8398 L
336.7998 403.6396 L
339.9199 410.8398 L
333.6797 410.8398 L
336.7998 403.6396 L
F0 XR
336.7998 420.4404 m
336.0801 420.4404 L
336.0801 410.1201 L
337.7598 410.1201 L
337.7598 420.4404 L
336.7998 420.4404 L
F1 XR
336.7998 426.9199 m
333.6797 419.96 L
336.7998 426.9199 L
339.9199 419.96 L
333.6797 419.96 L
336.7998 426.9199 L
F0 XR
297.4399 452.2402 m
297.0801 452.7197 L
261.0801 452.7197 L
261.0801 451.5195 L
297.0801 451.5195 L
296.6001 452.2402 L
297.4399 452.2402 L
297.4399 452.7197 L
297.0801 452.7197 L
297.4399 452.2402 L
F297.0801 426.4404 m
297.4399 426.9199 L
297.4399 452.2402 L
296.6001 452.2402 L
296.6001 426.9199 L
297.0801 427.6396 L
297.0801 426.4404 L
297.4399 426.4404 L
297.4399 426.9199 L
297.0801 426.4404 L
F260.6001 426.9199 m
261.0801 426.4404 L
297.0801 426.4404 L
297.0801 427.6396 L
261.0801 427.6396 L
261.5601 426.9199 L
260.6001 426.9199 L
260.6001 426.4404 L
261.0801 426.4404 L
260.6001 426.9199 L
F261.0801 452.7197 m
260.6001 452.2402 L
260.6001 426.9199 L
261.5601 426.9199 L
261.5601 452.2402 L
261.0801 451.5195 L
261.0801 452.7197 L
260.6001 452.7197 L
260.6001 452.2402 L
261.0801 452.7197 L
F0 To
1 0 0 1 271.1602 441.3203 0 Tp
0 Tv
TP
0 Tr
3 Tt
0.0223 Tc
(OP) Tx 
(\r) TX 
TO
0 To
1 0 0 1 281.96 441.3203 0 Tp
0 Tv
TP
0 Tr
10000 Tt
74.4 Tc
(B) Tx 
(\r) TX 
TO
0 To
1 0 0 1 267.3198 433.6396 0 Tp
0 Tv
TP
0 Tr
7 Tt
0.0521 Tc
(Bridg) Tx 
(\r) TX 
TO
0 To
1 0 0 1 287 433.6396 0 Tp
0 Tv
TP
0 Tr
10000 Tt
74.4 Tc
(e) Tx 
(\r) TX 
TO
1 XR
392.4805 453.9199 m
389.3604 461.1201 L
392.4805 453.9199 L
395.5996 461.1201 L
389.3604 461.1201 L
392.4805 453.9199 L
F0 XR
392.4805 469.04 m
391.7598 469.04 L
391.7598 460.4004 L
393.2002 460.4004 L
393.2002 469.04 L
392.4805 469.04 L
F1 XR
392.4805 475.5195 m
389.3604 468.3203 L
392.4805 475.5195 L
395.5996 468.3203 L
389.3604 468.3203 L
392.4805 475.5195 L
F336.7998 452.2402 m
333.6797 459.4404 L
336.7998 452.2402 L
339.9199 459.4404 L
333.6797 459.4404 L
336.7998 452.2402 L
F0 XR
336.7998 469.04 m
336.0801 469.04 L
336.0801 458.7197 L
337.7598 458.7197 L
337.7598 469.04 L
336.7998 469.04 L
F1 XR
336.7998 475.5195 m
333.6797 468.3203 L
336.7998 475.5195 L
339.9199 468.3203 L
333.6797 468.3203 L
336.7998 475.5195 L
F279.0801 403.6396 m
275.96 410.8398 L
279.0801 403.6396 L
282.2002 410.8398 L
275.96 410.8398 L
279.0801 403.6396 L
F0 XR
279.0801 420.4404 m
278.3599 420.4404 L
278.3599 410.1201 L
279.7998 410.1201 L
279.7998 420.4404 L
279.0801 420.4404 L
F1 XR
279.0801 426.9199 m
275.96 419.96 L
279.0801 426.9199 L
282.2002 419.96 L
275.96 419.96 L
279.0801 426.9199 L
F279.0801 452.2402 m
275.96 459.4404 L
279.0801 452.2402 L
282.2002 459.4404 L
275.96 459.4404 L
279.0801 452.2402 L
F0 XR
279.0801 469.04 m
278.3599 469.04 L
278.3599 458.7197 L
279.7998 458.7197 L
279.7998 469.04 L
279.0801 469.04 L
F1 XR
279.0801 475.5195 m
275.96 468.3203 L
279.0801 475.5195 L
282.2002 468.3203 L
275.96 468.3203 L
279.0801 475.5195 L
F0 XR
495.6797 453.9199 m
494.96 454.4004 L
430.1602 454.4004 L
430.1602 453.4404 L
494.96 453.4404 L
494.4805 453.9199 L
495.6797 453.9199 L
495.6797 454.4004 L
494.96 454.4004 L
495.6797 453.9199 L
F494.96 439.04 m
495.6797 439.5195 L
495.6797 453.9199 L
494.4805 453.9199 L
494.4805 439.5195 L
494.96 440 L
494.96 439.04 L
495.6797 439.04 L
495.6797 439.5195 L
494.96 439.04 L
F429.6797 439.5195 m
430.1602 439.04 L
494.96 439.04 L
494.96 440 L
430.1602 440 L
430.6396 439.5195 L
429.6797 439.5195 L
429.6797 439.04 L
430.1602 439.04 L
429.6797 439.5195 L
F430.1602 454.4004 m
429.6797 453.9199 L
429.6797 439.5195 L
430.6396 439.5195 L
430.6396 453.9199 L
430.1602 453.4404 L
430.1602 454.4004 L
429.6797 454.4004 L
429.6797 453.9199 L
430.1602 454.4004 L
Fq425.7197 442.1602 m
500.7197 442.1602 L
500.7197 450.7998 L
425.7197 450.7998 L
425.7197 442.1602 L
hWnu0 To
1 0 0 1 434.96 443.96 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 Xa
7 Tt
90 90 90 TW
0.0521 Tc
-0.2067 Tw
(10/100 Etherne) Tj 
(\r) TX 
TO
0 To
1 0 0 1 488 443.96 0 Tp
0 Tv
TP
0 Tr
-1000 Tt
100 100 100 TW
-7.44 Tc
0 Tw
(t) Tx 
(\r) TX 
TO
UQ0 A
0 O
0 0 0 Xa
0 J 0 j 1 w 4 M []0 d1 XR
430.1602 446.7197 m
422.96 443.5996 L
430.1602 446.7197 L
422.96 449.8398 L
422.96 443.5996 L
430.1602 446.7197 L
F0 XR
415.2803 446.7197 m
415.2803 446 L
423.6797 446 L
423.6797 447.4404 L
415.2803 447.4404 L
415.2803 446.7197 L
F1 XR
408.5596 446.7197 m
415.7598 443.5996 L
408.5596 446.7197 L
415.7598 449.8398 L
415.7598 443.5996 L
408.5596 446.7197 L
F462.5596 453.9199 m
459.4404 461.1201 L
462.5596 453.9199 L
465.6797 461.1201 L
459.4404 461.1201 L
462.5596 453.9199 L
F0 XR
462.5596 469.04 m
461.8398 469.04 L
461.8398 460.4004 L
463.2803 460.4004 L
463.2803 469.04 L
462.5596 469.04 L
F1 XR
462.5596 475.5195 m
459.4404 468.3203 L
462.5596 475.5195 L
465.6797 468.3203 L
459.4404 468.3203 L
462.5596 475.5195 L
F0 XR
463.04 525.9199 m
462.5596 526.4004 L
433.7598 526.4004 L
433.7598 525.4404 L
462.5596 525.4404 L
462.0801 525.9199 L
463.04 525.9199 L
463.04 526.4004 L
462.5596 526.4004 L
463.04 525.9199 L
F462.5596 511.04 m
463.04 511.5195 L
463.04 525.9199 L
462.0801 525.9199 L
462.0801 511.5195 L
462.5596 512 L
462.5596 511.04 L
463.04 511.04 L
463.04 511.5195 L
462.5596 511.04 L
F433.2803 511.5195 m
433.7598 511.04 L
462.5596 511.04 L
462.5596 512 L
433.7598 512 L
434.2402 511.5195 L
433.2803 511.5195 L
433.2803 511.04 L
433.7598 511.04 L
433.2803 511.5195 L
F433.7598 526.4004 m
433.2803 525.9199 L
433.2803 511.5195 L
434.2402 511.5195 L
434.2402 525.9199 L
433.7598 525.4404 L
433.7598 526.4004 L
433.2803 526.4004 L
433.2803 525.9199 L
433.7598 526.4004 L
Fq431 514.1602 m
500.7197 514.1602 L
500.7197 522.7998 L
431 522.7998 L
431 514.1602 L
hWnu0 To
1 0 0 1 440.2402 515.96 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 Xa
%_ 0 50 XQ
/_Arial-BoldMT 7.44 7.44 -2.8009 Tf
0 Ts
100 100 Tz
-1 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
0 TA
%_ 0 XL
0 TY
0 TV
36 0 Xb
XB
0 0 100 TC
100 100 100 TW
25 TG
0 0 0 Ti
0 Ta
0 1 2 2 3 Th
0 Tq
0 Tg
0 0 Tl
-0.0074 Tc
0 Tw
(US) Tx 
(\r) TX 
TO
0 To
1 0 0 1 450.5596 515.96 0 Tp
0 Tv
TP
0 Tr
-1000 Tt
-7.44 Tc
(B) Tx 
(\r) TX 
TO
UQ0 A
0 O
0 0 0 Xa
0 J 0 j 1 w 4 M []0 d1 XR
448.1602 489.9199 m
445.04 497.1201 L
448.1602 489.9199 L
451.2803 497.1201 L
445.04 497.1201 L
448.1602 489.9199 L
F0 XR
448.1602 505.04 m
447.4404 505.04 L
447.4404 496.4004 L
448.8799 496.4004 L
448.8799 505.04 L
448.1602 505.04 L
F1 XR
448.1602 511.5195 m
445.04 504.3203 L
448.1602 511.5195 L
451.2803 504.3203 L
445.04 504.3203 L
448.1602 511.5195 L
F0 To
1 0 0 1 371.3604 515.96 0 Tp
0 Tv
TP
0 Tr
0 XR
%_ 0 50 XQ
/_Arial-BoldMT 6.7197 6.7197 -2.5297 Tf
0 Ts
96.3011 100 Tz
501 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
0 TA
%_ 0 XL
0 TY
0 TV
34.6668 0 Xb
XB
0 0 100 TC
100 100 100 TW
25 TG
0 0 0 Ti
0 Ta
0 1 2 2 3 Th
0 Tq
0 Tg
0 0 Tl
3.3666 Tc
0 Tw
(I) Tx 
(\r) TX 
TO
0 To
1 0 0 1 376.4004 515.96 0 Tp
0 Tv
TP
0 Tr
3988 Tt
26.7982 Tc
(C) Tx 
(\r) TX 
TO
0 To
1 0 0 1 373.2803 518.3604 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 5.76 5.76 -2.1684 Tf
95.6512 100 Tz
359 Tt
34.4344 0 Xb
XB
2.0678 Tc
(2) Tx 
(\r) TX 
TO
391.04 525.9199 m
390.5596 526.4004 L
361.7598 526.4004 L
361.7598 525.4404 L
390.5596 525.4404 L
390.0801 525.9199 L
391.04 525.9199 L
391.04 526.4004 L
390.5596 526.4004 L
391.04 525.9199 L
F390.5596 511.04 m
391.04 511.5195 L
391.04 525.9199 L
390.0801 525.9199 L
390.0801 511.5195 L
390.5596 512 L
390.5596 511.04 L
391.04 511.04 L
391.04 511.5195 L
390.5596 511.04 L
F361.2803 511.5195 m
361.7598 511.04 L
390.5596 511.04 L
390.5596 512 L
361.7598 512 L
362.2402 511.5195 L
361.2803 511.5195 L
361.2803 511.04 L
361.7598 511.04 L
361.2803 511.5195 L
F361.7598 526.4004 m
361.2803 525.9199 L
361.2803 511.5195 L
362.2402 511.5195 L
362.2402 525.9199 L
361.7598 525.4404 L
361.7598 526.4004 L
361.2803 526.4004 L
361.2803 525.9199 L
361.7598 526.4004 L
F1 XR
376.1602 489.9199 m
373.04 497.1201 L
376.1602 489.9199 L
379.2803 497.1201 L
373.04 497.1201 L
376.1602 489.9199 L
F0 XR
376.1602 505.04 m
375.4404 505.04 L
375.4404 496.4004 L
376.8799 496.4004 L
376.8799 505.04 L
376.1602 505.04 L
F1 XR
376.1602 511.5195 m
373.04 504.3203 L
376.1602 511.5195 L
379.2803 504.3203 L
373.04 504.3203 L
376.1602 511.5195 L
F0 XR
427.04 525.9199 m
426.5596 526.4004 L
397.7598 526.4004 L
397.7598 525.4404 L
426.5596 525.4404 L
426.0801 525.9199 L
427.04 525.9199 L
427.04 526.4004 L
426.5596 526.4004 L
427.04 525.9199 L
F426.5596 511.04 m
427.04 511.5195 L
427.04 525.9199 L
426.0801 525.9199 L
426.0801 511.5195 L
426.5596 512 L
426.5596 511.04 L
427.04 511.04 L
427.04 511.5195 L
426.5596 511.04 L
F397.2803 511.5195 m
397.7598 511.04 L
426.5596 511.04 L
426.5596 512 L
397.7598 512 L
398.2402 511.5195 L
397.2803 511.5195 L
397.2803 511.04 L
397.7598 511.04 L
397.2803 511.5195 L
F397.7598 526.4004 m
397.2803 525.9199 L
397.2803 511.5195 L
398.2402 511.5195 L
398.2402 525.9199 L
397.7598 525.4404 L
397.7598 526.4004 L
397.2803 526.4004 L
397.2803 525.9199 L
397.7598 526.4004 L
F1 XR
404.2402 521.5996 m
405.2002 521.5996 L
405.2002 517.5195 L
405.4404 517.2803 L
405.4404 517.04 L
406.6396 517.04 L
406.6396 517.2803 L
406.8799 517.2803 L
406.8799 521.5996 L
407.8398 521.5996 L
407.8398 517.5195 L
407.5996 517.5195 L
407.5996 516.7998 L
407.3604 516.7998 L
407.3604 516.5596 L
406.8799 516.0801 L
405.2002 516.0801 L
405.2002 516.3203 L
404.96 516.3203 L
404.7197 516.5596 L
404.7197 516.7998 L
404.4805 516.7998 L
404.4805 517.7598 L
404.2402 517.7598 L
404.2402 521.5996 L
F0 XR
%AI5_File:
%AI5_BeginRaster
() 1 XG
[ 0.12 0 0 0.12 408.3203 521.6016 ] 37 46 1 Xh
[ 0.12 0 0 0.12 408.3203 521.6016 ] 0 0 37 46 37 46 1 1 0 0 0 1
%%BeginData: 4
XI
%FFFC07FFF8FFFC07FFF8FFF803FFF8FFF803FFF8FFF803FFF8FFF001FFF8
%FFF001FFF8FFF001FFF8FFF000FFF8FFE000FFF8FFE000FFF8FFE0007FF8
%FFC0007FF8FFC0003FF8FFC0203FF8FF80203FF8FF80201FF8FF80601FF8
%FF80701FF8FF00F00FF8FF00F00FF8FF00F00FF8FE01F807F8FE01F807F8
%FE01F807F8FC03F803F8FC03FC03F8FC07FC03F8F8000001F8F8000001F8
%F8000001F8F8000000F8F0000000F8F0000000F8F000000078E000000078
%E01FFF0038E01FFF0038C01FFF8038C03FFF8018C03FFFC018C03FFFC018
%803FFFC008803FFFE008807FFFE008007FFFF000
%%EndData
XH
%AI5_EndRaster
F%AI5_File:
%AI5_BeginRaster
() 1 XG
[ 0.12 0 0 0.12 413.1201 521.6016 ] 32 46 1 Xh
[ 0.12 0 0 0.12 413.1201 521.6016 ] 0 0 32 46 32 46 1 1 0 0 0 1
%%BeginData: 4
XI
%00001FFF00001FFF0000007F0000007F0000001F0000001F0000001F0000
%000F01FFC00701FFC00701FFF00701FFF00701FFF00701FFF00701FFF007
%01FFF00701FFF00701FFF00701FFC00701FFC0070000001F0000001F0000
%001F0000003F000001FF000001FF010007FF018007FF01FC01FF01FC01FF
%01FC007F01FE007F01FF007F01FF003F01FF001F01FF801F01FFC01F01FF
%C00F01FFE00F01FFE00701FFF00701FFF00301FFF00101FFF80101FFF800
%01FFFC00
%%EndData
XH
%AI5_EndRaster
F1 XR
418.4004 516.0801 m
418.4004 520.6396 L
416.96 520.6396 L
416.96 521.5996 L
420.5596 521.5996 L
420.5596 520.6396 L
419.1201 520.6396 L
419.1201 516.0801 L
418.4004 516.0801 L
F412.1602 489.9199 m
409.04 497.1201 L
412.1602 489.9199 L
415.2803 497.1201 L
409.04 497.1201 L
412.1602 489.9199 L
F0 XR
412.1602 505.04 m
411.4404 505.04 L
411.4404 496.4004 L
412.8799 496.4004 L
412.8799 505.04 L
412.1602 505.04 L
F1 XR
412.1602 511.5195 m
409.04 504.3203 L
412.1602 511.5195 L
415.2803 504.3203 L
409.04 504.3203 L
412.1602 511.5195 L
F0 XR
261.0801 482.7197 m
261.0801 484.6396 L
253.8799 484.6396 L
253.8799 480.7998 L
261.0801 480.7998 L
261.0801 482.7197 L
F131.96 407.2402 m
131.48 407.7197 L
95.48 407.7197 L
95.48 406.7598 L
131.48 406.7598 L
131 407.2402 L
131.96 407.2402 L
131.96 407.7197 L
131.48 407.7197 L
131.96 407.2402 L
F131.48 385.1602 m
131.96 385.6396 L
131.96 407.2402 L
131 407.2402 L
131 385.6396 L
131.48 386.1201 L
131.48 385.1602 L
131.96 385.1602 L
131.96 385.6396 L
131.48 385.1602 L
F95 385.6396 m
95.48 385.1602 L
131.48 385.1602 L
131.48 386.1201 L
95.48 386.1201 L
95.96 385.6396 L
95 385.6396 L
95 385.1602 L
95.48 385.1602 L
95 385.6396 L
F95.48 407.7197 m
95 407.2402 L
95 385.6396 L
95.96 385.6396 L
95.96 407.2402 L
95.48 406.7598 L
95.48 407.7197 L
95 407.7197 L
95 407.2402 L
95.48 407.7197 L
F0 To
1 0 0 1 105.7998 397.5195 0 Tp
0 Tv
TP
0 Tr
/_Arial-BoldMT 7.44 7.44 -2.8009 Tf
100 100 Tz
6 Tt
36 0 Xb
XB
0.0446 Tc
(PL) Tx 
(\r) TX 
TO
0 To
1 0 0 1 115.3999 397.5195 0 Tp
0 Tv
TP
0 Tr
-561 Tt
-4.1738 Tc
(B) Tx 
(\r) TX 
TO
0 To
1 0 0 1 101 389.8398 0 Tp
0 Tv
TP
0 Tr
2 Tt
0.0149 Tc
(Arbite) Tx 
(\r) TX 
TO
0 To
1 0 0 1 122.5996 389.8398 0 Tp
0 Tv
TP
0 Tr
-99 Tt
-0.7366 Tc
(r) Tx 
(\r) TX 
TO
254.3599 493.5195 m
253.8799 494 L
217.8799 494 L
217.8799 493.04 L
253.8799 493.04 L
253.3999 493.5195 L
254.3599 493.5195 L
254.3599 494 L
253.8799 494 L
254.3599 493.5195 L
F253.8799 471.4404 m
254.3599 471.9199 L
254.3599 493.5195 L
253.3999 493.5195 L
253.3999 471.9199 L
253.8799 472.4004 L
253.8799 471.4404 L
254.3599 471.4404 L
254.3599 471.9199 L
253.8799 471.4404 L
F217.3999 471.9199 m
217.8799 471.4404 L
253.8799 471.4404 L
253.8799 472.4004 L
217.8799 472.4004 L
218.3599 471.9199 L
217.3999 471.9199 L
217.3999 471.4404 L
217.8799 471.4404 L
217.3999 471.9199 L
F217.8799 494 m
217.3999 493.5195 L
217.3999 471.9199 L
218.3599 471.9199 L
218.3599 493.5195 L
217.8799 493.04 L
217.8799 494 L
217.3999 494 L
217.3999 493.5195 L
217.8799 494 L
F0 To
1 0 0 1 227.7202 483.7998 0 Tp
0 Tv
TP
0 Tr
3 Tt
0.0223 Tc
(OP) Tx 
(\r) TX 
TO
0 To
1 0 0 1 238.52 483.7998 0 Tp
0 Tv
TP
0 Tr
10000 Tt
74.4 Tc
(B) Tx 
(\r) TX 
TO
0 To
1 0 0 1 223.6401 476.1201 0 Tp
0 Tv
TP
0 Tr
2 Tt
0.0149 Tc
(Arbite) Tx 
(\r) TX 
TO
0 To
1 0 0 1 245.2397 476.1201 0 Tp
0 Tv
TP
0 Tr
10000 Tt
74.4 Tc
(r) Tx 
(\r) TX 
TO
247.1602 452.2402 m
246.6802 452.7197 L
199.8799 452.7197 L
199.8799 451.5195 L
246.6802 451.5195 L
246.2002 452.2402 L
247.1602 452.2402 L
247.1602 452.7197 L
246.6802 452.7197 L
247.1602 452.2402 L
F246.6802 426.4404 m
247.1602 426.9199 L
247.1602 452.2402 L
246.2002 452.2402 L
246.2002 426.9199 L
246.6802 427.6396 L
246.6802 426.4404 L
247.1602 426.4404 L
247.1602 426.9199 L
246.6802 426.4404 L
F199.3999 426.9199 m
199.8799 426.4404 L
246.6802 426.4404 L
246.6802 427.6396 L
199.8799 427.6396 L
200.3599 426.9199 L
199.3999 426.9199 L
199.3999 426.4404 L
199.8799 426.4404 L
199.3999 426.9199 L
F199.8799 452.7197 m
199.3999 452.2402 L
199.3999 426.9199 L
200.3599 426.9199 L
200.3599 452.2402 L
199.8799 451.5195 L
199.8799 452.7197 L
199.3999 452.7197 L
199.3999 452.2402 L
199.8799 452.7197 L
F0 To
1 0 0 1 207.7998 440.5996 0 Tp
0 Tv
TP
0 Tr
4 Tt
0.0298 Tc
(Interrup) Tx 
(\r) TX 
TO
0 To
1 0 0 1 236.1201 440.5996 0 Tp
0 Tv
TP
0 Tr
10000 Tt
74.4 Tc
(t) Tx 
(\r) TX 
TO
0 To
1 0 0 1 205.3999 432.9199 0 Tp
0 Tv
TP
0 Tr
3 Tt
0.0223 Tc
(Controlle) Tx 
(\r) TX 
TO
0 To
1 0 0 1 238.2803 432.9199 0 Tp
0 Tv
TP
0 Tr
10000 Tt
74.4 Tc
(r) Tx 
(\r) TX 
TO
1 XR
185.7202 446.7197 m
192.9199 449.8398 L
185.7202 446.7197 L
192.9199 443.5996 L
192.9199 449.8398 L
185.7202 446.7197 L
F0 XR
199.8799 446.7197 m
199.8799 447.4404 L
192.4399 447.4404 L
192.4399 446 L
199.8799 446 L
199.8799 446.7197 L
F474.0801 371.2402 m
473.3604 371.7197 L
415.7598 371.7197 L
415.7598 370.7598 L
473.3604 370.7598 L
472.8799 371.2402 L
474.0801 371.2402 L
474.0801 371.7197 L
473.3604 371.7197 L
474.0801 371.2402 L
F473.3604 341.96 m
474.0801 342.4404 L
474.0801 371.2402 L
472.8799 371.2402 L
472.8799 342.4404 L
473.3604 342.9199 L
473.3604 341.96 L
474.0801 341.96 L
474.0801 342.4404 L
473.3604 341.96 L
F415.2803 342.4404 m
415.7598 341.96 L
473.3604 341.96 L
473.3604 342.9199 L
415.7598 342.9199 L
416.2402 342.4404 L
415.2803 342.4404 L
415.2803 341.96 L
415.7598 341.96 L
415.2803 342.4404 L
F415.7598 371.7197 m
415.2803 371.2402 L
415.2803 342.4404 L
416.2402 342.4404 L
416.2402 371.2402 L
415.7598 370.7598 L
415.7598 371.7197 L
415.2803 371.7197 L
415.2803 371.2402 L
415.7598 371.7197 L
Fq425.2402 360.2002 m
500.7197 360.2002 L
500.7197 368.8398 L
425.2402 368.8398 L
425.2402 360.2002 L
hWnu0 To
1 0 0 1 434.4805 362 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 Xa
7 Tt
0.0521 Tc
(Rese) Tx 
(\r) TX 
TO
0 To
1 0 0 1 452.4805 362 0 Tp
0 Tv
TP
0 Tr
-1000 Tt
-7.44 Tc
(t) Tx 
(\r) TX 
TO
UQ0 A
q0 J 0 j 1 w 4 M []0 d0 XR
410.8398 352.7598 m
500.7197 352.7598 L
500.7197 361.4004 L
410.8398 361.4004 L
410.8398 352.7598 L
hWnu0 To
1 0 0 1 420.0801 354.5596 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 Xa
%_ 0 50 XQ
/_Arial-BoldMT 7.44 7.44 -2.8009 Tf
0 Ts
100 100 Tz
3 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
0 TA
%_ 0 XL
0 TY
0 TV
36 0 Xb
XB
0 0 100 TC
103 103 103 TW
25 TG
0 0 0 Ti
0 Ta
0 1 2 2 3 Th
0 Tq
0 Tg
0 0 Tl
0.0223 Tc
0.062 Tw
(Clock Contro) Tj 
(\r) TX 
TO
0 To
1 0 0 1 467.1201 354.5596 0 Tp
0 Tv
TP
0 Tr
-1000 Tt
100 100 100 TW
-7.44 Tc
0 Tw
(l) Tx 
(\r) TX 
TO
UQ0 A
0 To
1 0 0 1 422.2402 346.8799 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 Xa
0 J 0 j 1 w 4 M []0 d0 XR
%_ 0 50 XQ
/_Arial-BoldMT 7.44 7.44 -2.8009 Tf
0 Ts
100 100 Tz
5 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
0 TA
%_ 0 XL
0 TY
0 TV
36 0 Xb
XB
0 0 100 TC
91 91 91 TW
25 TG
0 0 0 Ti
0 Ta
0 1 2 2 3 Th
0 Tq
0 Tg
0 0 Tl
0.0372 Tc
-0.186 Tw
(Power Mgmt) Tj 
(\r) TX 
TO
195.5601 432.3203 m
195.5601 432.7998 L
185.48 432.7998 L
185.48 431.8398 L
195.5601 431.8398 L
195.5601 432.3203 L
F1 XR
199.8799 432.3203 m
195.0801 434.4805 L
199.8799 432.3203 L
195.0801 430.1602 L
195.0801 434.4805 L
199.8799 432.3203 L
F0 XR
221.96 356.8398 m
221.96 356.3604 L
232.2798 356.3604 L
232.2798 357.3203 L
221.96 357.3203 L
221.96 356.8398 L
F1 XR
217.6401 356.8398 m
222.4399 354.6797 L
217.6401 356.8398 L
222.4399 358.7598 L
222.4399 354.6797 L
217.6401 356.8398 L
F0 XR
256.7598 432.3203 m
256.7598 432.7998 L
246.6802 432.7998 L
246.6802 431.8398 L
256.7598 431.8398 L
256.7598 432.3203 L
F1 XR
261.0801 432.3203 m
256.2798 434.4805 L
261.0801 432.3203 L
256.2798 430.1602 L
256.2798 434.4805 L
261.0801 432.3203 L
F0 XR
307.2803 432.3203 m
307.2803 432.7998 L
297.0801 432.7998 L
297.0801 431.8398 L
307.2803 431.8398 L
307.2803 432.3203 L
F1 XR
311.5996 432.3203 m
306.7998 434.4805 L
311.5996 432.3203 L
306.7998 430.1602 L
306.7998 434.4805 L
311.5996 432.3203 L
F0 XR
372.0801 432.3203 m
372.0801 432.7998 L
361.7598 432.7998 L
361.7598 431.8398 L
372.0801 431.8398 L
372.0801 432.3203 L
F1 XR
376.4004 432.3203 m
371.5996 434.4805 L
376.4004 432.3203 L
371.5996 430.1602 L
371.5996 434.4805 L
376.4004 432.3203 L
F0 XR
387.6797 356.8398 m
387.6797 356.3604 L
415.7598 356.3604 L
415.7598 357.3203 L
387.6797 357.3203 L
387.6797 356.8398 L
F1 XR
383.3604 356.8398 m
388.1602 354.6797 L
383.3604 356.8398 L
388.1602 358.7598 L
388.1602 354.6797 L
383.3604 356.8398 L
F0 XR
445.04 432.3203 m
444.5596 432.7998 L
408.5596 432.7998 L
408.5596 431.8398 L
444.5596 431.8398 L
444.0801 432.3203 L
445.04 432.3203 L
445.04 432.7998 L
444.5596 432.7998 L
445.04 432.3203 L
F444.5596 375.5596 m
445.04 375.5596 L
445.04 432.3203 L
444.0801 432.3203 L
444.0801 375.5596 L
444.5596 375.5596 L
F1 XR
444.5596 371.2402 m
446.7197 376.04 L
444.5596 371.2402 L
442.6396 376.04 L
446.7197 376.04 L
444.5596 371.2402 L
F392.4805 403.6396 m
389.3604 410.8398 L
392.4805 403.6396 L
395.5996 410.8398 L
389.3604 410.8398 L
392.4805 403.6396 L
F0 XR
392.4805 418.7598 m
391.7598 418.7598 L
391.7598 410.1201 L
393.2002 410.1201 L
393.2002 418.7598 L
392.4805 418.7598 L
F1 XR
392.4805 425.2402 m
389.3604 418.04 L
392.4805 425.2402 L
395.5996 418.04 L
389.3604 418.04 L
392.4805 425.2402 L
Fq0 XR
295.2798 478.6396 m
500.7197 478.6396 L
500.7197 488 L
295.2798 488 L
295.2798 478.6396 L
hWnu0 To
1 0 0 1 306.0801 480.4404 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 Xa
/_Arial-BoldMT 8.4 8.4 -3.1623 Tf
103.0319 100 Tz
-9 Tt
37.0915 0 Xb
XB
100 100 100 TW
-0.0756 Tc
0 Tw
(On-Chip Peripheral Bus \(OPB\) 32-bi) Tx 
(\r) TX 
TO
0 To
1 0 0 1 450.5527 480.4404 0 Tp
0 Tv
TP
0 Tr
-1000 Tt
-8.4 Tc
(t) Tx 
(\r) TX 
TO
UQ0 A
0 To
1 0 0 1 213.0801 393.4404 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 Xa
0 J 0 j 1 w 4 M []0 d0 XR
%_ 0 50 XQ
/_Arial-BoldMT 8.4 8.4 -3.1623 Tf
0 Ts
103.0319 100 Tz
-10 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
0 TA
%_ 0 XL
0 TY
0 TV
37.0915 0 Xb
XB
0 0 100 TC
103 103 103 TW
25 TG
0 0 0 Ti
0 Ta
0 1 2 2 3 Th
0 Tq
0 Tg
0 0 Tl
-0.084 Tc
0.07 Tw
(Processor Local Bus \(PLB\) 128-bi) Tj 
(\r) TX 
TO
0 To
1 0 0 1 349.6318 393.4404 0 Tp
0 Tv
TP
0 Tr
249 Tt
100 100 100 TW
2.0916 Tc
0 Tw
(t) Tx 
(\r) TX 
TO
0 To
1 0 0 1 454.4023 411.4404 0 Tp
0 Tv
TP
0 Tr
-6 Tt
-0.0504 Tc
(Device) Tx 
(\r) TX 
TO
0 To
1 0 0 1 452.9619 403.04 0 Tp
0 Tv
TP
0 Tr
-10 Tt
-0.084 Tc
(Contro) Tx 
(\r) TX 
TO
0 To
1 0 0 1 480.8027 403.04 0 Tp
0 Tv
TP
0 Tr
277 Tt
2.3268 Tc
(l) Tx 
(\r) TX 
TO
0 To
1 0 0 1 451.042 394.4004 0 Tp
0 Tv
TP
0 Tr
-9 Tt
-0.0756 Tc
(Registe) Tx 
(\r) TX 
TO
0 To
1 0 0 1 481.7627 394.4004 0 Tp
0 Tv
TP
0 Tr
221 Tt
1.8564 Tc
(r) Tx 
(\r) TX 
TO
0 To
1 0 0 1 459.9219 386 0 Tp
0 Tv
TP
0 Tr
-15 Tt
-0.126 Tc
(Bu) Tx 
(\r) TX 
TO
0 To
1 0 0 1 471.2021 386 0 Tp
0 Tv
TP
0 Tr
54 Tt
0.4536 Tc
(s) Tx 
(\r) TX 
TO
178.2798 418.7598 m
177.5601 418.7598 L
177.5601 403.6396 L
179 403.6396 L
179 418.7598 L
178.2798 418.7598 L
F1 XR
178.2798 425.2402 m
175.1602 418.04 L
178.2798 425.2402 L
181.3999 418.04 L
175.1602 418.04 L
178.2798 425.2402 L
F0 XR
167.48 410.1201 m
168.2002 410.1201 L
168.2002 425.2402 L
166.7598 425.2402 L
166.7598 410.1201 L
167.48 410.1201 L
F1 XR
167.48 403.6396 m
170.6001 410.8398 L
167.48 403.6396 L
164.3599 410.8398 L
170.6001 410.8398 L
167.48 403.6396 L
F0 XR
326.2402 331.6396 m
325.7598 332.1201 L
289.8799 332.1201 L
289.8799 331.1602 L
325.7598 331.1602 L
325.2803 331.6396 L
326.2402 331.6396 L
326.2402 332.1201 L
325.7598 332.1201 L
326.2402 331.6396 L
F325.7598 316.7598 m
326.2402 317.2402 L
326.2402 331.6396 L
325.2803 331.6396 L
325.2803 317.2402 L
325.7598 317.7197 L
325.7598 316.7598 L
326.2402 316.7598 L
326.2402 317.2402 L
325.7598 316.7598 L
F289.3999 317.2402 m
289.8799 316.7598 L
325.7598 316.7598 L
325.7598 317.7197 L
289.8799 317.7197 L
290.3599 317.2402 L
289.3999 317.2402 L
289.3999 316.7598 L
289.8799 316.7598 L
289.3999 317.2402 L
F289.8799 332.1201 m
289.3999 331.6396 L
289.3999 317.2402 L
290.3599 317.2402 L
290.3599 331.6396 L
289.8799 331.1602 L
289.8799 332.1201 L
289.3999 332.1201 L
289.3999 331.6396 L
289.8799 332.1201 L
Fq287.8398 319.8799 m
500.7197 319.8799 L
500.7197 328.5195 L
287.8398 328.5195 L
287.8398 319.8799 L
hWnu0 To
1 0 0 1 297.0801 321.6797 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 Xa
/_Arial-BoldMT 7.44 7.44 -2.8009 Tf
100 100 Tz
6 Tt
36 0 Xb
XB
0.0446 Tc
(SRA) Tx 
(\r) TX 
TO
0 To
1 0 0 1 312.9199 321.6797 0 Tp
0 Tv
TP
0 Tr
10000 Tt
74.4 Tc
(M) Tx 
(\r) TX 
TO
UQ0 A
q0 J 0 j 1 w 4 M []0 d0 XR
342.4404 356.1201 m
500.7197 356.1201 L
500.7197 364.7598 L
342.4404 364.7598 L
342.4404 356.1201 L
hWnu0 To
1 0 0 1 351.6797 357.9199 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 Xa
%_ 0 50 XQ
/_Arial-BoldMT 7.44 7.44 -2.8009 Tf
0 Ts
100 100 Tz
8 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
0 TA
%_ 0 XL
0 TY
0 TV
36 0 Xb
XB
0 0 100 TC
100 100 100 TW
25 TG
0 0 0 Ti
0 Ta
0 1 2 2 3 Th
0 Tq
0 Tg
0 0 Tl
0.0595 Tc
0 Tw
(Custo) Tx 
(\r) TX 
TO
0 To
1 0 0 1 373.04 357.9199 0 Tp
0 Tv
TP
0 Tr
10000 Tt
74.4 Tc
(m) Tx 
(\r) TX 
TO
UQ0 A
0 To
1 0 0 1 355.5195 351.6797 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 Xa
0 J 0 j 1 w 4 M []0 d0 XR
%_ 0 50 XQ
/_Arial-BoldMT 7.44 7.44 -2.8009 Tf
0 Ts
100 100 Tz
5 Tt
%_0 0 100 100 Xu
%AI55J_GlyphSubst: GlyphSubstNone 
0 TA
%_ 0 XL
0 TY
0 TV
36 0 Xb
XB
0 0 100 TC
100 100 100 TW
25 TG
0 0 0 Ti
0 Ta
0 1 2 2 3 Th
0 Tq
0 Tg
0 0 Tl
0.0372 Tc
0 Tw
(Logi) Tx 
(\r) TX 
TO
0 To
1 0 0 1 371.3594 351.6797 0 Tp
0 Tv
TP
0 Tr
89 Tt
0.6622 Tc
(c) Tx 
(\r) TX 
TO
383.8398 367.6396 m
383.3604 368.1201 L
347.3604 368.1201 L
347.3604 367.1602 L
383.3604 367.1602 L
382.8799 367.6396 L
383.8398 367.6396 L
383.8398 368.1201 L
383.3604 368.1201 L
383.8398 367.6396 L
F383.3604 345.5596 m
383.8398 346.04 L
383.8398 367.6396 L
382.8799 367.6396 L
382.8799 346.04 L
383.3604 346.5195 L
383.3604 345.5596 L
383.8398 345.5596 L
383.8398 346.04 L
383.3604 345.5596 L
F346.8799 346.04 m
347.3604 345.5596 L
383.3604 345.5596 L
383.3604 346.5195 L
347.3604 346.5195 L
347.8398 346.04 L
346.8799 346.04 L
346.8799 345.5596 L
347.3604 345.5596 L
346.8799 346.04 L
F347.3604 368.1201 m
346.8799 367.6396 L
346.8799 346.04 L
347.8398 346.04 L
347.8398 367.6396 L
347.3604 367.1602 L
347.3604 368.1201 L
346.8799 368.1201 L
346.8799 367.6396 L
347.3604 368.1201 L
F1 XR
365.3604 367.6396 m
362.2402 374.8398 L
365.3604 367.6396 L
368.4805 374.8398 L
362.2402 374.8398 L
365.3604 367.6396 L
F0 XR
365.3604 382.7598 m
364.6396 382.7598 L
364.6396 374.1201 L
366.0801 374.1201 L
366.0801 382.7598 L
365.3604 382.7598 L
F1 XR
365.3604 389.2402 m
362.2402 382.04 L
365.3604 389.2402 L
368.4805 382.04 L
362.2402 382.04 L
365.3604 389.2402 L
F0 XR
337.04 356.8398 m
337.04 356.3604 L
347.3604 356.3604 L
347.3604 357.3203 L
337.04 357.3203 L
337.04 356.8398 L
F1 XR
332.7197 356.8398 m
337.5195 354.6797 L
332.7197 356.8398 L
337.5195 358.7598 L
337.5195 354.6797 L
332.7197 356.8398 L
F161.96 468.3203 m
164.1201 463.5195 L
161.96 468.3203 L
160.04 463.5195 L
164.1201 463.5195 L
161.96 468.3203 L
F0 XR
161.96 458 m
162.4399 458 L
162.4399 464 L
161.48 464 L
161.48 458 L
161.96 458 L
F1 XR
161.96 453.6797 m
164.1201 458.4805 L
161.96 453.6797 L
160.04 458.4805 L
164.1201 458.4805 L
161.96 453.6797 L
F0 XR
180.6802 482.4805 m
179.96 482.96 L
143.96 482.96 L
143.96 482 L
179.96 482 L
179.48 482.4805 L
180.6802 482.4805 L
180.6802 482.96 L
179.96 482.96 L
180.6802 482.4805 L
F179.96 467.5996 m
180.6802 468.0801 L
180.6802 482.4805 L
179.48 482.4805 L
179.48 468.0801 L
179.96 468.5596 L
179.96 467.5996 L
180.6802 467.5996 L
180.6802 468.0801 L
179.96 467.5996 L
F143.48 468.0801 m
143.96 467.5996 L
179.96 467.5996 L
179.96 468.5596 L
143.96 468.5596 L
144.6802 468.0801 L
143.48 468.0801 L
143.48 467.5996 L
143.96 467.5996 L
143.48 468.0801 L
F143.96 482.96 m
143.48 482.4805 L
143.48 468.0801 L
144.6802 468.0801 L
144.6802 482.4805 L
143.96 482 L
143.96 482.96 L
143.48 482.96 L
143.48 482.4805 L
143.96 482.96 L
F0 To
1 0 0 1 154.7598 472.5195 0 Tp
0 Tv
TP
0 Tr
6 Tt
0.0446 Tc
(FP) Tx 
(\r) TX 
TO
0 To
1 0 0 1 164.3599 472.5195 0 Tp
0 Tv
TP
0 Tr
5955 Tt
44.3052 Tc
(U) Tx 
(\r) TX 
TO
1 XR
178.2798 367.6396 m
175.1602 374.8398 L
178.2798 367.6396 L
181.3999 374.8398 L
175.1602 374.8398 L
178.2798 367.6396 L
F0 XR
178.2798 382.7598 m
177.5601 382.7598 L
177.5601 374.1201 L
179 374.1201 L
179 382.7598 L
178.2798 382.7598 L
F1 XR
178.2798 389.2402 m
175.1602 382.04 L
178.2798 389.2402 L
181.3999 382.04 L
175.1602 382.04 L
178.2798 389.2402 L
F250.2798 367.6396 m
247.1602 374.8398 L
250.2798 367.6396 L
253.3999 374.8398 L
247.1602 374.8398 L
250.2798 367.6396 L
F0 XR
250.2798 382.7598 m
249.5601 382.7598 L
249.5601 374.1201 L
251 374.1201 L
251 382.7598 L
250.2798 382.7598 L
F1 XR
250.2798 389.2402 m
247.1602 382.04 L
250.2798 389.2402 L
253.3999 382.04 L
247.1602 382.04 L
250.2798 389.2402 L
F329.3604 489.9199 m
326.2402 497.1201 L
329.3604 489.9199 L
332.4805 497.1201 L
326.2402 497.1201 L
329.3604 489.9199 L
F0 XR
329.3604 505.04 m
328.6396 505.04 L
328.6396 496.4004 L
330.0801 496.4004 L
330.0801 505.04 L
329.3604 505.04 L
F1 XR
329.3604 511.5195 m
326.2402 504.3203 L
329.3604 511.5195 L
332.4805 504.3203 L
326.2402 504.3203 L
329.3604 511.5195 L
F279.0801 489.9199 m
275.96 497.1201 L
279.0801 489.9199 L
282.2002 497.1201 L
275.96 497.1201 L
279.0801 489.9199 L
F0 XR
279.0801 505.04 m
278.3599 505.04 L
278.3599 496.4004 L
279.7998 496.4004 L
279.7998 505.04 L
279.0801 505.04 L
F1 XR
279.0801 511.5195 m
275.96 504.3203 L
279.0801 511.5195 L
282.2002 504.3203 L
275.96 504.3203 L
279.0801 511.5195 L
F0 XR
499.2803 525.9199 m
498.5596 526.4004 L
469.7598 526.4004 L
469.7598 525.4404 L
498.5596 525.4404 L
498.0801 525.9199 L
499.2803 525.9199 L
499.2803 526.4004 L
498.5596 526.4004 L
499.2803 525.9199 L
F498.5596 511.04 m
499.2803 511.5195 L
499.2803 525.9199 L
498.0801 525.9199 L
498.0801 511.5195 L
498.5596 512 L
498.5596 511.04 L
499.2803 511.04 L
499.2803 511.5195 L
498.5596 511.04 L
F469.2803 511.5195 m
469.7598 511.04 L
498.5596 511.04 L
498.5596 512 L
469.7598 512 L
470.4805 511.5195 L
469.2803 511.5195 L
469.2803 511.04 L
469.7598 511.04 L
469.2803 511.5195 L
F469.7598 526.4004 m
469.2803 525.9199 L
469.2803 511.5195 L
470.4805 511.5195 L
470.4805 525.9199 L
469.7598 525.4404 L
469.7598 526.4004 L
469.2803 526.4004 L
469.2803 525.9199 L
469.7598 526.4004 L
Fq465.5596 514.1602 m
500.7197 514.1602 L
500.7197 522.7998 L
465.5596 522.7998 L
465.5596 514.1602 L
hWnu0 To
1 0 0 1 474.7998 515.96 0 Tp
0 Tv
TP
0 Tr
0 O
0 0 0 Xa
6 Tt
0.0446 Tc
(GPI) Tx 
(\r) TX 
TO
0 To
1 0 0 1 487.7598 515.96 0 Tp
0 Tv
TP
0 Tr
1383 Tt
10.2895 Tc
(O) Tx 
(\r) TX 
TO
UQ0 A
0 O
0 0 0 Xa
0 J 0 j 1 w 4 M []0 d1 XR
484.1602 489.9199 m
481.04 497.1201 L
484.1602 489.9199 L
487.2803 497.1201 L
481.04 497.1201 L
484.1602 489.9199 L
F0 XR
484.1602 505.04 m
483.4404 505.04 L
483.4404 496.4004 L
484.8799 496.4004 L
484.8799 505.04 L
484.1602 505.04 L
F1 XR
484.1602 511.5195 m
481.04 504.3203 L
484.1602 511.5195 L
487.2803 504.3203 L
481.04 504.3203 L
484.1602 511.5195 L
FLB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
